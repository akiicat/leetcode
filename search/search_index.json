{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"tags/","title":"Tags","text":""},{"location":"tags/#array","title":"Array","text":"<ul> <li>1. Two Sum</li> <li>1000. Minimum Cost to Merge Stones</li> <li>1001. Grid Illumination</li> <li>1002. Find Common Characters</li> <li>1004. Max Consecutive Ones III</li> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1007. Minimum Domino Rotations For Equal Row</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1011. Capacity To Ship Packages Within D Days</li> <li>1013. Partition Array Into Three Parts With Equal Sum</li> <li>1014. Best Sightseeing Pair</li> <li>1018. Binary Prefix Divisible By 5</li> <li>1019. Next Greater Node In Linked List</li> <li>1020. Number of Enclaves</li> <li>1024. Video Stitching</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1029. Two City Scheduling</li> <li>1030. Matrix Cells in Distance Order</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1032. Stream of Characters</li> <li>1034. Coloring A Border</li> <li>1035. Uncrossed Lines</li> <li>1036. Escape a Large Maze</li> <li>1037. Valid Boomerang</li> <li>1039. Minimum Score Triangulation of Polygon</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1043. Partition Array for Maximum Sum</li> <li>1046. Last Stone Weight</li> <li>1048. Longest String Chain</li> <li>1049. Last Stone Weight II</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>1051. Height Checker</li> <li>1052. Grumpy Bookstore Owner</li> <li>1053. Previous Permutation With One Swap</li> <li>1054. Distant Barcodes</li> <li>1057. Campus Bikes</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>1060. Missing Element in Sorted Array</li> <li>1063. Number of Valid Subarrays</li> <li>1064. Fixed Point</li> <li>1065. Index Pairs of a String</li> <li>1066. Campus Bikes II</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1073. Adding Two Negabinary Numbers</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1085. Sum of Digits in the Minimum Number</li> <li>1086. High Five</li> <li>1089. Duplicate Zeros</li> <li>1090. Largest Values From Labels</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1093. Statistics from a Large Sample</li> <li>1094. Car Pooling</li> <li>1095. Find in Mountain Array</li> <li>1099. Two Sum Less Than K</li> <li>11. Container With Most Water</li> <li>1101. The Earliest Moment When Everyone Become Friends</li> <li>1102. Path With Maximum Minimum Value</li> <li>1105. Filling Bookcase Shelves</li> <li>1109. Corporate Flight Bookings</li> <li>1121. Divide Array Into Increasing Sequences</li> <li>1122. Relative Sort Array</li> <li>1124. Longest Well-Performing Interval</li> <li>1125. Smallest Sufficient Team</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1131. Maximum of Absolute Value Expression</li> <li>1133. Largest Unique Number</li> <li>1139. Largest 1-Bordered Square</li> <li>1140. Stone Game II</li> <li>1144. Decrease Elements To Make Array Zigzag</li> <li>1146. Snapshot Array</li> <li>1150. Check If a Number Is Majority Element in a Sorted Array</li> <li>1151. Minimum Swaps to Group All 1's Together</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1157. Online Majority Element In Subarray</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1162. As Far from Land as Possible</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1176. Diet Plan Performance</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>118. Pascal's Triangle</li> <li>1181. Before and After Puzzle</li> <li>1182. Shortest Distance to Target Color</li> <li>1184. Distance Between Bus Stops</li> <li>1186. Maximum Subarray Sum with One Deletion</li> <li>1187. Make Array Strictly Increasing</li> <li>119. Pascal's Triangle II</li> <li>1191. K-Concatenation Maximum Sum</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>120. Triangle</li> <li>1200. Minimum Absolute Difference</li> <li>1207. Unique Number of Occurrences</li> <li>121. Best Time to Buy and Sell Stock</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>1219. Path with Maximum Gold</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1222. Queens That Can Attack the King</li> <li>1223. Dice Roll Simulation</li> <li>1224. Maximum Equal Frequency</li> <li>1228. Missing Number In Arithmetic Progression</li> <li>1229. Meeting Scheduler</li> <li>123. Best Time to Buy and Sell Stock III</li> <li>1231. Divide Chocolate</li> <li>1232. Check If It Is a Straight Line</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1243. Array Transformation</li> <li>1246. Palindrome Removal</li> <li>1248. Count Number of Nice Subarrays</li> <li>1250. Check If It Is a Good Array</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1254. Number of Closed Islands</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>1260. Shift 2D Grid</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1266. Minimum Time Visiting All Points</li> <li>1267. Count Servers that Communicate</li> <li>1268. Search Suggestions System</li> <li>1272. Remove Interval</li> <li>1274. Number of Ships in a Rectangle</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1277. Count Square Submatrices with All Ones</li> <li>128. Longest Consecutive Sequence</li> <li>1282. Group the People Given the Group Size They Belong To</li> <li>1283. Find the Smallest Divisor Given a Threshold</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1287. Element Appearing More Than 25% In Sorted Array</li> <li>1288. Remove Covered Intervals</li> <li>1289. Minimum Falling Path Sum II</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>1295. Find Numbers with Even Number of Digits</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>1299. Replace Elements with Greatest Element on Right Side</li> <li>130. Surrounded Regions</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1301. Number of Paths with Max Score</li> <li>1304. Find N Unique Integers Sum up to Zero</li> <li>1306. Jump Game III</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1310. XOR Queries of a Subarray</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1313. Decompress Run-Length Encoded List</li> <li>1314. Matrix Block Sum</li> <li>1324. Print Words Vertically</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1329. Sort the Matrix Diagonally</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1331. Rank Transform of an Array</li> <li>1333. Filter Restaurants by Vegan-Friendly, Price and Distance</li> <li>1335. Minimum Difficulty of a Job Schedule</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>134. Gas Station</li> <li>1340. Jump Game V</li> <li>1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</li> <li>1345. Jump Game IV</li> <li>1346. Check If N and Its Double Exist</li> <li>1349. Maximum Students Taking Exam</li> <li>135. Candy</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1352. Product of the Last K Numbers</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1354. Construct Target Array With Multiple Sums</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1357. Apply Discount Every n Orders</li> <li>136. Single Number</li> <li>1363. Largest Multiple of Three</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>137. Single Number II</li> <li>1375. Number of Times Binary String Is Prefix-Aligned</li> <li>1380. Lucky Numbers in a Matrix</li> <li>1381. Design a Stack With Increment Operation</li> <li>1383. Maximum Performance of a Team</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1386. Cinema Seat Allocation</li> <li>1388. Pizza With 3n Slices</li> <li>1389. Create Target Array in the Given Order</li> <li>139. Word Break</li> <li>1390. Four Divisors</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1394. Find Lucky Integer in an Array</li> <li>1395. Count Number of Teams</li> <li>140. Word Break II</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1406. Stone Game III</li> <li>1408. String Matching in an Array</li> <li>1409. Queries on a Permutation With Key</li> <li>1413. Minimum Value to Get Positive Step by Step Sum</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1424. Diagonal Traverse II</li> <li>1425. Constrained Subsequence Sum</li> <li>1426. Counting Elements</li> <li>1427. Perform String Shifts</li> <li>1428. Leftmost Column with at Least a One</li> <li>1429. First Unique Number</li> <li>1431. Kids With the Greatest Number of Candies</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1437. Check If All 1's Are at Least Length K Places Away</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1441. Build an Array With Stack Operations</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1449. Form Largest Integer With Digits That Add up to Target</li> <li>1450. Number of Students Doing Homework at a Given Time</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>1458. Max Dot Product of Two Subsequences</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1463. Cherry Pickup II</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1470. Shuffle the Array</li> <li>1471. The k Strongest Values in an Array</li> <li>1472. Design Browser History</li> <li>1473. Paint House III</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>1476. Subrectangle Queries</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1478. Allocate Mailboxes</li> <li>1480. Running Sum of 1d Array</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1487. Making File Names Unique</li> <li>1488. Avoid Flood in The City</li> <li>149. Max Points on a Line</li> <li>1491. Average Salary Excluding the Minimum and Maximum Salary</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>1499. Max Value of Equation</li> <li>15. 3Sum</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1502. Can Make Arithmetic Progression From Sequence</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1504. Count Submatrices With All Ones</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>1512. Number of Good Pairs</li> <li>1514. Path with Maximum Probability</li> <li>152. Maximum Product Subarray</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1528. Shuffle String</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>1533. Find the Index of the Large Integer</li> <li>1534. Count Good Triplets</li> <li>1535. Find the Winner of an Array Game</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1537. Get the Maximum Score</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>1539. Kth Missing Positive Number</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1547. Minimum Cost to Cut a Stick</li> <li>1550. Three Consecutive Odds</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1560. Most Visited Sector in  a Circular Track</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1562. Find Latest Group of Size M</li> <li>1563. Stone Game V</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1566. Detect Pattern of Length M Repeated K or More Times</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1572. Matrix Diagonal Sum</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1575. Count All Possible Routes</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1582. Special Positions in a Binary Matrix</li> <li>1583. Count Unhappy Friends</li> <li>1584. Min Cost to Connect All Points</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>1590. Make Sum Divisible by P</li> <li>1591. Strange Printer II</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1598. Crawler Log Folder</li> <li>1599. Maximum Profit of Operating a Centennial Wheel</li> <li>16. 3Sum Closest</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1610. Maximum Number of Visible Points</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1619. Mean of Array After Removing Some Elements</li> <li>162. Find Peak Element</li> <li>1620. Coordinate With Maximum Network Quality</li> <li>1626. Best Team With No Conflicts</li> <li>1627. Graph Connectivity With Threshold</li> <li>1629. Slowest Key</li> <li>163. Missing Ranges</li> <li>1630. Arithmetic Subarrays</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1637. Widest Vertical Area Between Two Points Containing No Points</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>164. Maximum Gap</li> <li>1640. Check Array Formation Through Concatenation</li> <li>1642. Furthest Building You Can Reach</li> <li>1643. Kth Smallest Instructions</li> <li>1646. Get Maximum in Generated Array</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1649. Create Sorted Array through Instructions</li> <li>1652. Defuse the Bomb</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1655. Distribute Repeating Integers</li> <li>1656. Design an Ordered Stream</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1662. Check If Two String Arrays are Equivalent</li> <li>1664. Ways to Make a Fair Array</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1670. Design Front Middle Back Queue</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1672. Richest Customer Wealth</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1675. Minimize Deviation in Array</li> <li>1679. Max Number of K-Sum Pairs</li> <li>1681. Minimum Incompatibility</li> <li>1684. Count the Number of Consistent Strings</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1686. Stone Game VI</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>169. Majority Element</li> <li>1690. Stone Game VII</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1695. Maximum Erasure Value</li> <li>1696. Jump Game VI</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>170. Two Sum III - Data structure design</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1701. Average Waiting Time</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1706. Where Will the Ball Fall</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1708. Largest Subarray Length K</li> <li>1710. Maximum Units on a Truck</li> <li>1711. Count Good Meals</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1714. Sum Of Special Evenly-Spaced Elements In Array</li> <li>1718. Construct the Lexicographically Largest Valid Sequence</li> <li>1720. Decode XORed Array</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1725. Number Of Rectangles That Can Form The Largest Square</li> <li>1726. Tuple with Same Product</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1728. Cat and Mouse II</li> <li>1730. Shortest Path to Get Food</li> <li>1732. Find the Highest Altitude</li> <li>1733. Minimum Number of People to Teach</li> <li>1734. Decode XORed Permutation</li> <li>1735. Count Ways to Make Array With Product</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>174. Dungeon Game</li> <li>1743. Restore the Array From Adjacent Pairs</li> <li>1744. Can You Eat Your Favorite Candy on Your Favorite Day?</li> <li>1746. Maximum Subarray Sum After One Operation</li> <li>1748. Sum of Unique Elements</li> <li>1749. Maximum Absolute Sum of Any Subarray</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1752. Check if Array Is Sorted and Rotated</li> <li>1755. Closest Subsequence Sum</li> <li>1756. Design Most Recently Used Queue</li> <li>1760. Minimum Limit of Balls in a Bag</li> <li>1762. Buildings With an Ocean View</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>1765. Map of Highest Peak</li> <li>1769. Minimum Number of Operations to Move All Balls to Each Box</li> <li>1770. Maximum Score from Performing Multiplication Operations</li> <li>1772. Sort Features by Popularity</li> <li>1773. Count Items Matching a Rule</li> <li>1774. Closest Dessert Cost</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1776. Car Fleet II</li> <li>1779. Find Nearest Point That Has the Same X or Y Coordinate</li> <li>1785. Minimum Elements to Add to Form a Given Sum</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1788. Maximize the Beauty of the Garden</li> <li>179. Largest Number</li> <li>1792. Maximum Average Pass Ratio</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1798. Maximum Number of Consecutive Values You Can Make</li> <li>1799. Maximize Score After N Operations</li> <li>18. 4Sum</li> <li>1800. Maximum Ascending Subarray Sum</li> <li>1801. Number of Orders in the Backlog</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1813. Sentence Similarity III</li> <li>1814. Count Nice Pairs in an Array</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1816. Truncate Sentence</li> <li>1817. Finding the Users Active Minutes</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1822. Sign of the Product of an Array</li> <li>1823. Find the Winner of the Circular Game</li> <li>1824. Minimum Sideway Jumps</li> <li>1826. Faulty Sensor</li> <li>1827. Minimum Operations to Make the Array Increasing</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1829. Maximum XOR for Each Query</li> <li>1833. Maximum Ice Cream Bars</li> <li>1834. Single-Threaded CPU</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1840. Maximum Building Height</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1847. Closest Room</li> <li>1848. Minimum Distance to the Target Element</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>1854. Maximum Population Year</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1856. Maximum Subarray Min-Product</li> <li>1861. Rotating the Box</li> <li>1862. Sum of Floored Pairs</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>1868. Product of Two Run-Length Encoded Arrays</li> <li>1870. Minimum Speed to Arrive on Time</li> <li>1872. Stone Game VIII</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>188. Best Time to Buy and Sell Stock IV</li> <li>1882. Process Tasks Using Servers</li> <li>1883. Minimum Skips to Arrive at Meeting On Time</li> <li>1885. Count Pairs in Two Arrays</li> <li>1886. Determine Whether Matrix Can Be Obtained By Rotation</li> <li>1887. Reduction Operations to Make the Array Elements Equal</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>189. Rotate Array</li> <li>1891. Cutting Ribbons</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1895. Largest Magic Square</li> <li>1898. Maximum Number of Removable Characters</li> <li>1899. Merge Triplets to Form Target Triplet</li> <li>1901. Find a Peak Element II</li> <li>1905. Count Sub Islands</li> <li>1906. Minimum Absolute Difference Queries</li> <li>1908. Game of Nim</li> <li>1909. Remove One Element to Make the Array Strictly Increasing</li> <li>1911. Maximum Alternating Subsequence Sum</li> <li>1912. Design Movie Rental System</li> <li>1913. Maximum Product Difference Between Two Pairs</li> <li>1914. Cyclically Rotating a Grid</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1920. Build Array from Permutation</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1923. Longest Common Subpath</li> <li>1924. Erect the Fence II</li> <li>1926. Nearest Exit from Entrance in Maze</li> <li>1929. Concatenation of Array</li> <li>1936. Add Minimum Number of Rungs</li> <li>1937. Maximum Number of Points with Cost</li> <li>1938. Maximum Genetic Difference Query</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>1943. Describe the Painting</li> <li>1944. Number of Visible People in a Queue</li> <li>1946. Largest Number After Mutating Substring</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1948. Delete Duplicate Folders in System</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1953. Maximum Number of Weeks for Which You Can Work</li> <li>1955. Count Number of Special Subsequences</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1958. Check if Move is Legal</li> <li>1959. Minimum Total Space Wasted With K Resizing Operations</li> <li>1961. Check If String Is a Prefix of Array</li> <li>1962. Remove Stones to Minimize the Total</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>1966. Binary Searchable Numbers in an Unsorted Array</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1975. Maximum Matrix Sum</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>198. House Robber</li> <li>1980. Find Unique Binary String</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1982. Find Array Given Subset Sums</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1989. Maximum Number of People That Can Be Caught in Tag</li> <li>1991. Find the Middle Index in Array</li> <li>1992. Find All Groups of Farmland</li> <li>1994. The Number of Good Subsets</li> <li>1995. Count Special Quadruplets</li> <li>1996. The Number of Weak Characters in the Game</li> <li>1997. First Day Where You Have Been in All the Rooms</li> <li>1998. GCD Sort of an Array</li> <li>200. Number of Islands</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2007. Find Original Array From Doubled Array</li> <li>2008. Maximum Earnings From Taxi</li> <li>2009. Minimum Number of Operations to Make Array Continuous</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2012. Sum of Beauty in the Array</li> <li>2013. Detect Squares</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2016. Maximum Difference Between Increasing Elements</li> <li>2017. Grid Game</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2021. Brightest Position on Street</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2023. Number of Pairs of Strings With Concatenation Equal to Target</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2028. Find Missing Observations</li> <li>2029. Stone Game IX</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2032. Two Out of Three</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2036. Maximum Alternating Subarray Sum</li> <li>2037. Minimum Number of Moves to Seat Everyone</li> <li>2039. The Time When the Network Becomes Idle</li> <li>204. Count Primes</li> <li>2040. Kth Smallest Product of Two Sorted Arrays</li> <li>2043. Simple Bank System</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2049. Count Nodes With the Highest Score</li> <li>2052. Minimum Cost to Separate Sentence Into Rows</li> <li>2053. Kth Distinct String in an Array</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2055. Plates Between Candles</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2057. Smallest Index With Equal Value</li> <li>2059. Minimum Operations to Convert Number</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2064. Minimized Maximum of Products Distributed to Any Store</li> <li>2065. Maximum Path Quality of a Graph</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2073. Time Needed to Buy Tickets</li> <li>2078. Two Furthest Houses With Different Colors</li> <li>2079. Watering Plants</li> <li>2080. Range Frequency Queries</li> <li>2085. Count Common Words With One Occurrence</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>2089. Find Target Indices After Sorting Array</li> <li>209. Minimum Size Subarray Sum</li> <li>2090. K Radius Subarray Averages</li> <li>2091. Removing Minimum and Maximum From Array</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2101. Detonate the Maximum Bombs</li> <li>2104. Sum of Subarray Ranges</li> <li>2105. Watering Plants II</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2108. Find First Palindromic String in the Array</li> <li>2109. Adding Spaces to a String</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>2111. Minimum Operations to Make the Array K-Increasing</li> <li>2113. Elements in Array After Removing and Replacing Elements</li> <li>2114. Maximum Number of Words Found in Sentences</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>212. Word Search II</li> <li>2121. Intervals Between Identical Elements</li> <li>2122. Recover the Original Array</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2126. Destroying Asteroids</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>213. House Robber II</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2132. Stamping the Grid</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2134. Minimum Swaps to Group All 1's Together II</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2137. Pour Water Between Buckets to Make Water Levels Equal</li> <li>2140. Solving Questions With Brainpower</li> <li>2141. Maximum Running Time of N Computers</li> <li>2143. Choose Numbers From Two Arrays in Range</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2145. Count the Hidden Sequences</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2148. Count Elements With Strictly Smaller and Greater Elements</li> <li>2149. Rearrange Array Elements by Sign</li> <li>215. Kth Largest Element in an Array</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2155. All Divisions With the Highest Score of a Binary Array</li> <li>2158. Amount of New Area Painted Each Day</li> <li>216. Combination Sum III</li> <li>2161. Partition Array According to Given Pivot</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>2164. Sort Even and Odd Indices Independently</li> <li>2166. Design Bitset</li> <li>217. Contains Duplicate</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2172. Maximum AND Sum of Array</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2176. Count Equal and Divisible Pairs in an Array</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2185. Counting Words With a Given Prefix</li> <li>2187. Minimum Time to Complete Trips</li> <li>2188. Minimum Time to Finish the Race</li> <li>219. Contains Duplicate II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2191. Sort the Jumbled Numbers</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>220. Contains Duplicate III</li> <li>2200. Find All K-Distant Indices in an Array</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2202. Maximize the Topmost Element After K Moves</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>221. Maximal Square</li> <li>2210. Count Hills and Valleys in an Array</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2214. Minimum Health to Beat Game</li> <li>2215. Find the Difference of Two Arrays</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>2217. Find Palindrome With Fixed Length</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2219. Maximum Sum Score of Array</li> <li>2221. Find Triangular Sum of an Array</li> <li>2225. Find Players With Zero or One Losses</li> <li>2226. Maximum Candies Allocated to K Children</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2229. Check if an Array Is Consecutive</li> <li>2233. Maximum Product After K Increments</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2237. Count Positions on Street With Required Brightness</li> <li>2239. Find Closest Number to Zero</li> <li>2241. Design an ATM Machine</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2248. Intersection of Multiple Arrays</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2255. Count Prefixes of a Given String</li> <li>2256. Minimum Average Difference</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2258. Escape the Spreading Fire</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2261. K Divisible Elements Subarrays</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2268. Minimum Number of Keypresses</li> <li>2270. Number of Ways to Split Array</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2272. Substring With Largest Variance</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2274. Maximum Consecutive Floors Without Special Floors</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2277. Closest Node to Path in Tree</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>228. Summary Ranges</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2284. Sender With Largest Word Count</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>229. Majority Element II</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2291. Maximum Profit From Trading Stocks</li> <li>2293. Min Max Game</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2295. Replace Elements in an Array</li> <li>2297. Jump Game VIII</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2301. Match Substring After Replacement</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2303. Calculate Amount Paid in Taxes</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2305. Fair Distribution of Cookies</li> <li>2306. Naming a Company</li> <li>2307. Check for Contradictions in Equations</li> <li>2312. Selling Pieces of Wood</li> <li>2317. Maximum XOR After Operations</li> <li>2319. Check if Matrix Is X-Matrix</li> <li>2321. Maximum Score Of Spliced Array</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2326. Spiral Matrix IV</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2340. Minimum Adjacent Swaps to Make a Valid Array</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2347. Best Poker Hand</li> <li>2348. Number of Zero-Filled Subarrays</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2352. Equal Row and Column Pairs</li> <li>2354. Number of Excellent Pairs</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2361. Minimum Costs Using the Train Line</li> <li>2363. Merge Similar Items</li> <li>2364. Count Number of Bad Pairs</li> <li>2365. Task Scheduler II</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2367. Number of Arithmetic Triplets</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2369. Check if There is a Valid Partition For The Array</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2373. Largest Local Values in a Matrix</li> <li>238. Product of Array Except Self</li> <li>2381. Shifting Letters II</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2383. Minimum Hours of Training to Win a Competition</li> <li>2386. Find the K-Sum of an Array</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>239. Sliding Window Maximum</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2392. Build a Matrix With Conditions</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2395. Find Subarrays With Equal Sum</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2399. Check Distances Between Same Letters</li> <li>240. Search a 2D Matrix II</li> <li>2401. Longest Nice Subarray</li> <li>2402. Meeting Rooms III</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2404. Most Frequent Even Element</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2408. Design SQL</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2418. Sort the People</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>2420. Find All Good Indices</li> <li>2421. Number of Good Paths</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2428. Maximum Sum of an Hourglass</li> <li>243. Shortest Word Distance</li> <li>2431. Maximize Total Tastiness of Purchased Fruits</li> <li>2432. The Employee That Worked on the Longest Task</li> <li>2433. Find The Original Array of Prefix Xor</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2438. Range Product Queries of Powers</li> <li>2439. Minimize Maximum of Array</li> <li>244. Shortest Word Distance II</li> <li>2440. Create Components With Same Value</li> <li>2441. Largest Positive Integer That Exists With Its Negative</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2446. Determine if Two Events Have Conflict</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>245. Shortest Word Distance III</li> <li>2452. Words Within Two Edits of Dictionary</li> <li>2453. Destroy Sequential Targets</li> <li>2454. Next Greater Element IV</li> <li>2455. Average Value of Even Numbers That Are Divisible by Three</li> <li>2456. Most Popular Video Creator</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>2460. Apply Operations to an Array</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2462. Total Cost to Hire K Workers</li> <li>2463. Minimum Total Distance Traveled</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2465. Number of Distinct Averages</li> <li>2467. Most Profitable Path in a Tree</li> <li>247. Strobogrammatic Number II</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2475. Number of Unequal Triplets in Array</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>248. Strobogrammatic Number III</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2488. Count Subarrays With Median K</li> <li>249. Group Shifted Strings</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2496. Maximum Value of a String in an Array</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2498. Frog Jump II</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2501. Longest Square Streak in an Array</li> <li>2502. Design Memory Allocator</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2506. Count Pairs Of Similar Strings</li> <li>251. Flatten 2D Vector</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2511. Maximum Enemy Forts That Can Be Captured</li> <li>2512. Reward Top K Students</li> <li>2515. Shortest Distance to Target String in a Circular Array</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>2518. Number of Great Partitions</li> <li>2519. Count the Number of K-Big Indices</li> <li>252. Meeting Rooms</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2527. Find Xor-Beauty of Array</li> <li>2528. Maximize the Minimum Powered City</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2532. Time to Cross a Bridge</li> <li>2534. Time Taken to Cross the Door</li> <li>2535. Difference Between Element Sum and Digit Sum of an Array</li> <li>2536. Increment Submatrices by One</li> <li>2537. Count the Number of Good Subarrays</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>254. Factor Combinations</li> <li>2540. Minimum Common Value</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2542. Maximum Subsequence Score</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2547. Minimum Cost to Split an Array</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2549. Count Distinct Numbers on Board</li> <li>2551. Put Marbles in Bags</li> <li>2552. Count Increasing Quadruplets</li> <li>2553. Separate the Digits in an Array</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2555. Maximize Win From Two Segments</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2559. Count Vowel Strings in Ranges</li> <li>256. Paint House</li> <li>2560. House Robber IV</li> <li>2561. Rearranging Fruits</li> <li>2562. Find the Array Concatenation Value</li> <li>2563. Count the Number of Fair Pairs</li> <li>2564. Substring XOR Queries</li> <li>2574. Left and Right Sum Differences</li> <li>2575. Find the Divisibility Array of a String</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>2580. Count Ways to Group Overlapping Ranges</li> <li>2584. Split the Array to Make Coprime Products</li> <li>2585. Number of Ways to Earn Points</li> <li>259. 3Sum Smaller</li> <li>26. Remove Duplicates from Sorted Array</li> <li>260. Single Number III</li> <li>265. Paint House II</li> <li>268. Missing Number</li> <li>269. Alien Dictionary</li> <li>27. Remove Element</li> <li>271. Encode and Decode Strings</li> <li>274. H-Index</li> <li>275. H-Index II</li> <li>280. Wiggle Sort</li> <li>281. Zigzag Iterator</li> <li>283. Move Zeroes</li> <li>284. Peeking Iterator</li> <li>286. Walls and Gates</li> <li>287. Find the Duplicate Number</li> <li>288. Unique Word Abbreviation</li> <li>289. Game of Life</li> <li>296. Best Meeting Point</li> <li>300. Longest Increasing Subsequence</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>305. Number of Islands II</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>309. Best Time to Buy and Sell Stock with Cooldown</li> <li>31. Next Permutation</li> <li>311. Sparse Matrix Multiplication</li> <li>312. Burst Balloons</li> <li>313. Super Ugly Number</li> <li>315. Count of Smaller Numbers After Self</li> <li>317. Shortest Distance from All Buildings</li> <li>318. Maximum Product of Word Lengths</li> <li>322. Coin Change</li> <li>324. Wiggle Sort II</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>327. Count of Range Sum</li> <li>329. Longest Increasing Path in a Matrix</li> <li>33. Search in Rotated Sorted Array</li> <li>330. Patching Array</li> <li>334. Increasing Triplet Subsequence</li> <li>335. Self Crossing</li> <li>336. Palindrome Pairs</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>346. Moving Average from Data Stream</li> <li>347. Top K Frequent Elements</li> <li>348. Design Tic-Tac-Toe</li> <li>349. Intersection of Two Arrays</li> <li>35. Search Insert Position</li> <li>350. Intersection of Two Arrays II</li> <li>353. Design Snake Game</li> <li>354. Russian Doll Envelopes</li> <li>356. Line Reflection</li> <li>36. Valid Sudoku</li> <li>360. Sort Transformed Array</li> <li>361. Bomb Enemy</li> <li>362. Design Hit Counter</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>368. Largest Divisible Subset</li> <li>37. Sudoku Solver</li> <li>370. Range Addition</li> <li>373. Find K Pairs with Smallest Sums</li> <li>376. Wiggle Subsequence</li> <li>377. Combination Sum IV</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>379. Design Phone Directory</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>384. Shuffle an Array</li> <li>39. Combination Sum</li> <li>391. Perfect Rectangle</li> <li>393. UTF-8 Validation</li> <li>396. Rotate Function</li> <li>399. Evaluate Division</li> <li>4. Median of Two Sorted Arrays</li> <li>40. Combination Sum II</li> <li>403. Frog Jump</li> <li>406. Queue Reconstruction by Height</li> <li>407. Trapping Rain Water II</li> <li>41. First Missing Positive</li> <li>410. Split Array Largest Sum</li> <li>413. Arithmetic Slices</li> <li>414. Third Maximum Number</li> <li>416. Partition Equal Subset Sum</li> <li>417. Pacific Atlantic Water Flow</li> <li>419. Battleships in a Board</li> <li>42. Trapping Rain Water</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>422. Valid Word Square</li> <li>425. Word Squares</li> <li>427. Construct Quad Tree</li> <li>435. Non-overlapping Intervals</li> <li>436. Find Right Interval</li> <li>442. Find All Duplicates in an Array</li> <li>444. Sequence Reconstruction</li> <li>446. Arithmetic Slices II - Subsequence</li> <li>447. Number of Boomerangs</li> <li>448. Find All Numbers Disappeared in an Array</li> <li>45. Jump Game II</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>453. Minimum Moves to Equal Array Elements</li> <li>454. 4Sum II</li> <li>455. Assign Cookies</li> <li>456. 132 Pattern</li> <li>457. Circular Array Loop</li> <li>46. Permutations</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>463. Island Perimeter</li> <li>465. Optimal Account Balancing</li> <li>47. Permutations II</li> <li>472. Concatenated Words</li> <li>473. Matchsticks to Square</li> <li>474. Ones and Zeroes</li> <li>475. Heaters</li> <li>477. Total Hamming Distance</li> <li>48. Rotate Image</li> <li>480. Sliding Window Median</li> <li>484. Find Permutation</li> <li>485. Max Consecutive Ones</li> <li>486. Predict the Winner</li> <li>487. Max Consecutive Ones II</li> <li>49. Group Anagrams</li> <li>491. Non-decreasing Subsequences</li> <li>493. Reverse Pairs</li> <li>494. Target Sum</li> <li>495. Teemo Attacking</li> <li>496. Next Greater Element I</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>498. Diagonal Traverse</li> <li>500. Keyboard Row</li> <li>502. IPO</li> <li>503. Next Greater Element II</li> <li>506. Relative Ranks</li> <li>51. N-Queens</li> <li>517. Super Washing Machines</li> <li>518. Coin Change II</li> <li>522. Longest Uncommon Subsequence II</li> <li>523. Continuous Subarray Sum</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>525. Contiguous Array</li> <li>526. Beautiful Arrangement</li> <li>527. Word Abbreviation</li> <li>528. Random Pick with Weight</li> <li>529. Minesweeper</li> <li>53. Maximum Subarray</li> <li>531. Lonely Pixel I</li> <li>532. K-diff Pairs in an Array</li> <li>533. Lonely Pixel II</li> <li>539. Minimum Time Difference</li> <li>54. Spiral Matrix</li> <li>540. Single Element in a Sorted Array</li> <li>542. 01 Matrix</li> <li>546. Remove Boxes</li> <li>548. Split Array with Equal Sum</li> <li>55. Jump Game</li> <li>553. Optimal Division</li> <li>554. Brick Wall</li> <li>555. Split Concatenated Strings</li> <li>56. Merge Intervals</li> <li>560. Subarray Sum Equals K</li> <li>561. Array Partition</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>565. Array Nesting</li> <li>566. Reshape the Matrix</li> <li>568. Maximum Vacation Days</li> <li>57. Insert Interval</li> <li>573. Squirrel Simulation</li> <li>575. Distribute Candies</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>582. Kill Process</li> <li>587. Erect the Fence</li> <li>59. Spiral Matrix II</li> <li>594. Longest Harmonious Subsequence</li> <li>598. Range Addition II</li> <li>599. Minimum Index Sum of Two Lists</li> <li>604. Design Compressed String Iterator</li> <li>605. Can Place Flowers</li> <li>609. Find Duplicate File in System</li> <li>611. Valid Triangle Number</li> <li>616. Add Bold Tag in String</li> <li>621. Task Scheduler</li> <li>622. Design Circular Queue</li> <li>624. Maximum Distance in Arrays</li> <li>628. Maximum Product of Three Numbers</li> <li>63. Unique Paths II</li> <li>630. Course Schedule III</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>636. Exclusive Time of Functions</li> <li>638. Shopping Offers</li> <li>64. Minimum Path Sum</li> <li>641. Design Circular Deque</li> <li>643. Maximum Average Subarray I</li> <li>644. Maximum Average Subarray II</li> <li>645. Set Mismatch</li> <li>646. Maximum Length of Pair Chain</li> <li>648. Replace Words</li> <li>654. Maximum Binary Tree</li> <li>656. Coin Path</li> <li>658. Find K Closest Elements</li> <li>659. Split Array into Consecutive Subsequences</li> <li>66. Plus One</li> <li>661. Image Smoother</li> <li>665. Non-decreasing Array</li> <li>666. Path Sum IV</li> <li>667. Beautiful Arrangement II</li> <li>673. Number of Longest Increasing Subsequence</li> <li>674. Longest Continuous Increasing Subsequence</li> <li>675. Cut Off Trees for Golf Event</li> <li>679. 24 Game</li> <li>68. Text Justification</li> <li>682. Baseball Game</li> <li>683. K Empty Slots</li> <li>689. Maximum Sum of 3 Non-Overlapping Subarrays</li> <li>691. Stickers to Spell Word</li> <li>695. Max Area of Island</li> <li>697. Degree of an Array</li> <li>698. Partition to K Equal Sum Subsets</li> <li>699. Falling Squares</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>704. Binary Search</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>710. Random Pick with Blacklist</li> <li>713. Subarray Product Less Than K</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>717. 1-bit and 2-bit Characters</li> <li>718. Maximum Length of Repeated Subarray</li> <li>719. Find K-th Smallest Pair Distance</li> <li>720. Longest Word in Dictionary</li> <li>721. Accounts Merge</li> <li>722. Remove Comments</li> <li>723. Candy Crush</li> <li>724. Find Pivot Index</li> <li>73. Set Matrix Zeroes</li> <li>733. Flood Fill</li> <li>734. Sentence Similarity</li> <li>735. Asteroid Collision</li> <li>737. Sentence Similarity II</li> <li>739. Daily Temperatures</li> <li>74. Search a 2D Matrix</li> <li>740. Delete and Earn</li> <li>741. Cherry Pickup</li> <li>744. Find Smallest Letter Greater Than Target</li> <li>746. Min Cost Climbing Stairs</li> <li>747. Largest Number At Least Twice of Others</li> <li>748. Shortest Completing Word</li> <li>749. Contain Virus</li> <li>75. Sort Colors</li> <li>750. Number Of Corner Rectangles</li> <li>752. Open the Lock</li> <li>755. Pour Water</li> <li>757. Set Intersection Size At Least Two</li> <li>758. Bold Words in String</li> <li>759. Employee Free Time</li> <li>760. Find Anagram Mappings</li> <li>764. Largest Plus Sign</li> <li>766. Toeplitz Matrix</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>773. Sliding Puzzle</li> <li>774. Minimize Max Distance to Gas Station</li> <li>775. Global and Local Inversions</li> <li>778. Swim in Rising Water</li> <li>78. Subsets</li> <li>781. Rabbits in Forest</li> <li>782. Transform to Chessboard</li> <li>786. K-th Smallest Prime Fraction</li> <li>789. Escape The Ghosts</li> <li>79. Word Search</li> <li>794. Valid Tic-Tac-Toe State</li> <li>795. Number of Subarrays with Bounded Maximum</li> <li>798. Smallest Rotation with Highest Score</li> <li>80. Remove Duplicates from Sorted Array II</li> <li>801. Minimum Swaps To Make Sequences Increasing</li> <li>803. Bricks Falling When Hit</li> <li>804. Unique Morse Code Words</li> <li>805. Split Array With Same Average</li> <li>806. Number of Lines To Write String</li> <li>807. Max Increase to Keep City Skyline</li> <li>809. Expressive Words</li> <li>81. Search in Rotated Sorted Array II</li> <li>810. Chalkboard XOR Game</li> <li>811. Subdomain Visit Count</li> <li>812. Largest Triangle Area</li> <li>813. Largest Sum of Averages</li> <li>815. Bus Routes</li> <li>817. Linked List Components</li> <li>820. Short Encoding of Words</li> <li>821. Shortest Distance to a Character</li> <li>822. Card Flipping Game</li> <li>823. Binary Trees With Factors</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>827. Making A Large Island</li> <li>832. Flipping an Image</li> <li>833. Find And Replace in String</li> <li>835. Image Overlap</li> <li>839. Similar String Groups</li> <li>84. Largest Rectangle in Histogram</li> <li>840. Magic Squares In Grid</li> <li>843. Guess the Word</li> <li>845. Longest Mountain in Array</li> <li>846. Hand of Straights</li> <li>848. Shifting Letters</li> <li>849. Maximize Distance to Closest Person</li> <li>85. Maximal Rectangle</li> <li>850. Rectangle Area II</li> <li>851. Loud and Rich</li> <li>852. Peak Index in a Mountain Array</li> <li>853. Car Fleet</li> <li>857. Minimum Cost to Hire K Workers</li> <li>860. Lemonade Change</li> <li>861. Score After Flipping Matrix</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>864. Shortest Path to Get All Keys</li> <li>867. Transpose Matrix</li> <li>870. Advantage Shuffle</li> <li>871. Minimum Number of Refueling Stops</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>874. Walking Robot Simulation</li> <li>875. Koko Eating Bananas</li> <li>877. Stone Game</li> <li>879. Profitable Schemes</li> <li>88. Merge Sorted Array</li> <li>881. Boats to Save People</li> <li>883. Projection Area of 3D Shapes</li> <li>885. Spiral Matrix III</li> <li>888. Fair Candy Swap</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>890. Find and Replace Pattern</li> <li>891. Sum of Subsequence Widths</li> <li>892. Surface Area of 3D Shapes</li> <li>893. Groups of Special-Equivalent Strings</li> <li>896. Monotonic Array</li> <li>898. Bitwise ORs of Subarrays</li> <li>90. Subsets II</li> <li>900. RLE Iterator</li> <li>902. Numbers At Most N Given Digit Set</li> <li>904. Fruit Into Baskets</li> <li>905. Sort Array By Parity</li> <li>907. Sum of Subarray Minimums</li> <li>908. Smallest Range I</li> <li>909. Snakes and Ladders</li> <li>910. Smallest Range II</li> <li>911. Online Election</li> <li>912. Sort an Array</li> <li>914. X of a Kind in a Deck of Cards</li> <li>915. Partition Array into Disjoint Intervals</li> <li>916. Word Subsets</li> <li>918. Maximum Sum Circular Subarray</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>924. Minimize Malware Spread</li> <li>927. Three Equal Parts</li> <li>928. Minimize Malware Spread II</li> <li>929. Unique Email Addresses</li> <li>930. Binary Subarrays With Sum</li> <li>931. Minimum Falling Path Sum</li> <li>932. Beautiful Array</li> <li>934. Shortest Bridge</li> <li>937. Reorder Data in Log Files</li> <li>939. Minimum Area Rectangle</li> <li>941. Valid Mountain Array</li> <li>942. DI String Match</li> <li>943. Find the Shortest Superstring</li> <li>944. Delete Columns to Make Sorted</li> <li>945. Minimum Increment to Make Array Unique</li> <li>946. Validate Stack Sequences</li> <li>948. Bag of Tokens</li> <li>950. Reveal Cards In Increasing Order</li> <li>952. Largest Component Size by Common Factor</li> <li>953. Verifying an Alien Dictionary</li> <li>954. Array of Doubled Pairs</li> <li>955. Delete Columns to Make Sorted II</li> <li>956. Tallest Billboard</li> <li>957. Prison Cells After N Days</li> <li>960. Delete Columns to Make Sorted III</li> <li>961. N-Repeated Element in Size 2N Array</li> <li>962. Maximum Width Ramp</li> <li>963. Minimum Area Rectangle II</li> <li>966. Vowel Spellchecker</li> <li>969. Pancake Sorting</li> <li>973. K Closest Points to Origin</li> <li>974. Subarray Sums Divisible by K</li> <li>975. Odd Even Jump</li> <li>976. Largest Perimeter Triangle</li> <li>977. Squares of a Sorted Array</li> <li>978. Longest Turbulent Subarray</li> <li>980. Unique Paths III</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>983. Minimum Cost For Tickets</li> <li>985. Sum of Even Numbers After Queries</li> <li>986. Interval List Intersections</li> <li>989. Add to Array-Form of Integer</li> <li>990. Satisfiability of Equality Equations</li> <li>992. Subarrays with K Different Integers</li> <li>994. Rotting Oranges</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> <li>996. Number of Squareful Arrays</li> <li>997. Find the Town Judge</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"tags/#backtracking","title":"Backtracking","text":"<ul> <li>1066. Campus Bikes II</li> <li>1079. Letter Tile Possibilities</li> <li>1087. Brace Expansion</li> <li>1088. Confusing Number II</li> <li>1096. Brace Expansion II</li> <li>113. Path Sum II</li> <li>1215. Stepping Numbers</li> <li>1219. Path with Maximum Gold</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1240. Tiling a Rectangle with the Fewest Squares</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1258. Synonymous Sentences</li> <li>126. Word Ladder II</li> <li>1286. Iterator for Combination</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>131. Palindrome Partitioning</li> <li>140. Word Break II</li> <li>1415. The k-th Lexicographical String of All Happy Strings of Length n</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1655. Distribute Repeating Integers</li> <li>17. Letter Combinations of a Phone Number</li> <li>1718. Construct the Lexicographically Largest Valid Sequence</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1774. Closest Dessert Cost</li> <li>1799. Maximize Score After N Operations</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1849. Splitting a String Into Descending Consecutive Values</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1980. Find Unique Binary String</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2065. Maximum Path Quality of a Graph</li> <li>212. Word Search II</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>216. Combination Sum III</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>22. Generate Parentheses</li> <li>2305. Fair Distribution of Cookies</li> <li>2375. Construct Smallest Number From DI String</li> <li>2397. Maximum Rows Covered by Columns</li> <li>254. Factor Combinations</li> <li>257. Binary Tree Paths</li> <li>267. Palindrome Permutation II</li> <li>282. Expression Add Operators</li> <li>291. Word Pattern II</li> <li>294. Flip Game II</li> <li>301. Remove Invalid Parentheses</li> <li>306. Additive Number</li> <li>320. Generalized Abbreviation</li> <li>351. Android Unlock Patterns</li> <li>357. Count Numbers with Unique Digits</li> <li>37. Sudoku Solver</li> <li>39. Combination Sum</li> <li>40. Combination Sum II</li> <li>401. Binary Watch</li> <li>411. Minimum Unique Word Abbreviation</li> <li>425. Word Squares</li> <li>46. Permutations</li> <li>465. Optimal Account Balancing</li> <li>47. Permutations II</li> <li>473. Matchsticks to Square</li> <li>489. Robot Room Cleaner</li> <li>491. Non-decreasing Subsequences</li> <li>494. Target Sum</li> <li>51. N-Queens</li> <li>52. N-Queens II</li> <li>526. Beautiful Arrangement</li> <li>638. Shopping Offers</li> <li>679. 24 Game</li> <li>691. Stickers to Spell Word</li> <li>698. Partition to K Equal Sum Subsets</li> <li>77. Combinations</li> <li>78. Subsets</li> <li>784. Letter Case Permutation</li> <li>79. Word Search</li> <li>797. All Paths From Source to Target</li> <li>816. Ambiguous Coordinates</li> <li>842. Split Array into Fibonacci Sequence</li> <li>89. Gray Code</li> <li>90. Subsets II</li> <li>93. Restore IP Addresses</li> <li>95. Unique Binary Search Trees II</li> <li>967. Numbers With Same Consecutive Differences</li> <li>980. Unique Paths III</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#biconnected-component","title":"Biconnected Component","text":"<ul> <li>1192. Critical Connections in a Network</li> </ul>"},{"location":"tags/#binary-indexed-tree","title":"Binary Indexed Tree","text":"<ul> <li>1157. Online Majority Element In Subarray</li> <li>1395. Count Number of Teams</li> <li>1409. Queries on a Permutation With Key</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1649. Create Sorted Array through Instructions</li> <li>1756. Design Most Recently Used Queue</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>2552. Count Increasing Quadruplets</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>406. Queue Reconstruction by Height</li> <li>493. Reverse Pairs</li> <li>673. Number of Longest Increasing Subsequence</li> <li>683. K Empty Slots</li> </ul>"},{"location":"tags/#binary-search","title":"Binary Search","text":"<ul> <li>1004. Max Consecutive Ones III</li> <li>1011. Capacity To Ship Packages Within D Days</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1044. Longest Duplicate Substring</li> <li>1060. Missing Element in Sorted Array</li> <li>1062. Longest Repeating Substring</li> <li>1064. Fixed Point</li> <li>1095. Find in Mountain Array</li> <li>1099. Two Sum Less Than K</li> <li>1146. Snapshot Array</li> <li>1150. Check If a Number Is Majority Element in a Sorted Array</li> <li>1157. Online Majority Element In Subarray</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1182. Shortest Distance to Target Color</li> <li>1187. Make Array Strictly Increasing</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1201. Ugly Number III</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1214. Two Sum BSTs</li> <li>1231. Divide Chocolate</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1283. Find the Smallest Divisor Given a Threshold</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1346. Check If N and Its Double Exist</li> <li>1348. Tweet Counts Per Frequency</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1428. Leftmost Column with at Least a One</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1488. Avoid Flood in The City</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>1533. Find the Index of the Large Integer</li> <li>1539. Kth Missing Positive Number</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1562. Find Latest Group of Size M</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>162. Find Peak Element</li> <li>1631. Path With Minimum Effort</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1649. Create Sorted Array through Instructions</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1739. Building Boxes</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1760. Minimum Limit of Balls in a Bag</li> <li>1782. Count Pairs Of Nodes</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1802. Maximum Value at a Given Index in a Bounded Array</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1847. Closest Room</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1862. Sum of Floored Pairs</li> <li>1870. Minimum Speed to Arrive on Time</li> <li>1885. Count Pairs in Two Arrays</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>1891. Cutting Ribbons</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1898. Maximum Number of Removable Characters</li> <li>1901. Find a Peak Element II</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1923. Longest Common Subpath</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1954. Minimum Garden Perimeter to Collect Enough Apples</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>1966. Binary Searchable Numbers in an Unsorted Array</li> <li>1970. Last Day Where You Can Still Cross</li> <li>2008. Maximum Earnings From Taxi</li> <li>2009. Minimum Number of Operations to Make Array Continuous</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2040. Kth Smallest Product of Two Sorted Arrays</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2055. Plates Between Candles</li> <li>2064. Minimized Maximum of Products Distributed to Any Store</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2080. Range Frequency Queries</li> <li>2089. Find Target Indices After Sorting Array</li> <li>209. Minimum Size Subarray Sum</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2111. Minimum Operations to Make the Array K-Increasing</li> <li>2137. Pour Water Between Buckets to Make Water Levels Equal</li> <li>2141. Maximum Running Time of N Computers</li> <li>2179. Count Good Triplets in an Array</li> <li>2187. Minimum Time to Complete Trips</li> <li>222. Count Complete Tree Nodes</li> <li>2223. Sum of Scores of Built Strings</li> <li>2226. Maximum Candies Allocated to K Children</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2258. Escape the Spreading Fire</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2354. Number of Excellent Pairs</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>240. Search a 2D Matrix II</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2439. Minimize Maximum of Array</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2454. Next Greater Element IV</li> <li>2468. Split Message Based on Limit</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2498. Frog Jump II</li> <li>2501. Longest Square Streak in an Array</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>2519. Count the Number of K-Big Indices</li> <li>2528. Maximize the Minimum Powered City</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>2540. Minimum Common Value</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2555. Maximize Win From Two Segments</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2560. House Robber IV</li> <li>2563. Count the Number of Fair Pairs</li> <li>2565. Subsequence With the Minimum Score</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>259. 3Sum Smaller</li> <li>268. Missing Number</li> <li>270. Closest Binary Search Tree Value</li> <li>275. H-Index II</li> <li>278. First Bad Version</li> <li>287. Find the Duplicate Number</li> <li>300. Longest Increasing Subsequence</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>33. Search in Rotated Sorted Array</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>349. Intersection of Two Arrays</li> <li>35. Search Insert Position</li> <li>350. Intersection of Two Arrays II</li> <li>352. Data Stream as Disjoint Intervals</li> <li>354. Russian Doll Envelopes</li> <li>362. Design Hit Counter</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>367. Valid Perfect Square</li> <li>374. Guess Number Higher or Lower</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>4. Median of Two Sorted Arrays</li> <li>400. Nth Digit</li> <li>410. Split Array Largest Sum</li> <li>436. Find Right Interval</li> <li>441. Arranging Coins</li> <li>456. 132 Pattern</li> <li>475. Heaters</li> <li>483. Smallest Good Base</li> <li>493. Reverse Pairs</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>528. Random Pick with Weight</li> <li>532. K-diff Pairs in an Array</li> <li>540. Single Element in a Sorted Array</li> <li>611. Valid Triangle Number</li> <li>633. Sum of Square Numbers</li> <li>644. Maximum Average Subarray II</li> <li>658. Find K Closest Elements</li> <li>668. Kth Smallest Number in Multiplication Table</li> <li>69. Sqrt(x)</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>704. Binary Search</li> <li>710. Random Pick with Blacklist</li> <li>718. Maximum Length of Repeated Subarray</li> <li>719. Find K-th Smallest Pair Distance</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>74. Search a 2D Matrix</li> <li>744. Find Smallest Letter Greater Than Target</li> <li>754. Reach a Number</li> <li>774. Minimize Max Distance to Gas Station</li> <li>778. Swim in Rising Water</li> <li>786. K-th Smallest Prime Fraction</li> <li>793. Preimage Size of Factorial Zeroes Function</li> <li>81. Search in Rotated Sorted Array II</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>852. Peak Index in a Mountain Array</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>875. Koko Eating Bananas</li> <li>878. Nth Magical Number</li> <li>887. Super Egg Drop</li> <li>888. Fair Candy Swap</li> <li>902. Numbers At Most N Given Digit Set</li> <li>911. Online Election</li> <li>981. Time Based Key-Value Store</li> </ul>"},{"location":"tags/#binary-search-tree","title":"Binary Search Tree","text":"<ul> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>1214. Two Sum BSTs</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1586. Binary Search Tree Iterator II</li> <li>173. Binary Search Tree Iterator</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>230. Kth Smallest Element in a BST</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>333. Largest BST Subtree</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>449. Serialize and Deserialize BST</li> <li>450. Delete Node in a BST</li> <li>501. Find Mode in Binary Search Tree</li> <li>510. Inorder Successor in BST II</li> <li>530. Minimum Absolute Difference in BST</li> <li>538. Convert BST to Greater Tree</li> <li>653. Two Sum IV - Input is a BST</li> <li>669. Trim a Binary Search Tree</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>703. Kth Largest Element in a Stream</li> <li>776. Split BST</li> <li>783. Minimum Distance Between BST Nodes</li> <li>897. Increasing Order Search Tree</li> <li>938. Range Sum of BST</li> <li>95. Unique Binary Search Trees II</li> <li>96. Unique Binary Search Trees</li> <li>98. Validate Binary Search Tree</li> <li>99. Recover Binary Search Tree</li> </ul>"},{"location":"tags/#binary-tree","title":"Binary Tree","text":"<ul> <li>100. Same Tree</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>101. Symmetric Tree</li> <li>102. Binary Tree Level Order Traversal</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>104. Maximum Depth of Binary Tree</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>107. Binary Tree Level Order Traversal II</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>110. Balanced Binary Tree</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>113. Path Sum II</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1145. Binary Tree Coloring Game</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1214. Two Sum BSTs</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>129. Sum Root to Leaf Numbers</li> <li>1302. Deepest Leaves Sum</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1325. Delete Leaves With a Given Value</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>144. Binary Tree Preorder Traversal</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>145. Binary Tree Postorder Traversal</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1469. Find All The Lonely Nodes</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>156. Binary Tree Upside Down</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1586. Binary Search Tree Iterator II</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1609. Even Odd Tree</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1660. Correct a Binary Tree</li> <li>1666. Change the Root of a Binary Tree</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>173. Binary Search Tree Iterator</li> <li>1740. Find Distance in a Binary Tree</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>199. Binary Tree Right Side View</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2049. Count Nodes With the Highest Score</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2196. Create Binary Tree From Descriptions</li> <li>222. Count Complete Tree Nodes</li> <li>2236. Root Equals Sum of Children</li> <li>226. Invert Binary Tree</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>230. Kth Smallest Element in a BST</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>250. Count Univalue Subtrees</li> <li>2509. Cycle Length Queries in a Tree</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>257. Binary Tree Paths</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>366. Find Leaves of Binary Tree</li> <li>404. Sum of Left Leaves</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>437. Path Sum III</li> <li>449. Serialize and Deserialize BST</li> <li>450. Delete Node in a BST</li> <li>501. Find Mode in Binary Search Tree</li> <li>508. Most Frequent Subtree Sum</li> <li>510. Inorder Successor in BST II</li> <li>513. Find Bottom Left Tree Value</li> <li>515. Find Largest Value in Each Tree Row</li> <li>530. Minimum Absolute Difference in BST</li> <li>536. Construct Binary Tree from String</li> <li>538. Convert BST to Greater Tree</li> <li>543. Diameter of Binary Tree</li> <li>545. Boundary of Binary Tree</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>563. Binary Tree Tilt</li> <li>572. Subtree of Another Tree</li> <li>606. Construct String from Binary Tree</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>654. Maximum Binary Tree</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>666. Path Sum IV</li> <li>669. Trim a Binary Search Tree</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>687. Longest Univalue Path</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>703. Kth Largest Element in a Stream</li> <li>742. Closest Leaf in a Binary Tree</li> <li>776. Split BST</li> <li>783. Minimum Distance Between BST Nodes</li> <li>814. Binary Tree Pruning</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>872. Leaf-Similar Trees</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>894. All Possible Full Binary Trees</li> <li>897. Increasing Order Search Tree</li> <li>919. Complete Binary Tree Inserter</li> <li>938. Range Sum of BST</li> <li>94. Binary Tree Inorder Traversal</li> <li>95. Unique Binary Search Trees II</li> <li>951. Flip Equivalent Binary Trees</li> <li>958. Check Completeness of a Binary Tree</li> <li>96. Unique Binary Search Trees</li> <li>965. Univalued Binary Tree</li> <li>968. Binary Tree Cameras</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>99. Recover Binary Search Tree</li> <li>993. Cousins in Binary Tree</li> <li>998. Maximum Binary Tree II</li> </ul>"},{"location":"tags/#bit-manipulation","title":"Bit Manipulation","text":"<ul> <li>1009. Complement of Base 10 Integer</li> <li>1066. Campus Bikes II</li> <li>1125. Smallest Sufficient Team</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1256. Encode Number</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1310. XOR Queries of a Subarray</li> <li>1318. Minimum Flips to Make a OR b Equal to c</li> <li>1342. Number of Steps to Reduce a Number to Zero</li> <li>1349. Maximum Students Taking Exam</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>136. Single Number</li> <li>137. Single Number II</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1386. Cinema Seat Allocation</li> <li>1404. Number of Steps to Reduce a Number in Binary Representation to One</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1486. XOR Operation in an Array</li> <li>1494. Parallel Courses II</li> <li>1506. Find Root of N-Ary Tree</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1525. Number of Good Ways to Split a String</li> <li>1542. Find Longest Awesome Substring</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1655. Distribute Repeating Integers</li> <li>1659. Maximize Grid Happiness</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1681. Minimum Incompatibility</li> <li>1684. Count the Number of Consistent Strings</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1720. Decode XORed Array</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1734. Decode XORed Permutation</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1755. Closest Subsequence Sum</li> <li>1763. Longest Nice Substring</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1799. Maximize Score After N Operations</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1829. Maximum XOR for Each Query</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1863. Sum of All Subset XOR Totals</li> <li>187. Repeated DNA Sequences</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>190. Reverse Bits</li> <li>1908. Game of Nim</li> <li>191. Number of 1 Bits</li> <li>1915. Number of Wonderful Substrings</li> <li>1938. Maximum Genetic Difference Query</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1994. The Number of Good Subsets</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>201. Bitwise AND of Numbers Range</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2157. Groups of Strings</li> <li>2172. Maximum AND Sum of Array</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2220. Minimum Bit Flips to Convert Number</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2305. Fair Distribution of Cookies</li> <li>2306. Naming a Company</li> <li>231. Power of Two</li> <li>2317. Maximum XOR After Operations</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2354. Number of Excellent Pairs</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2401. Longest Nice Subarray</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2429. Minimize XOR</li> <li>2433. Find The Original Array of Prefix Xor</li> <li>2438. Range Product Queries of Powers</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2527. Find Xor-Beauty of Array</li> <li>2546. Apply Bitwise Operations to Make Strings Equal</li> <li>2564. Substring XOR Queries</li> <li>260. Single Number III</li> <li>266. Palindrome Permutation</li> <li>268. Missing Number</li> <li>287. Find the Duplicate Number</li> <li>29. Divide Two Integers</li> <li>318. Maximum Product of Word Lengths</li> <li>320. Generalized Abbreviation</li> <li>338. Counting Bits</li> <li>342. Power of Four</li> <li>371. Sum of Two Integers</li> <li>389. Find the Difference</li> <li>393. UTF-8 Validation</li> <li>397. Integer Replacement</li> <li>401. Binary Watch</li> <li>405. Convert a Number to Hexadecimal</li> <li>411. Minimum Unique Word Abbreviation</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>461. Hamming Distance</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>473. Matchsticks to Square</li> <li>476. Number Complement</li> <li>477. Total Hamming Distance</li> <li>491. Non-decreasing Subsequences</li> <li>526. Beautiful Arrangement</li> <li>638. Shopping Offers</li> <li>645. Set Mismatch</li> <li>67. Add Binary</li> <li>672. Bulb Switcher II</li> <li>691. Stickers to Spell Word</li> <li>693. Binary Number with Alternating Bits</li> <li>698. Partition to K Equal Sum Subsets</li> <li>751. IP to CIDR</li> <li>756. Pyramid Transition Matrix</li> <li>762. Prime Number of Set Bits in Binary Representation</li> <li>779. K-th Symbol in Grammar</li> <li>78. Subsets</li> <li>782. Transform to Chessboard</li> <li>784. Letter Case Permutation</li> <li>805. Split Array With Same Average</li> <li>810. Chalkboard XOR Game</li> <li>847. Shortest Path Visiting All Nodes</li> <li>861. Score After Flipping Matrix</li> <li>864. Shortest Path to Get All Keys</li> <li>868. Binary Gap</li> <li>89. Gray Code</li> <li>898. Bitwise ORs of Subarrays</li> <li>90. Subsets II</li> <li>943. Find the Shortest Superstring</li> <li>957. Prison Cells After N Days</li> <li>980. Unique Paths III</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#bitmask","title":"Bitmask","text":"<ul> <li>1066. Campus Bikes II</li> <li>1125. Smallest Sufficient Team</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1349. Maximum Students Taking Exam</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1494. Parallel Courses II</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1655. Distribute Repeating Integers</li> <li>1659. Maximize Grid Happiness</li> <li>1681. Minimum Incompatibility</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1755. Closest Subsequence Sum</li> <li>1799. Maximize Score After N Operations</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1994. The Number of Good Subsets</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2172. Maximum AND Sum of Array</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2305. Fair Distribution of Cookies</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>473. Matchsticks to Square</li> <li>526. Beautiful Arrangement</li> <li>638. Shopping Offers</li> <li>691. Stickers to Spell Word</li> <li>698. Partition to K Equal Sum Subsets</li> <li>805. Split Array With Same Average</li> <li>847. Shortest Path Visiting All Nodes</li> <li>943. Find the Shortest Superstring</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#brainteaser","title":"Brainteaser","text":"<ul> <li>1025. Divisor Game</li> <li>1033. Moving Stones Until Consecutive</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1908. Game of Nim</li> <li>2396. Strictly Palindromic Number</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>292. Nim Game</li> <li>319. Bulb Switcher</li> <li>810. Chalkboard XOR Game</li> </ul>"},{"location":"tags/#breadth-first-search","title":"Breadth-First Search","text":"<ul> <li>100. Same Tree</li> <li>101. Symmetric Tree</li> <li>102. Binary Tree Level Order Traversal</li> <li>1020. Number of Enclaves</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1034. Coloring A Border</li> <li>1036. Escape a Large Maze</li> <li>104. Maximum Depth of Binary Tree</li> <li>1042. Flower Planting With No Adjacent</li> <li>107. Binary Tree Level Order Traversal II</li> <li>1087. Brace Expansion</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1096. Brace Expansion II</li> <li>1102. Path With Maximum Minimum Value</li> <li>111. Minimum Depth of Binary Tree</li> <li>112. Path Sum</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>1129. Shortest Path with Alternating Colors</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>1162. As Far from Land as Possible</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1197. Minimum Knight Moves</li> <li>1202. Smallest String With Swaps</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1215. Stepping Numbers</li> <li>1236. Web Crawler</li> <li>1242. Web Crawler Multithreaded</li> <li>1245. Tree Diameter</li> <li>1254. Number of Closed Islands</li> <li>1257. Smallest Common Region</li> <li>126. Word Ladder II</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1267. Count Servers that Communicate</li> <li>127. Word Ladder</li> <li>1273. Delete Tree Nodes</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>130. Surrounded Regions</li> <li>1302. Deepest Leaves Sum</li> <li>1306. Jump Game III</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1319. Number of Operations to Make Network Connected</li> <li>133. Clone Graph</li> <li>1345. Jump Game IV</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1462. Course Schedule IV</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1469. Find All The Lonely Nodes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1490. Clone N-ary Tree</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1609. Even Odd Tree</li> <li>1625. Lexicographically Smallest String After Applying Operations</li> <li>1631. Path With Minimum Effort</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1660. Correct a Binary Tree</li> <li>1730. Shortest Path to Get Food</li> <li>1740. Find Distance in a Binary Tree</li> <li>1765. Map of Highest Peak</li> <li>1766. Tree of Coprimes</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1905. Count Sub Islands</li> <li>1926. Nearest Exit from Entrance in Maze</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>199. Binary Tree Right Side View</li> <li>1992. Find All Groups of Farmland</li> <li>1993. Operations on Tree</li> <li>200. Number of Islands</li> <li>2039. The Time When the Network Becomes Idle</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2059. Minimum Operations to Convert Number</li> <li>207. Course Schedule</li> <li>2092. Find All People With Secret</li> <li>210. Course Schedule II</li> <li>2101. Detonate the Maximum Bombs</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2258. Escape the Spreading Fire</li> <li>226. Invert Binary Tree</li> <li>2277. Closest Node to Path in Tree</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2467. Most Profitable Path in a Tree</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>261. Graph Valid Tree</li> <li>269. Alien Dictionary</li> <li>279. Perfect Squares</li> <li>286. Walls and Gates</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>301. Remove Invalid Parentheses</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>310. Minimum Height Trees</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>317. Shortest Distance from All Buildings</li> <li>322. Coin Change</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>329. Longest Increasing Path in a Matrix</li> <li>339. Nested List Weight Sum</li> <li>364. Nested List Weight Sum II</li> <li>365. Water and Jug Problem</li> <li>399. Evaluate Division</li> <li>404. Sum of Left Leaves</li> <li>407. Trapping Rain Water II</li> <li>417. Pacific Atlantic Water Flow</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>429. N-ary Tree Level Order Traversal</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>433. Minimum Genetic Mutation</li> <li>449. Serialize and Deserialize BST</li> <li>463. Island Perimeter</li> <li>488. Zuma Game</li> <li>490. The Maze</li> <li>499. The Maze III</li> <li>505. The Maze II</li> <li>513. Find Bottom Left Tree Value</li> <li>514. Freedom Trail</li> <li>515. Find Largest Value in Each Tree Row</li> <li>529. Minesweeper</li> <li>530. Minimum Absolute Difference in BST</li> <li>542. 01 Matrix</li> <li>547. Number of Provinces</li> <li>559. Maximum Depth of N-ary Tree</li> <li>582. Kill Process</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>653. Two Sum IV - Input is a BST</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>672. Bulb Switcher II</li> <li>675. Cut Off Trees for Golf Event</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>690. Employee Importance</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>711. Number of Distinct Islands II</li> <li>721. Accounts Merge</li> <li>733. Flood Fill</li> <li>737. Sentence Similarity II</li> <li>742. Closest Leaf in a Binary Tree</li> <li>743. Network Delay Time</li> <li>749. Contain Virus</li> <li>752. Open the Lock</li> <li>756. Pyramid Transition Matrix</li> <li>765. Couples Holding Hands</li> <li>773. Sliding Puzzle</li> <li>778. Swim in Rising Water</li> <li>783. Minimum Distance Between BST Nodes</li> <li>785. Is Graph Bipartite?</li> <li>787. Cheapest Flights Within K Stops</li> <li>797. All Paths From Source to Target</li> <li>802. Find Eventual Safe States</li> <li>815. Bus Routes</li> <li>827. Making A Large Island</li> <li>839. Similar String Groups</li> <li>841. Keys and Rooms</li> <li>847. Shortest Path Visiting All Nodes</li> <li>854. K-Similar Strings</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>864. Shortest Path to Get All Keys</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>886. Possible Bipartition</li> <li>909. Snakes and Ladders</li> <li>919. Complete Binary Tree Inserter</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>934. Shortest Bridge</li> <li>958. Check Completeness of a Binary Tree</li> <li>959. Regions Cut By Slashes</li> <li>965. Univalued Binary Tree</li> <li>967. Numbers With Same Consecutive Differences</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>993. Cousins in Binary Tree</li> <li>994. Rotting Oranges</li> </ul>"},{"location":"tags/#bucket-sort","title":"Bucket Sort","text":"<ul> <li>164. Maximum Gap</li> <li>220. Contains Duplicate III</li> <li>347. Top K Frequent Elements</li> <li>451. Sort Characters By Frequency</li> <li>692. Top K Frequent Words</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#combinatorics","title":"Combinatorics","text":"<ul> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1641. Count Sorted Vowel Strings</li> <li>1643. Kth Smallest Instructions</li> <li>1735. Count Ways to Make Array With Product</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>2063. Vowels of All Substrings</li> <li>2221. Find Triangular Sum of an Array</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2400. Number of Ways to Reach a Position After Exactly k Steps</li> <li>2514. Count Anagrams</li> <li>2539. Count the Number of Good Subsequences</li> <li>458. Poor Pigs</li> <li>62. Unique Paths</li> <li>920. Number of Music Playlists</li> </ul>"},{"location":"tags/#concurrency","title":"Concurrency","text":"<ul> <li>1114. Print in Order</li> <li>1115. Print FooBar Alternately</li> <li>1116. Print Zero Even Odd</li> <li>1117. Building H2O</li> <li>1188. Design Bounded Blocking Queue</li> <li>1195. Fizz Buzz Multithreaded</li> <li>1226. The Dining Philosophers</li> <li>1242. Web Crawler Multithreaded</li> <li>1279. Traffic Light Controlled Intersection</li> </ul>"},{"location":"tags/#counting","title":"Counting","text":"<ul> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1054. Distant Barcodes</li> <li>1079. Letter Tile Possibilities</li> <li>1090. Largest Values From Labels</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1189. Maximum Number of Balloons</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1221. Split a String in Balanced Strings</li> <li>1267. Count Servers that Communicate</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1370. Increasing Decreasing String</li> <li>1394. Find Lucky Integer in an Array</li> <li>1400. Construct K Palindrome Strings</li> <li>1419. Minimum Number of Frogs Croaking</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1512. Number of Good Pairs</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1603. Design Parking System</li> <li>169. Majority Element</li> <li>1704. Determine if String Halves Are Alike</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1748. Sum of Unique Elements</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1814. Count Nice Pairs in an Array</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1854. Maximum Population Year</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2013. Detect Squares</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2029. Stone Game IX</li> <li>2053. Kth Distinct String in an Array</li> <li>2067. Number of Equal Count Substrings</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2085. Count Common Words With One Occurrence</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2182. Construct String With Repeat Limit</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2225. Find Players With Zero or One Losses</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2248. Intersection of Multiple Arrays</li> <li>2268. Minimum Number of Keypresses</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2287. Rearrange Characters to Make Target String</li> <li>229. Majority Element II</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2347. Best Poker Hand</li> <li>2351. First Letter to Appear Twice</li> <li>2404. Most Frequent Even Element</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>2453. Destroy Sequential Targets</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2514. Count Anagrams</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2539. Count the Number of Good Subsequences</li> <li>2547. Minimum Cost to Split an Array</li> <li>299. Bulls and Cows</li> <li>347. Top K Frequent Elements</li> <li>358. Rearrange String k Distance Apart</li> <li>383. Ransom Note</li> <li>387. First Unique Character in a String</li> <li>451. Sort Characters By Frequency</li> <li>621. Task Scheduler</li> <li>692. Top K Frequent Words</li> <li>767. Reorganize String</li> <li>811. Subdomain Visit Count</li> <li>819. Most Common Word</li> <li>869. Reordered Power of 2</li> <li>900. RLE Iterator</li> <li>914. X of a Kind in a Deck of Cards</li> <li>923. 3Sum With Multiplicity</li> <li>945. Minimum Increment to Make Array Unique</li> <li>992. Subarrays with K Different Integers</li> </ul>"},{"location":"tags/#counting-sort","title":"Counting Sort","text":"<ul> <li>1051. Height Checker</li> <li>1122. Relative Sort Array</li> <li>274. H-Index</li> <li>561. Array Partition</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#data-stream","title":"Data Stream","text":"<ul> <li>1032. Stream of Characters</li> <li>1352. Product of the Last K Numbers</li> <li>1429. First Unique Number</li> <li>1472. Design Browser History</li> <li>1500. Design a File Sharing System</li> <li>1656. Design an Ordered Stream</li> <li>1670. Design Front Middle Back Queue</li> <li>170. Two Sum III - Data structure design</li> <li>1825. Finding MK Average</li> <li>2034. Stock Price Fluctuation</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>295. Find Median from Data Stream</li> <li>346. Moving Average from Data Stream</li> <li>642. Design Search Autocomplete System</li> <li>703. Kth Largest Element in a Stream</li> <li>901. Online Stock Span</li> <li>933. Number of Recent Calls</li> </ul>"},{"location":"tags/#database","title":"Database","text":"<ul> <li>1045. Customers Who Bought All Products</li> <li>1050. Actors and Directors Who Cooperated At Least Three Times</li> <li>1068. Product Sales Analysis I</li> <li>1069. Product Sales Analysis II</li> <li>1070. Product Sales Analysis III</li> <li>1075. Project Employees I</li> <li>1076. Project Employees II</li> <li>1077. Project Employees III</li> <li>1082. Sales Analysis I</li> <li>1083. Sales Analysis II</li> <li>1084. Sales Analysis III</li> <li>1097. Game Play Analysis V</li> <li>1098. Unpopular Books</li> <li>1107. New Users Daily Count</li> <li>1112. Highest Grade For Each Student</li> <li>1113. Reported Posts</li> <li>1126. Active Businesses</li> <li>1127. User Purchase Platform</li> <li>1132. Reported Posts II</li> <li>1141. User Activity for the Past 30 Days I</li> <li>1142. User Activity for the Past 30 Days II</li> <li>1148. Article Views I</li> <li>1149. Article Views II</li> <li>1158. Market Analysis I</li> <li>1159. Market Analysis II</li> <li>1164. Product Price at a Given Date</li> <li>1173. Immediate Food Delivery I</li> <li>1174. Immediate Food Delivery II</li> <li>1179. Reformat Department Table</li> <li>1193. Monthly Transactions I</li> <li>1194. Tournament Winners</li> <li>1204. Last Person to Fit in the Bus</li> <li>1205. Monthly Transactions II</li> <li>1211. Queries Quality and Percentage</li> <li>1212. Team Scores in Football Tournament</li> <li>1225. Report Contiguous Dates</li> <li>1241. Number of Comments per Post</li> <li>1251. Average Selling Price</li> <li>1264. Page Recommendations</li> <li>1270. All People Report to the Given Manager</li> <li>1280. Students and Examinations</li> <li>1285. Find the Start and End Number of Continuous Ranges</li> <li>1294. Weather Type in Each Country</li> <li>1303. Find the Team Size</li> <li>1308. Running Total for Different Genders</li> <li>1321. Restaurant Growth</li> <li>1322. Ads Performance</li> <li>1327. List the Products Ordered in a Period</li> <li>1336. Number of Transactions per Visit</li> <li>1341. Movie Rating</li> <li>1350. Students With Invalid Departments</li> <li>1355. Activity Participants</li> <li>1364. Number of Trusted Contacts of a Customer</li> <li>1369. Get the Second Most Recent Activity</li> <li>1378. Replace Employee ID With The Unique Identifier</li> <li>1384. Total Sales Amount by Year</li> <li>1393. Capital Gain/Loss</li> <li>1398. Customers Who Bought Products A and B but Not C</li> <li>1407. Top Travellers</li> <li>1412. Find the Quiet Students in All Exams</li> <li>1421. NPV Queries</li> <li>1435. Create a Session Bar Chart</li> <li>1440. Evaluate Boolean Expression</li> <li>1445. Apples &amp; Oranges</li> <li>1454. Active Users</li> <li>1459. Rectangles Area</li> <li>1468. Calculate Salaries</li> <li>1479. Sales by Day of the Week</li> <li>1484. Group Sold Products By The Date</li> <li>1495. Friendly Movies Streamed Last Month</li> <li>1501. Countries You Can Safely Invest In</li> <li>1511. Customer Order Frequency</li> <li>1517. Find Users With Valid E-Mails</li> <li>1527. Patients With a Condition</li> <li>1532. The Most Recent Three Orders</li> <li>1543. Fix Product Name Format</li> <li>1549. The Most Recent Orders for Each Product</li> <li>1555. Bank Account Summary</li> <li>1565. Unique Orders and Customers Per Month</li> <li>1571. Warehouse Manager</li> <li>1581. Customer Who Visited but Did Not Make Any Transactions</li> <li>1587. Bank Account Summary II</li> <li>1596. The Most Frequently Ordered Products for Each Customer</li> <li>1607. Sellers With No Sales</li> <li>1613. Find the Missing IDs</li> <li>1623. All Valid Triplets That Can Represent a Country</li> <li>1633. Percentage of Users Attended a Contest</li> <li>1635. Hopper Company Queries I</li> <li>1645. Hopper Company Queries II</li> <li>1651. Hopper Company Queries III</li> <li>1661. Average Time of Process per Machine</li> <li>1667. Fix Names in a Table</li> <li>1677. Product's Worth Over Invoices</li> <li>1683. Invalid Tweets</li> <li>1693. Daily Leads and Partners</li> <li>1699. Number of Calls Between Two Persons</li> <li>1709. Biggest Window Between Visits</li> <li>1715. Count Apples and Oranges</li> <li>1729. Find Followers Count</li> <li>1731. The Number of Employees Which Report to Each Employee</li> <li>1741. Find Total Time Spent by Each Employee</li> <li>1747. Leetflex Banned Accounts</li> <li>175. Combine Two Tables</li> <li>1757. Recyclable and Low Fat Products</li> <li>176. Second Highest Salary</li> <li>1767. Find the Subtasks That Did Not Execute</li> <li>177. Nth Highest Salary</li> <li>1777. Product's Price for Each Store</li> <li>178. Rank Scores</li> <li>1783. Grand Slam Titles</li> <li>1789. Primary Department for Each Employee</li> <li>1795. Rearrange Products Table</li> <li>180. Consecutive Numbers</li> <li>1809. Ad-Free Sessions</li> <li>181. Employees Earning More Than Their Managers</li> <li>1811. Find Interview Candidates</li> <li>182. Duplicate Emails</li> <li>1821. Find Customers With Positive Revenue this Year</li> <li>183. Customers Who Never Order</li> <li>1831. Maximum Transaction Each Day</li> <li>184. Department Highest Salary</li> <li>1841. League Statistics</li> <li>1843. Suspicious Bank Accounts</li> <li>185. Department Top Three Salaries</li> <li>1853. Convert Date Format</li> <li>1867. Orders With Maximum Quantity Above Average</li> <li>1873. Calculate Special Bonus</li> <li>1875. Group Employees of the Same Salary</li> <li>1890. The Latest Login in 2020</li> <li>1892. Page Recommendations II</li> <li>1907. Count Salary Categories</li> <li>1917. Leetcodify Friends Recommendations</li> <li>1919. Leetcodify Similar Friends</li> <li>1934. Confirmation Rate</li> <li>1939. Users That Actively Request Confirmation Messages</li> <li>1949. Strong Friendship</li> <li>1951. All the Pairs With the Maximum Number of Common Followers</li> <li>196. Delete Duplicate Emails</li> <li>1965. Employees With Missing Information</li> <li>197. Rising Temperature</li> <li>1972. First and Last Call On the Same Day</li> <li>1978. Employees Whose Manager Left the Company</li> <li>1988. Find Cutoff Score for Each School</li> <li>1990. Count the Number of Experiments</li> <li>2004. The Number of Seniors and Juniors to Join the Company</li> <li>2010. The Number of Seniors and Juniors to Join the Company II</li> <li>2020. Number of Accounts That Did Not Stream</li> <li>2026. Low-Quality Problems</li> <li>2041. Accepted Candidates From the Interviews</li> <li>2051. The Category of Each Member in the Store</li> <li>2066. Account Balance</li> <li>2072. The Winner University</li> <li>2082. The Number of Rich Customers</li> <li>2084. Drop Type 1 Orders for Customers With Type 0 Orders</li> <li>2112. The Airport With the Most Traffic</li> <li>2118. Build the Equation</li> <li>2142. The Number of Passengers in Each Bus I</li> <li>2153. The Number of Passengers in Each Bus II</li> <li>2159. Order Two Columns Independently</li> <li>2173. Longest Winning Streak</li> <li>2175. The Change in Global Rankings</li> <li>2199. Finding the Topic of Each Post</li> <li>2205. The Number of Users That Are Eligible for Discount</li> <li>2228. Users With Two Purchases Within Seven Days</li> <li>2230. The Users That Are Eligible for Discount</li> <li>2238. Number of Times a Driver Was a Passenger</li> <li>2252. Dynamic Pivoting of a Table</li> <li>2253. Dynamic Unpivoting of a Table</li> <li>2292. Products With Three or More Orders in Two Consecutive Years</li> <li>2298. Tasks Count in the Weekend</li> <li>2308. Arrange Table by Gender</li> <li>2314. The First Day of the Maximum Recorded Degree in Each City</li> <li>2324. Product Sales Analysis IV</li> <li>2329. Product Sales Analysis V</li> <li>2339. All the Matches of the League</li> <li>2346. Compute the Rank as a Percentage</li> <li>2356. Number of Unique Subjects Taught by Each Teacher</li> <li>2362. Generate the Invoice</li> <li>2372. Calculate the Influence of Each Salesperson</li> <li>2377. Sort the Olympic Table</li> <li>2388. Change Null Values in a Table to the Previous Value</li> <li>2394. Employees With Deductions</li> <li>2474. Customers With Strictly Increasing Purchases</li> <li>2480. Form a Chemical Bond</li> <li>2494. Merge Overlapping Events in the Same Hall</li> <li>2504. Concatenate the Name and the Profession</li> <li>262. Trips and Users</li> <li>511. Game Play Analysis I</li> <li>512. Game Play Analysis II</li> <li>534. Game Play Analysis III</li> <li>550. Game Play Analysis IV</li> <li>569. Median Employee Salary</li> <li>570. Managers with at Least 5 Direct Reports</li> <li>571. Find Median Given Frequency of Numbers</li> <li>574. Winning Candidate</li> <li>577. Employee Bonus</li> <li>578. Get Highest Answer Rate Question</li> <li>579. Find Cumulative Salary of an Employee</li> <li>580. Count Student Number in Departments</li> <li>584. Find Customer Referee</li> <li>585. Investments in 2016</li> <li>586. Customer Placing the Largest Number of Orders</li> <li>595. Big Countries</li> <li>596. Classes More Than 5 Students</li> <li>597. Friend Requests I: Overall Acceptance Rate</li> <li>601. Human Traffic of Stadium</li> <li>602. Friend Requests II: Who Has the Most Friends</li> <li>603. Consecutive Available Seats</li> <li>607. Sales Person</li> <li>608. Tree Node</li> <li>610. Triangle Judgement</li> <li>612. Shortest Distance in a Plane</li> <li>613. Shortest Distance in a Line</li> <li>614. Second Degree Follower</li> <li>615. Average Salary: Departments VS Company</li> <li>618. Students Report By Geography</li> <li>619. Biggest Single Number</li> <li>620. Not Boring Movies</li> <li>626. Exchange Seats</li> <li>627. Swap Salary</li> </ul>"},{"location":"tags/#depth-first-search","title":"Depth-First Search","text":"<ul> <li>100. Same Tree</li> <li>101. Symmetric Tree</li> <li>1020. Number of Enclaves</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>1034. Coloring A Border</li> <li>1036. Escape a Large Maze</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>104. Maximum Depth of Binary Tree</li> <li>1042. Flower Planting With No Adjacent</li> <li>1059. All Paths from Source Lead to Destination</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>110. Balanced Binary Tree</li> <li>1102. Path With Maximum Minimum Value</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>113. Path Sum II</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1145. Binary Tree Coloring Game</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1192. Critical Connections in a Network</li> <li>1202. Smallest String With Swaps</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1214. Two Sum BSTs</li> <li>1236. Web Crawler</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1242. Web Crawler Multithreaded</li> <li>1245. Tree Diameter</li> <li>1254. Number of Closed Islands</li> <li>1257. Smallest Common Region</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1267. Count Servers that Communicate</li> <li>1273. Delete Tree Nodes</li> <li>129. Sum Root to Leaf Numbers</li> <li>130. Surrounded Regions</li> <li>1302. Deepest Leaves Sum</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1306. Jump Game III</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1319. Number of Operations to Make Network Connected</li> <li>1325. Delete Leaves With a Given Value</li> <li>133. Clone Graph</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>144. Binary Tree Preorder Traversal</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>145. Binary Tree Postorder Traversal</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1462. Course Schedule IV</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1469. Find All The Lonely Nodes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1490. Clone N-ary Tree</li> <li>1506. Find Root of N-Ary Tree</li> <li>1516. Move Sub-Tree of N-Ary Tree</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1522. Diameter of N-Ary Tree</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>1559. Detect Cycles in 2D Grid</li> <li>156. Binary Tree Upside Down</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1600. Throne Inheritance</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1631. Path With Minimum Effort</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1660. Correct a Binary Tree</li> <li>1666. Change the Root of a Binary Tree</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>1706. Where Will the Ball Fall</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1740. Find Distance in a Binary Tree</li> <li>1766. Tree of Coprimes</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1858. Longest Word With All Prefixes</li> <li>1905. Count Sub Islands</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>199. Binary Tree Right Side View</li> <li>1992. Find All Groups of Farmland</li> <li>1993. Operations on Tree</li> <li>200. Number of Islands</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2049. Count Nodes With the Highest Score</li> <li>207. Course Schedule</li> <li>2092. Find All People With Secret</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2097. Valid Arrangement of Pairs</li> <li>210. Course Schedule II</li> <li>2101. Detonate the Maximum Bombs</li> <li>211. Design Add and Search Words Data Structure</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>222. Count Complete Tree Nodes</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>226. Invert Binary Tree</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>2277. Closest Node to Path in Tree</li> <li>230. Kth Smallest Element in a BST</li> <li>2307. Check for Contradictions in Equations</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>2359. Find Closest Node to Given Two Nodes</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2360. Longest Cycle in a Graph</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2440. Create Components With Same Value</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2467. Most Profitable Path in a Tree</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>250. Count Univalue Subtrees</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>257. Binary Tree Paths</li> <li>2581. Count Number of Possible Root Nodes</li> <li>261. Graph Valid Tree</li> <li>269. Alien Dictionary</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>310. Minimum Height Trees</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>329. Longest Increasing Path in a Matrix</li> <li>332. Reconstruct Itinerary</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>339. Nested List Weight Sum</li> <li>341. Flatten Nested List Iterator</li> <li>364. Nested List Weight Sum II</li> <li>365. Water and Jug Problem</li> <li>366. Find Leaves of Binary Tree</li> <li>385. Mini Parser</li> <li>386. Lexicographical Numbers</li> <li>388. Longest Absolute File Path</li> <li>399. Evaluate Division</li> <li>404. Sum of Left Leaves</li> <li>417. Pacific Atlantic Water Flow</li> <li>419. Battleships in a Board</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>437. Path Sum III</li> <li>449. Serialize and Deserialize BST</li> <li>463. Island Perimeter</li> <li>472. Concatenated Words</li> <li>490. The Maze</li> <li>499. The Maze III</li> <li>501. Find Mode in Binary Search Tree</li> <li>505. The Maze II</li> <li>508. Most Frequent Subtree Sum</li> <li>513. Find Bottom Left Tree Value</li> <li>514. Freedom Trail</li> <li>515. Find Largest Value in Each Tree Row</li> <li>529. Minesweeper</li> <li>530. Minimum Absolute Difference in BST</li> <li>536. Construct Binary Tree from String</li> <li>538. Convert BST to Greater Tree</li> <li>543. Diameter of Binary Tree</li> <li>545. Boundary of Binary Tree</li> <li>547. Number of Provinces</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>559. Maximum Depth of N-ary Tree</li> <li>563. Binary Tree Tilt</li> <li>565. Array Nesting</li> <li>572. Subtree of Another Tree</li> <li>582. Kill Process</li> <li>589. N-ary Tree Preorder Traversal</li> <li>590. N-ary Tree Postorder Traversal</li> <li>606. Construct String from Binary Tree</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>666. Path Sum IV</li> <li>669. Trim a Binary Search Tree</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>672. Bulb Switcher II</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>687. Longest Univalue Path</li> <li>690. Employee Importance</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>711. Number of Distinct Islands II</li> <li>721. Accounts Merge</li> <li>733. Flood Fill</li> <li>737. Sentence Similarity II</li> <li>742. Closest Leaf in a Binary Tree</li> <li>743. Network Delay Time</li> <li>749. Contain Virus</li> <li>753. Cracking the Safe</li> <li>756. Pyramid Transition Matrix</li> <li>765. Couples Holding Hands</li> <li>778. Swim in Rising Water</li> <li>783. Minimum Distance Between BST Nodes</li> <li>785. Is Graph Bipartite?</li> <li>787. Cheapest Flights Within K Stops</li> <li>797. All Paths From Source to Target</li> <li>802. Find Eventual Safe States</li> <li>814. Binary Tree Pruning</li> <li>827. Making A Large Island</li> <li>834. Sum of Distances in Tree</li> <li>839. Similar String Groups</li> <li>841. Keys and Rooms</li> <li>851. Loud and Rich</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>872. Leaf-Similar Trees</li> <li>886. Possible Bipartition</li> <li>897. Increasing Order Search Tree</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>934. Shortest Bridge</li> <li>938. Range Sum of BST</li> <li>94. Binary Tree Inorder Traversal</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>951. Flip Equivalent Binary Trees</li> <li>959. Regions Cut By Slashes</li> <li>965. Univalued Binary Tree</li> <li>968. Binary Tree Cameras</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>99. Recover Binary Search Tree</li> <li>993. Cousins in Binary Tree</li> </ul>"},{"location":"tags/#design","title":"Design","text":"<ul> <li>1032. Stream of Characters</li> <li>1146. Snapshot Array</li> <li>1157. Online Majority Element In Subarray</li> <li>1166. Design File System</li> <li>1172. Dinner Plate Stacks</li> <li>1206. Design Skiplist</li> <li>1244. Design A Leaderboard</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1286. Iterator for Combination</li> <li>1348. Tweet Counts Per Frequency</li> <li>1352. Product of the Last K Numbers</li> <li>1357. Apply Discount Every n Orders</li> <li>1381. Design a Stack With Increment Operation</li> <li>1396. Design Underground System</li> <li>1429. First Unique Number</li> <li>146. LRU Cache</li> <li>1472. Design Browser History</li> <li>1476. Subrectangle Queries</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1500. Design a File Sharing System</li> <li>155. Min Stack</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1586. Binary Search Tree Iterator II</li> <li>1600. Throne Inheritance</li> <li>1603. Design Parking System</li> <li>1622. Fancy Sequence</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1656. Design an Ordered Stream</li> <li>1670. Design Front Middle Back Queue</li> <li>170. Two Sum III - Data structure design</li> <li>173. Binary Search Tree Iterator</li> <li>1756. Design Most Recently Used Queue</li> <li>1797. Design Authentication Manager</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1825. Finding MK Average</li> <li>1845. Seat Reservation Manager</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>1912. Design Movie Rental System</li> <li>1993. Operations on Tree</li> <li>2013. Detect Squares</li> <li>2034. Stock Price Fluctuation</li> <li>2043. Simple Bank System</li> <li>2069. Walking Robot Simulation II</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2080. Range Frequency Queries</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>211. Design Add and Search Words Data Structure</li> <li>2166. Design Bitset</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2241. Design an ATM Machine</li> <li>225. Implement Stack using Queues</li> <li>2254. Design Video Sharing Platform</li> <li>2276. Count Integers in Intervals</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2296. Design a Text Editor</li> <li>232. Implement Queue using Stacks</li> <li>2336. Smallest Number in Infinite Set</li> <li>2349. Design a Number Container System</li> <li>2353. Design a Food Rating System</li> <li>2408. Design SQL</li> <li>2424. Longest Uploaded Prefix</li> <li>244. Shortest Word Distance II</li> <li>2502. Design Memory Allocator</li> <li>251. Flatten 2D Vector</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>271. Encode and Decode Strings</li> <li>281. Zigzag Iterator</li> <li>284. Peeking Iterator</li> <li>288. Unique Word Abbreviation</li> <li>295. Find Median from Data Stream</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>341. Flatten Nested List Iterator</li> <li>346. Moving Average from Data Stream</li> <li>348. Design Tic-Tac-Toe</li> <li>352. Data Stream as Disjoint Intervals</li> <li>353. Design Snake Game</li> <li>355. Design Twitter</li> <li>359. Logger Rate Limiter</li> <li>362. Design Hit Counter</li> <li>379. Design Phone Directory</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>432. All O`one Data Structure</li> <li>449. Serialize and Deserialize BST</li> <li>460. LFU Cache</li> <li>535. Encode and Decode TinyURL</li> <li>588. Design In-Memory File System</li> <li>604. Design Compressed String Iterator</li> <li>622. Design Circular Queue</li> <li>631. Design Excel Sum Formula</li> <li>635. Design Log Storage System</li> <li>641. Design Circular Deque</li> <li>642. Design Search Autocomplete System</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>703. Kth Largest Element in a Stream</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>707. Design Linked List</li> <li>715. Range Module</li> <li>716. Max Stack</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>745. Prefix and Suffix Search</li> <li>855. Exam Room</li> <li>895. Maximum Frequency Stack</li> <li>900. RLE Iterator</li> <li>901. Online Stock Span</li> <li>911. Online Election</li> <li>919. Complete Binary Tree Inserter</li> <li>933. Number of Recent Calls</li> <li>981. Time Based Key-Value Store</li> </ul>"},{"location":"tags/#divide-and-conquer","title":"Divide and Conquer","text":"<ul> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>1274. Number of Ships in a Rectangle</li> <li>1382. Balance a Binary Search Tree</li> <li>148. Sort List</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1649. Create Sorted Array through Instructions</li> <li>169. Majority Element</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1763. Longest Nice Substring</li> <li>190. Reverse Bits</li> <li>191. Number of 1 Bits</li> <li>1982. Find Array Given Subset Sums</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>215. Kth Largest Element in an Array</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>23. Merge k Sorted Lists</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>240. Search a 2D Matrix II</li> <li>2407. Longest Increasing Subsequence II</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>315. Count of Smaller Numbers After Self</li> <li>324. Wiggle Sort II</li> <li>327. Count of Range Sum</li> <li>347. Top K Frequent Elements</li> <li>372. Super Pow</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>4. Median of Two Sorted Arrays</li> <li>427. Construct Quad Tree</li> <li>493. Reverse Pairs</li> <li>53. Maximum Subarray</li> <li>558. Logical OR of Two Binary Grids Represented as Quad-Trees</li> <li>654. Maximum Binary Tree</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>912. Sort an Array</li> <li>918. Maximum Sum Circular Subarray</li> <li>932. Beautiful Array</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#doubly-linked-list","title":"Doubly-Linked List","text":"<ul> <li>146. LRU Cache</li> <li>1472. Design Browser History</li> <li>2296. Design a Text Editor</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>432. All O`one Data Structure</li> <li>460. LFU Cache</li> <li>716. Max Stack</li> </ul>"},{"location":"tags/#dynamic-programming","title":"Dynamic Programming","text":"<ul> <li>10. Regular Expression Matching</li> <li>1000. Minimum Cost to Merge Stones</li> <li>1012. Numbers With Repeated Digits</li> <li>1014. Best Sightseeing Pair</li> <li>1024. Video Stitching</li> <li>1025. Divisor Game</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1035. Uncrossed Lines</li> <li>1039. Minimum Score Triangulation of Polygon</li> <li>1043. Partition Array for Maximum Sum</li> <li>1048. Longest String Chain</li> <li>1049. Last Stone Weight II</li> <li>1062. Longest Repeating Substring</li> <li>1066. Campus Bikes II</li> <li>1067. Digit Count in Range</li> <li>1092. Shortest Common Supersequence</li> <li>1105. Filling Bookcase Shelves</li> <li>1125. Smallest Sufficient Team</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1137. N-th Tribonacci Number</li> <li>1139. Largest 1-Bordered Square</li> <li>1140. Stone Game II</li> <li>1143. Longest Common Subsequence</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>115. Distinct Subsequences</li> <li>1155. Number of Dice Rolls With Target Sum</li> <li>1162. As Far from Land as Possible</li> <li>118. Pascal's Triangle</li> <li>1182. Shortest Distance to Target Color</li> <li>1186. Maximum Subarray Sum with One Deletion</li> <li>1187. Make Array Strictly Increasing</li> <li>119. Pascal's Triangle II</li> <li>1191. K-Concatenation Maximum Sum</li> <li>120. Triangle</li> <li>121. Best Time to Buy and Sell Stock</li> <li>1216. Valid Palindrome III</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1220. Count Vowels Permutation</li> <li>1223. Dice Roll Simulation</li> <li>1227. Airplane Seat Assignment Probability</li> <li>123. Best Time to Buy and Sell Stock III</li> <li>1230. Toss Strange Coins</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1240. Tiling a Rectangle with the Fewest Squares</li> <li>1246. Palindrome Removal</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1259. Handshakes That Don't Cross</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1269. Number of Ways to Stay in the Same Place After Some Steps</li> <li>1277. Count Square Submatrices with All Ones</li> <li>1278. Palindrome Partitioning III</li> <li>1289. Minimum Falling Path Sum II</li> <li>1301. Number of Paths with Max Score</li> <li>131. Palindrome Partitioning</li> <li>1312. Minimum Insertion Steps to Make a String Palindrome</li> <li>132. Palindrome Partitioning II</li> <li>1320. Minimum Distance to Type a Word Using Two Fingers</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1335. Minimum Difficulty of a Job Schedule</li> <li>1340. Jump Game V</li> <li>1349. Maximum Students Taking Exam</li> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>1363. Largest Multiple of Three</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1387. Sort Integers by The Power Value</li> <li>1388. Pizza With 3n Slices</li> <li>139. Word Break</li> <li>1395. Count Number of Teams</li> <li>1397. Find All Good Strings</li> <li>140. Word Break II</li> <li>1402. Reducing Dishes</li> <li>1406. Stone Game III</li> <li>1411. Number of Ways to Paint N \u00d7 3 Grid</li> <li>1416. Restore The Array</li> <li>1420. Build Array Where You Can Find The Maximum Exactly K Comparisons</li> <li>1425. Constrained Subsequence Sum</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1449. Form Largest Integer With Digits That Add up to Target</li> <li>1458. Max Dot Product of Two Subsequences</li> <li>1463. Cherry Pickup II</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1473. Paint House III</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1478. Allocate Mailboxes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1494. Parallel Courses II</li> <li>1504. Count Submatrices With All Ones</li> <li>1510. Stone Game IV</li> <li>152. Maximum Product Subarray</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1525. Number of Good Ways to Split a String</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1531. String Compression II</li> <li>1537. Get the Maximum Score</li> <li>1547. Minimum Cost to Cut a Stick</li> <li>1548. The Most Similar Path in a Graph</li> <li>1553. Minimum Number of Days to Eat N Oranges</li> <li>1563. Stone Game V</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1575. Count All Possible Routes</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1621. Number of Sets of K Non-Overlapping Line Segments</li> <li>1626. Best Team With No Conflicts</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>1641. Count Sorted Vowel Strings</li> <li>1643. Kth Smallest Instructions</li> <li>1646. Get Maximum in Generated Array</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1655. Distribute Repeating Integers</li> <li>1659. Maximize Grid Happiness</li> <li>1664. Ways to Make a Fair Array</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1681. Minimum Incompatibility</li> <li>1682. Longest Palindromic Subsequence II</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1690. Stone Game VII</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1692. Count Ways to Distribute Candies</li> <li>1696. Jump Game VI</li> <li>1706. Where Will the Ball Fall</li> <li>1714. Sum Of Special Evenly-Spaced Elements In Array</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1728. Cat and Mouse II</li> <li>1735. Count Ways to Make Array With Product</li> <li>174. Dungeon Game</li> <li>1745. Palindrome Partitioning IV</li> <li>1746. Maximum Subarray Sum After One Operation</li> <li>1749. Maximum Absolute Sum of Any Subarray</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1755. Closest Subsequence Sum</li> <li>1770. Maximum Score from Performing Multiplication Operations</li> <li>1771. Maximize Palindrome Length From Subsequences</li> <li>1774. Closest Dessert Cost</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1799. Maximize Score After N Operations</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1824. Minimum Sideway Jumps</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1872. Stone Game VIII</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>188. Best Time to Buy and Sell Stock IV</li> <li>1883. Minimum Skips to Arrive at Meeting On Time</li> <li>1884. Egg Drop With 2 Eggs and N Floors</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1900. The Earliest and Latest Rounds Where Players Compete</li> <li>1908. Game of Nim</li> <li>1911. Maximum Alternating Subsequence Sum</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1928. Minimum Cost to Reach Destination in Time</li> <li>1931. Painting a Grid With Three Different Colors</li> <li>1937. Maximum Number of Points with Cost</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1955. Count Number of Special Subsequences</li> <li>1959. Minimum Total Space Wasted With K Resizing Operations</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>1977. Number of Ways to Separate Numbers</li> <li>198. House Robber</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1987. Number of Unique Good Subsequences</li> <li>1994. The Number of Good Subsets</li> <li>1997. First Day Where You Have Been in All the Rooms</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2008. Maximum Earnings From Taxi</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2036. Maximum Alternating Subarray Sum</li> <li>2050. Parallel Courses III</li> <li>2052. Minimum Cost to Separate Sentence Into Rows</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2060. Check if an Original String Exists Given Two Encoded Strings</li> <li>2063. Vowels of All Substrings</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>213. House Robber II</li> <li>2140. Solving Questions With Brainpower</li> <li>2143. Choose Numbers From Two Arrays in Range</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>2167. Minimum Time to Remove All Cars Containing Illegal Goods</li> <li>2172. Maximum AND Sum of Array</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2188. Minimum Time to Finish the Race</li> <li>2189. Number of Ways to Build House of Cards</li> <li>22. Generate Parentheses</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>221. Maximal Square</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2222. Number of Ways to Select Buildings</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2262. Total Appeal of A String</li> <li>2263. Make Array Non-decreasing or Non-increasing</li> <li>2266. Count Number of Texts</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2272. Substring With Largest Variance</li> <li>2291. Maximum Profit From Trading Stocks</li> <li>2297. Jump Game VIII</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2305. Fair Distribution of Cookies</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2312. Selling Pieces of Wood</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2318. Number of Distinct Roll Sequences</li> <li>2320. Count Number of Ways to Place Houses</li> <li>2321. Maximum Score Of Spliced Array</li> <li>2327. Number of People Aware of a Secret</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>233. Number of Digit One</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2361. Minimum Costs Using the Train Line</li> <li>2369. Check if There is a Valid Partition For The Array</li> <li>2370. Longest Ideal Subsequence</li> <li>2376. Count Special Integers</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2400. Number of Ways to Reach a Position After Exactly k Steps</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2407. Longest Increasing Subsequence II</li> <li>241. Different Ways to Add Parentheses</li> <li>2420. Find All Good Indices</li> <li>2430. Maximum Deletions on a String</li> <li>2431. Maximize Total Tastiness of Purchased Fruits</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2439. Minimize Maximum of Array</li> <li>2463. Minimum Total Distance Traveled</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2466. Count Ways To Build Good Strings</li> <li>2472. Maximum Number of Non-overlapping Palindrome Substrings</li> <li>2478. Number of Beautiful Partitions</li> <li>2484. Count Palindromic Subsequences</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2501. Longest Square Streak in an Array</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2518. Number of Great Partitions</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2533. Number of Good Binary Strings</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>2547. Minimum Cost to Split an Array</li> <li>2552. Count Increasing Quadruplets</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>256. Paint House</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2585. Number of Ways to Earn Points</li> <li>264. Ugly Number II</li> <li>265. Paint House II</li> <li>276. Paint Fence</li> <li>279. Perfect Squares</li> <li>294. Flip Game II</li> <li>300. Longest Increasing Subsequence</li> <li>309. Best Time to Buy and Sell Stock with Cooldown</li> <li>312. Burst Balloons</li> <li>313. Super Ugly Number</li> <li>32. Longest Valid Parentheses</li> <li>322. Coin Change</li> <li>329. Longest Increasing Path in a Matrix</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>338. Counting Bits</li> <li>343. Integer Break</li> <li>351. Android Unlock Patterns</li> <li>354. Russian Doll Envelopes</li> <li>357. Count Numbers with Unique Digits</li> <li>361. Bomb Enemy</li> <li>368. Largest Divisible Subset</li> <li>375. Guess Number Higher or Lower II</li> <li>376. Wiggle Subsequence</li> <li>377. Combination Sum IV</li> <li>392. Is Subsequence</li> <li>396. Rotate Function</li> <li>397. Integer Replacement</li> <li>403. Frog Jump</li> <li>410. Split Array Largest Sum</li> <li>413. Arithmetic Slices</li> <li>416. Partition Equal Subset Sum</li> <li>418. Sentence Screen Fitting</li> <li>42. Trapping Rain Water</li> <li>435. Non-overlapping Intervals</li> <li>44. Wildcard Matching</li> <li>446. Arithmetic Slices II - Subsequence</li> <li>45. Jump Game II</li> <li>458. Poor Pigs</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>466. Count The Repetitions</li> <li>467. Unique Substrings in Wraparound String</li> <li>471. Encode String with Shortest Length</li> <li>472. Concatenated Words</li> <li>473. Matchsticks to Square</li> <li>474. Ones and Zeroes</li> <li>486. Predict the Winner</li> <li>487. Max Consecutive Ones II</li> <li>488. Zuma Game</li> <li>494. Target Sum</li> <li>5. Longest Palindromic Substring</li> <li>509. Fibonacci Number</li> <li>514. Freedom Trail</li> <li>516. Longest Palindromic Subsequence</li> <li>518. Coin Change II</li> <li>526. Beautiful Arrangement</li> <li>53. Maximum Subarray</li> <li>542. 01 Matrix</li> <li>546. Remove Boxes</li> <li>55. Jump Game</li> <li>552. Student Attendance Record II</li> <li>553. Optimal Division</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>568. Maximum Vacation Days</li> <li>576. Out of Boundary Paths</li> <li>583. Delete Operation for Two Strings</li> <li>600. Non-negative Integers without Consecutive Ones</li> <li>62. Unique Paths</li> <li>629. K Inverse Pairs Array</li> <li>63. Unique Paths II</li> <li>634. Find the Derangement of An Array</li> <li>638. Shopping Offers</li> <li>639. Decode Ways II</li> <li>64. Minimum Path Sum</li> <li>646. Maximum Length of Pair Chain</li> <li>647. Palindromic Substrings</li> <li>650. 2 Keys Keyboard</li> <li>651. 4 Keys Keyboard</li> <li>656. Coin Path</li> <li>664. Strange Printer</li> <li>673. Number of Longest Increasing Subsequence</li> <li>678. Valid Parenthesis String</li> <li>688. Knight Probability in Chessboard</li> <li>689. Maximum Sum of 3 Non-Overlapping Subarrays</li> <li>691. Stickers to Spell Word</li> <li>698. Partition to K Equal Sum Subsets</li> <li>70. Climbing Stairs</li> <li>712. Minimum ASCII Delete Sum for Two Strings</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>718. Maximum Length of Repeated Subarray</li> <li>72. Edit Distance</li> <li>727. Minimum Window Subsequence</li> <li>730. Count Different Palindromic Subsequences</li> <li>740. Delete and Earn</li> <li>741. Cherry Pickup</li> <li>746. Min Cost Climbing Stairs</li> <li>750. Number Of Corner Rectangles</li> <li>764. Largest Plus Sign</li> <li>787. Cheapest Flights Within K Stops</li> <li>788. Rotated Digits</li> <li>790. Domino and Tromino Tiling</li> <li>799. Champagne Tower</li> <li>801. Minimum Swaps To Make Sequences Increasing</li> <li>805. Split Array With Same Average</li> <li>808. Soup Servings</li> <li>813. Largest Sum of Averages</li> <li>818. Race Car</li> <li>823. Binary Trees With Factors</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>834. Sum of Distances in Tree</li> <li>837. New 21 Game</li> <li>838. Push Dominoes</li> <li>845. Longest Mountain in Array</li> <li>847. Shortest Path Visiting All Nodes</li> <li>85. Maximal Rectangle</li> <li>87. Scramble String</li> <li>871. Minimum Number of Refueling Stops</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>877. Stone Game</li> <li>879. Profitable Schemes</li> <li>887. Super Egg Drop</li> <li>894. All Possible Full Binary Trees</li> <li>898. Bitwise ORs of Subarrays</li> <li>902. Numbers At Most N Given Digit Set</li> <li>903. Valid Permutations for DI Sequence</li> <li>907. Sum of Subarray Minimums</li> <li>91. Decode Ways</li> <li>913. Cat and Mouse</li> <li>918. Maximum Sum Circular Subarray</li> <li>920. Number of Music Playlists</li> <li>926. Flip String to Monotone Increasing</li> <li>931. Minimum Falling Path Sum</li> <li>935. Knight Dialer</li> <li>940. Distinct Subsequences II</li> <li>943. Find the Shortest Superstring</li> <li>95. Unique Binary Search Trees II</li> <li>956. Tallest Billboard</li> <li>96. Unique Binary Search Trees</li> <li>960. Delete Columns to Make Sorted III</li> <li>964. Least Operators to Express Number</li> <li>968. Binary Tree Cameras</li> <li>97. Interleaving String</li> <li>975. Odd Even Jump</li> <li>978. Longest Turbulent Subarray</li> <li>983. Minimum Cost For Tickets</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#enumeration","title":"Enumeration","text":"<ul> <li>1291. Sequential Digits</li> <li>1534. Count Good Triplets</li> <li>1566. Detect Pattern of Length M Repeated K or More Times</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1620. Coordinate With Maximum Network Quality</li> <li>1925. Count Square Sum Triples</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1958. Check if Move is Legal</li> <li>1995. Count Special Quadruplets</li> <li>1999. Smallest Greater Multiple Made of Two Digits</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>204. Count Primes</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2081. Sum of k-Mirror Numbers</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2122. Recover the Original Array</li> <li>2151. Maximum Good People Based on Statements</li> <li>2162. Minimum Cost to Set Cooking Time</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2232. Minimize Result by Adding Parentheses to Expression</li> <li>2240. Number of Ways to Buy Pens and Pencils</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>2261. K Divisible Elements Subarrays</li> <li>2306. Naming a Company</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2367. Number of Arithmetic Triplets</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2417. Closest Fair Integer</li> <li>2427. Number of Common Factors</li> <li>2437. Number of Valid Clock Times</li> <li>2440. Create Components With Same Value</li> <li>2443. Sum of Number and Its Reverse</li> <li>2552. Count Increasing Quadruplets</li> <li>681. Next Closest Time</li> <li>800. Similar RGB Color</li> <li>829. Consecutive Numbers Sum</li> <li>845. Longest Mountain in Array</li> <li>869. Reordered Power of 2</li> <li>906. Super Palindromes</li> <li>949. Largest Time for Given Digits</li> </ul>"},{"location":"tags/#eulerian-circuit","title":"Eulerian Circuit","text":"<ul> <li>2097. Valid Arrangement of Pairs</li> <li>332. Reconstruct Itinerary</li> <li>753. Cracking the Safe</li> </ul>"},{"location":"tags/#game-theory","title":"Game Theory","text":"<ul> <li>1025. Divisor Game</li> <li>1140. Stone Game II</li> <li>1406. Stone Game III</li> <li>1510. Stone Game IV</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1563. Stone Game V</li> <li>1686. Stone Game VI</li> <li>1690. Stone Game VII</li> <li>1728. Cat and Mouse II</li> <li>1872. Stone Game VIII</li> <li>1908. Game of Nim</li> <li>1927. Sum Game</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2029. Stone Game IX</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>292. Nim Game</li> <li>294. Flip Game II</li> <li>375. Guess Number Higher or Lower II</li> <li>464. Can I Win</li> <li>486. Predict the Winner</li> <li>810. Chalkboard XOR Game</li> <li>843. Guess the Word</li> <li>877. Stone Game</li> <li>913. Cat and Mouse</li> </ul>"},{"location":"tags/#geometry","title":"Geometry","text":"<ul> <li>1030. Matrix Cells in Distance Order</li> <li>1037. Valid Boomerang</li> <li>1232. Check If It Is a Straight Line</li> <li>1266. Minimum Time Visiting All Points</li> <li>1401. Circle and Rectangle Overlapping</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>149. Max Points on a Line</li> <li>1515. Best Position for a Service Centre</li> <li>1610. Maximum Number of Visible Points</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1924. Erect the Fence II</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>2101. Detonate the Maximum Bombs</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>223. Rectangle Area</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2481. Minimum Cuts to Divide a Circle</li> <li>335. Self Crossing</li> <li>469. Convex Polygon</li> <li>478. Generate Random Point in a Circle</li> <li>587. Erect the Fence</li> <li>593. Valid Square</li> <li>812. Largest Triangle Area</li> <li>836. Rectangle Overlap</li> <li>858. Mirror Reflection</li> <li>883. Projection Area of 3D Shapes</li> <li>892. Surface Area of 3D Shapes</li> <li>939. Minimum Area Rectangle</li> <li>963. Minimum Area Rectangle II</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#graph","title":"Graph","text":"<ul> <li>1042. Flower Planting With No Adjacent</li> <li>1059. All Paths from Source Lead to Destination</li> <li>1129. Shortest Path with Alternating Colors</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1136. Parallel Courses</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1192. Critical Connections in a Network</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1245. Tree Diameter</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1319. Number of Operations to Make Network Connected</li> <li>133. Clone Graph</li> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1361. Validate Binary Tree Nodes</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1377. Frog Position After T Seconds</li> <li>1462. Course Schedule IV</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1494. Parallel Courses II</li> <li>1514. Path with Maximum Probability</li> <li>1548. The Most Similar Path in a Graph</li> <li>1557. Minimum Number of Vertices to Reach All Nodes</li> <li>1579. Remove Max Number of Edges to Keep Graph Fully Traversable</li> <li>1584. Min Cost to Connect All Points</li> <li>1591. Strange Printer II</li> <li>1615. Maximal Network Rank</li> <li>1632. Rank Transform of a Matrix</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1719. Number Of Ways To Reconstruct A Tree</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> <li>1728. Cat and Mouse II</li> <li>1761. Minimum Degree of a Connected Trio in a Graph</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1782. Count Pairs Of Nodes</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1791. Find Center of Star Graph</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1928. Minimum Cost to Reach Destination in Time</li> <li>1971. Find if Path Exists in Graph</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>2039. The Time When the Network Becomes Idle</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2050. Parallel Courses III</li> <li>2065. Maximum Path Quality of a Graph</li> <li>207. Course Schedule</li> <li>2076. Process Restricted Friend Requests</li> <li>2077. Paths in Maze That Lead to Same Room</li> <li>2092. Find All People With Secret</li> <li>2093. Minimum Cost to Reach City With Discounts</li> <li>2097. Valid Arrangement of Pairs</li> <li>210. Course Schedule II</li> <li>2101. Detonate the Maximum Bombs</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2203. Minimum Weighted Subgraph With the Required Paths</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2285. Maximum Total Importance of Roads</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2297. Jump Game VIII</li> <li>2307. Check for Contradictions in Equations</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2359. Find Closest Node to Given Two Nodes</li> <li>2360. Longest Cycle in a Graph</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2374. Node With Highest Edge Score</li> <li>2392. Build a Matrix With Conditions</li> <li>2421. Number of Good Paths</li> <li>2467. Most Profitable Path in a Tree</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2508. Add Edges to Make Degrees of All Nodes Even</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>261. Graph Valid Tree</li> <li>269. Alien Dictionary</li> <li>277. Find the Celebrity</li> <li>310. Minimum Height Trees</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>329. Longest Increasing Path in a Matrix</li> <li>332. Reconstruct Itinerary</li> <li>399. Evaluate Division</li> <li>444. Sequence Reconstruction</li> <li>490. The Maze</li> <li>499. The Maze III</li> <li>505. The Maze II</li> <li>547. Number of Provinces</li> <li>631. Design Excel Sum Formula</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>743. Network Delay Time</li> <li>753. Cracking the Safe</li> <li>765. Couples Holding Hands</li> <li>785. Is Graph Bipartite?</li> <li>787. Cheapest Flights Within K Stops</li> <li>797. All Paths From Source to Target</li> <li>802. Find Eventual Safe States</li> <li>834. Sum of Distances in Tree</li> <li>841. Keys and Rooms</li> <li>847. Shortest Path Visiting All Nodes</li> <li>851. Loud and Rich</li> <li>882. Reachable Nodes In Subdivided Graph</li> <li>886. Possible Bipartition</li> <li>913. Cat and Mouse</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>959. Regions Cut By Slashes</li> <li>990. Satisfiability of Equality Equations</li> <li>997. Find the Town Judge</li> </ul>"},{"location":"tags/#greedy","title":"Greedy","text":"<ul> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1007. Minimum Domino Rotations For Equal Row</li> <li>1013. Partition Array Into Three Parts With Equal Sum</li> <li>1024. Video Stitching</li> <li>1029. Two City Scheduling</li> <li>1053. Previous Permutation With One Swap</li> <li>1054. Distant Barcodes</li> <li>1055. Shortest Way to Form String</li> <li>1057. Campus Bikes</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1090. Largest Values From Labels</li> <li>11. Container With Most Water</li> <li>1121. Divide Array Into Increasing Sequences</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1144. Decrease Elements To Make Array Zigzag</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1183. Maximum Number of Ones</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1199. Minimum Time to Build Blocks</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1221. Split a String in Balanced Strings</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1323. Maximum 69 Number</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1328. Break a Palindrome</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1338. Reduce Array Size to The Half</li> <li>134. Gas Station</li> <li>135. Candy</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1363. Largest Multiple of Three</li> <li>1382. Balance a Binary Search Tree</li> <li>1383. Maximum Performance of a Team</li> <li>1386. Cinema Seat Allocation</li> <li>1388. Pizza With 3n Slices</li> <li>1400. Construct K Palindrome Strings</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1405. Longest Happy String</li> <li>1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K</li> <li>1432. Max Difference You Can Get From Changing an Integer</li> <li>1433. Check If a String Can Break Another String</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1488. Avoid Flood in The City</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>1520. Maximum Number of Non-Overlapping Substrings</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1529. Minimum Suffix Flips</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1537. Get the Maximum Score</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1632. Rank Transform of a Matrix</li> <li>1642. Furthest Building You Can Reach</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1663. Smallest String With A Given Numeric Value</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1675. Minimize Deviation in Array</li> <li>1686. Stone Game VI</li> <li>1689. Partitioning Into Minimum Number Of Deci-Binary Numbers</li> <li>1702. Maximum Binary String After Change</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1708. Largest Subarray Length K</li> <li>1710. Maximum Units on a Truck</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1717. Maximum Score From Removing Substrings</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1733. Minimum Number of People to Teach</li> <li>1736. Latest Time by Replacing Hidden Digits</li> <li>1739. Building Boxes</li> <li>1753. Maximum Score From Removing Stones</li> <li>1754. Largest Merge Of Two Strings</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1785. Minimum Elements to Add to Form a Given Sum</li> <li>1788. Maximize the Beauty of the Garden</li> <li>179. Largest Number</li> <li>1792. Maximum Average Pass Ratio</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1798. Maximum Number of Consecutive Values You Can Make</li> <li>1802. Maximum Value at a Given Index in a Bounded Array</li> <li>1824. Minimum Sideway Jumps</li> <li>1827. Minimum Operations to Make the Array Increasing</li> <li>1833. Maximum Ice Cream Bars</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1864. Minimum Number of Swaps to Make the Binary String Alternating</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1881. Maximum Value after Insertion</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1899. Merge Triplets to Form Target Triplet</li> <li>1903. Largest Odd Number in String</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1927. Sum Game</li> <li>1936. Add Minimum Number of Rungs</li> <li>1946. Largest Number After Mutating Substring</li> <li>1953. Maximum Number of Weeks for Which You Can Work</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>1974. Minimum Time to Type Word Using Special Typewriter</li> <li>1975. Maximum Matrix Sum</li> <li>1989. Maximum Number of People That Can Be Caught in Tag</li> <li>1996. The Number of Weak Characters in the Game</li> <li>2007. Find Original Array From Doubled Array</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2027. Minimum Moves to Convert String</li> <li>2029. Stone Game IX</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2078. Two Furthest Houses With Different Colors</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2091. Removing Minimum and Maximum From Array</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>2126. Destroying Asteroids</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2132. Stamping the Grid</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2139. Minimum Moves to Reach Target Score</li> <li>2141. Maximum Running Time of N Computers</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>2182. Construct String With Repeat Limit</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2202. Maximize the Topmost Element After K Moves</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>2214. Minimum Health to Beat Game</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>2224. Minimum Number of Operations to Convert Time</li> <li>2233. Maximum Product After K Increments</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2241. Design an ATM Machine</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>2263. Make Array Non-decreasing or Non-increasing</li> <li>2268. Minimum Number of Keypresses</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>2285. Maximum Total Importance of Roads</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2340. Minimum Adjacent Swaps to Make a Valid Array</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2375. Construct Smallest Number From DI String</li> <li>2383. Minimum Hours of Training to Win a Competition</li> <li>2384. Largest Palindromic Number</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2405. Optimal Partition of String</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>2429. Minimize XOR</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2439. Minimize Maximum of Array</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>2457. Minimum Addition to Make Integer Beautiful</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2498. Frog Jump II</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2528. Maximize the Minimum Powered City</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2542. Maximum Subsequence Score</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2551. Put Marbles in Bags</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2561. Rearranging Fruits</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2578. Split With Minimum Sum</li> <li>277. Find the Celebrity</li> <li>280. Wiggle Sort</li> <li>316. Remove Duplicate Letters</li> <li>321. Create Maximum Number</li> <li>330. Patching Array</li> <li>334. Increasing Triplet Subsequence</li> <li>358. Rearrange String k Distance Apart</li> <li>376. Wiggle Subsequence</li> <li>397. Integer Replacement</li> <li>402. Remove K Digits</li> <li>406. Queue Reconstruction by Height</li> <li>409. Longest Palindrome</li> <li>410. Split Array Largest Sum</li> <li>420. Strong Password Checker</li> <li>435. Non-overlapping Intervals</li> <li>44. Wildcard Matching</li> <li>45. Jump Game II</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>455. Assign Cookies</li> <li>484. Find Permutation</li> <li>502. IPO</li> <li>517. Super Washing Machines</li> <li>527. Word Abbreviation</li> <li>55. Jump Game</li> <li>555. Split Concatenated Strings</li> <li>561. Array Partition</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>605. Can Place Flowers</li> <li>611. Valid Triangle Number</li> <li>621. Task Scheduler</li> <li>624. Maximum Distance in Arrays</li> <li>625. Minimum Factorization</li> <li>630. Course Schedule III</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>646. Maximum Length of Pair Chain</li> <li>649. Dota2 Senate</li> <li>659. Split Array into Consecutive Subsequences</li> <li>670. Maximum Swap</li> <li>678. Valid Parenthesis String</li> <li>680. Valid Palindrome II</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>738. Monotone Increasing Digits</li> <li>757. Set Intersection Size At Least Two</li> <li>763. Partition Labels</li> <li>765. Couples Holding Hands</li> <li>767. Reorganize String</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>781. Rabbits in Forest</li> <li>807. Max Increase to Keep City Skyline</li> <li>826. Most Profit Assigning Work</li> <li>846. Hand of Straights</li> <li>857. Minimum Cost to Hire K Workers</li> <li>860. Lemonade Change</li> <li>861. Score After Flipping Matrix</li> <li>870. Advantage Shuffle</li> <li>871. Minimum Number of Refueling Stops</li> <li>881. Boats to Save People</li> <li>910. Smallest Range II</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>936. Stamping The Sequence</li> <li>942. DI String Match</li> <li>945. Minimum Increment to Make Array Unique</li> <li>948. Bag of Tokens</li> <li>954. Array of Doubled Pairs</li> <li>955. Delete Columns to Make Sorted II</li> <li>969. Pancake Sorting</li> <li>976. Largest Perimeter Triangle</li> <li>984. String Without AAA or BBB</li> <li>991. Broken Calculator</li> </ul>"},{"location":"tags/#hash-function","title":"Hash Function","text":"<ul> <li>1044. Longest Duplicate Substring</li> <li>1062. Longest Repeating Substring</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1316. Distinct Echo Substrings</li> <li>1392. Longest Happy Prefix</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1554. Strings Differ by One Character</li> <li>1698. Number of Distinct Substrings in a String</li> <li>187. Repeated DNA Sequences</li> <li>1923. Longest Common Subpath</li> <li>1948. Delete Duplicate Folders in System</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>214. Shortest Palindrome</li> <li>2156. Find Substring With Given Hash Value</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2223. Sum of Scores of Built Strings</li> <li>2261. K Divisible Elements Subarrays</li> <li>2430. Maximum Deletions on a String</li> <li>535. Encode and Decode TinyURL</li> <li>572. Subtree of Another Tree</li> <li>694. Number of Distinct Islands</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>711. Number of Distinct Islands II</li> <li>718. Maximum Length of Repeated Subarray</li> </ul>"},{"location":"tags/#hash-table","title":"Hash Table","text":"<ul> <li>1. Two Sum</li> <li>1001. Grid Illumination</li> <li>1002. Find Common Characters</li> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1015. Smallest Integer Divisible by K</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1036. Escape a Large Maze</li> <li>1048. Longest String Chain</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>1054. Distant Barcodes</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1079. Letter Tile Possibilities</li> <li>1086. High Five</li> <li>1090. Largest Values From Labels</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1122. Relative Sort Array</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>1124. Longest Well-Performing Interval</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1133. Largest Unique Number</li> <li>1138. Alphabet Board Path</li> <li>1146. Snapshot Array</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1153. String Transforms Into Another String</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1165. Single-Row Keyboard</li> <li>1166. Design File System</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1171. Remove Zero Sum Consecutive Nodes from Linked List</li> <li>1172. Dinner Plate Stacks</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1181. Before and After Puzzle</li> <li>1189. Maximum Number of Balloons</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>12. Integer to Roman</li> <li>1202. Smallest String With Swaps</li> <li>1207. Unique Number of Occurrences</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>1224. Maximum Equal Frequency</li> <li>1244. Design A Leaderboard</li> <li>1248. Count Number of Nice Subarrays</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>126. Word Ladder II</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>127. Word Ladder</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>128. Longest Consecutive Sequence</li> <li>1282. Group the People Given the Group Size They Belong To</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>13. Roman to Integer</li> <li>1311. Get Watched Videos by Your Friends</li> <li>133. Clone Graph</li> <li>1331. Rank Transform of an Array</li> <li>1338. Reduce Array Size to The Half</li> <li>1345. Jump Game IV</li> <li>1346. Check If N and Its Double Exist</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1348. Tweet Counts Per Frequency</li> <li>1357. Apply Discount Every n Orders</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1370. Increasing Decreasing String</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>138. Copy List with Random Pointer</li> <li>1386. Cinema Seat Allocation</li> <li>139. Word Break</li> <li>1394. Find Lucky Integer in an Array</li> <li>1396. Design Underground System</li> <li>1399. Count Largest Group</li> <li>140. Word Break II</li> <li>1400. Construct K Palindrome Strings</li> <li>141. Linked List Cycle</li> <li>1410. HTML Entity Parser</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>142. Linked List Cycle II</li> <li>1426. Counting Elements</li> <li>1429. First Unique Number</li> <li>1436. Destination City</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>146. LRU Cache</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1487. Making File Names Unique</li> <li>1488. Avoid Flood in The City</li> <li>149. Max Points on a Line</li> <li>1490. Clone N-ary Tree</li> <li>1496. Path Crossing</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1500. Design a File Sharing System</li> <li>1506. Find Root of N-Ary Tree</li> <li>1512. Number of Good Pairs</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1540. Can Convert String in K Moves</li> <li>1542. Find Longest Awesome Substring</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1554. Strings Differ by One Character</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1590. Make Sum Divisible by P</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>160. Intersection of Two Linked Lists</li> <li>1600. Throne Inheritance</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1624. Largest Substring Between Two Equal Characters</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1640. Check Array Formation Through Concatenation</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1656. Design an Ordered Stream</li> <li>1657. Determine if Two Strings Are Close</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>166. Fraction to Recurring Decimal</li> <li>1660. Correct a Binary Tree</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1679. Max Number of K-Sum Pairs</li> <li>1684. Count the Number of Consistent Strings</li> <li>169. Majority Element</li> <li>1695. Maximum Erasure Value</li> <li>17. Letter Combinations of a Phone Number</li> <li>170. Two Sum III - Data structure design</li> <li>1711. Count Good Meals</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1726. Tuple with Same Product</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1740. Find Distance in a Binary Tree</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1743. Restore the Array From Adjacent Pairs</li> <li>1748. Sum of Unique Elements</li> <li>1756. Design Most Recently Used Queue</li> <li>1763. Longest Nice Substring</li> <li>1772. Sort Features by Popularity</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1796. Second Largest Digit in a String</li> <li>1797. Design Authentication Manager</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1805. Number of Different Integers in a String</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1814. Count Nice Pairs in an Array</li> <li>1817. Finding the Users Active Minutes</li> <li>1832. Check if the Sentence Is Pangram</li> <li>1836. Remove Duplicates From an Unsorted Linked List</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>187. Repeated DNA Sequences</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1906. Minimum Absolute Difference Queries</li> <li>1912. Design Movie Rental System</li> <li>1915. Number of Wonderful Substrings</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1935. Maximum Number of Words You Can Type</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>1948. Delete Duplicate Folders in System</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1993. Operations on Tree</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2007. Find Original Array From Doubled Array</li> <li>2013. Detect Squares</li> <li>202. Happy Number</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2032. Two Out of Three</li> <li>2034. Stock Price Fluctuation</li> <li>2043. Simple Bank System</li> <li>205. Isomorphic Strings</li> <li>2053. Kth Distinct String in an Array</li> <li>2062. Count Vowel Substrings of a String</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2080. Range Frequency Queries</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2085. Count Common Words With One Occurrence</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2103. Rings and Rods</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2121. Intervals Between Identical Elements</li> <li>2122. Recover the Original Array</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2166. Design Bitset</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>217. Contains Duplicate</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>219. Contains Duplicate II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2215. Find the Difference of Two Arrays</li> <li>2225. Find Players With Zero or One Losses</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2248. Intersection of Multiple Arrays</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2254. Design Video Sharing Platform</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2261. K Divisible Elements Subarrays</li> <li>2262. Total Appeal of A String</li> <li>2266. Count Number of Texts</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2287. Rearrange Characters to Make Target String</li> <li>229. Majority Element II</li> <li>2295. Replace Elements in an Array</li> <li>2301. Match Substring After Replacement</li> <li>2306. Naming a Company</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>2325. Decode the Message</li> <li>2336. Smallest Number in Infinite Set</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2347. Best Poker Hand</li> <li>2349. Design a Number Container System</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2351. First Letter to Appear Twice</li> <li>2352. Equal Row and Column Pairs</li> <li>2353. Design a Food Rating System</li> <li>2354. Number of Excellent Pairs</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2363. Merge Similar Items</li> <li>2364. Count Number of Bad Pairs</li> <li>2365. Task Scheduler II</li> <li>2367. Number of Arithmetic Triplets</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2370. Longest Ideal Subsequence</li> <li>2374. Node With Highest Edge Score</li> <li>2384. Largest Palindromic Number</li> <li>2395. Find Subarrays With Equal Sum</li> <li>2399. Check Distances Between Same Letters</li> <li>2404. Most Frequent Even Element</li> <li>2405. Optimal Partition of String</li> <li>2408. Design SQL</li> <li>2418. Sort the People</li> <li>242. Valid Anagram</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>244. Shortest Word Distance II</li> <li>2441. Largest Positive Integer That Exists With Its Negative</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2451. Odd String Difference</li> <li>2453. Destroy Sequential Targets</li> <li>2456. Most Popular Video Creator</li> <li>246. Strobogrammatic Number</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2465. Number of Distinct Averages</li> <li>2475. Number of Unequal Triplets in Array</li> <li>2488. Count Subarrays With Median K</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>249. Group Shifted Strings</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2501. Longest Square Streak in an Array</li> <li>2502. Design Memory Allocator</li> <li>2506. Count Pairs Of Similar Strings</li> <li>2508. Add Edges to Make Degrees of All Nodes Even</li> <li>2512. Reward Top K Students</li> <li>2514. Count Anagrams</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2537. Count the Number of Good Subarrays</li> <li>2539. Count the Number of Good Subsequences</li> <li>2540. Minimum Common Value</li> <li>2547. Minimum Cost to Split an Array</li> <li>2549. Count Distinct Numbers on Board</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2561. Rearranging Fruits</li> <li>2564. Substring XOR Queries</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2584. Split the Array to Make Coprime Products</li> <li>264. Ugly Number II</li> <li>266. Palindrome Permutation</li> <li>267. Palindrome Permutation II</li> <li>268. Missing Number</li> <li>288. Unique Word Abbreviation</li> <li>290. Word Pattern</li> <li>291. Word Pattern II</li> <li>299. Bulls and Cows</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>311. Sparse Matrix Multiplication</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>336. Palindrome Pairs</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>347. Top K Frequent Elements</li> <li>348. Design Tic-Tac-Toe</li> <li>349. Intersection of Two Arrays</li> <li>350. Intersection of Two Arrays II</li> <li>355. Design Twitter</li> <li>356. Line Reflection</li> <li>358. Rearrange String k Distance Apart</li> <li>359. Logger Rate Limiter</li> <li>36. Valid Sudoku</li> <li>362. Design Hit Counter</li> <li>37. Sudoku Solver</li> <li>379. Design Phone Directory</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>383. Ransom Note</li> <li>387. First Unique Character in a String</li> <li>389. Find the Difference</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>398. Random Pick Index</li> <li>409. Longest Palindrome</li> <li>41. First Missing Positive</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>423. Reconstruct Original Digits from English</li> <li>424. Longest Repeating Character Replacement</li> <li>432. All O`one Data Structure</li> <li>433. Minimum Genetic Mutation</li> <li>438. Find All Anagrams in a String</li> <li>442. Find All Duplicates in an Array</li> <li>447. Number of Boomerangs</li> <li>448. Find All Numbers Disappeared in an Array</li> <li>451. Sort Characters By Frequency</li> <li>454. 4Sum II</li> <li>457. Circular Array Loop</li> <li>460. LFU Cache</li> <li>480. Sliding Window Median</li> <li>49. Group Anagrams</li> <li>491. Non-decreasing Subsequences</li> <li>496. Next Greater Element I</li> <li>500. Keyboard Row</li> <li>508. Most Frequent Subtree Sum</li> <li>519. Random Flip Matrix</li> <li>522. Longest Uncommon Subsequence II</li> <li>523. Continuous Subarray Sum</li> <li>525. Contiguous Array</li> <li>531. Lonely Pixel I</li> <li>532. K-diff Pairs in an Array</li> <li>533. Lonely Pixel II</li> <li>535. Encode and Decode TinyURL</li> <li>554. Brick Wall</li> <li>560. Subarray Sum Equals K</li> <li>567. Permutation in String</li> <li>575. Distribute Candies</li> <li>582. Kill Process</li> <li>588. Design In-Memory File System</li> <li>594. Longest Harmonious Subsequence</li> <li>599. Minimum Index Sum of Two Lists</li> <li>604. Design Compressed String Iterator</li> <li>609. Find Duplicate File in System</li> <li>616. Add Bold Tag in String</li> <li>621. Task Scheduler</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>635. Design Log Storage System</li> <li>645. Set Mismatch</li> <li>648. Replace Words</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>659. Split Array into Consecutive Subsequences</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>690. Employee Importance</li> <li>692. Top K Frequent Words</li> <li>694. Number of Distinct Islands</li> <li>697. Degree of an Array</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>710. Random Pick with Blacklist</li> <li>711. Number of Distinct Islands II</li> <li>720. Longest Word in Dictionary</li> <li>726. Number of Atoms</li> <li>73. Set Matrix Zeroes</li> <li>734. Sentence Similarity</li> <li>736. Parse Lisp Expression</li> <li>737. Sentence Similarity II</li> <li>740. Delete and Earn</li> <li>745. Prefix and Suffix Search</li> <li>748. Shortest Completing Word</li> <li>752. Open the Lock</li> <li>758. Bold Words in String</li> <li>76. Minimum Window Substring</li> <li>760. Find Anagram Mappings</li> <li>763. Partition Labels</li> <li>767. Reorganize String</li> <li>770. Basic Calculator IV</li> <li>771. Jewels and Stones</li> <li>781. Rabbits in Forest</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>804. Unique Morse Code Words</li> <li>811. Subdomain Visit Count</li> <li>815. Bus Routes</li> <li>817. Linked List Components</li> <li>819. Most Common Word</li> <li>820. Short Encoding of Words</li> <li>822. Card Flipping Game</li> <li>823. Binary Trees With Factors</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>846. Hand of Straights</li> <li>859. Buddy Strings</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>884. Uncommon Words from Two Sentences</li> <li>888. Fair Candy Swap</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>890. Find and Replace Pattern</li> <li>893. Groups of Special-Equivalent Strings</li> <li>895. Maximum Frequency Stack</li> <li>904. Fruit Into Baskets</li> <li>911. Online Election</li> <li>914. X of a Kind in a Deck of Cards</li> <li>916. Word Subsets</li> <li>923. 3Sum With Multiplicity</li> <li>929. Unique Email Addresses</li> <li>930. Binary Subarrays With Sum</li> <li>939. Minimum Area Rectangle</li> <li>953. Verifying an Alien Dictionary</li> <li>954. Array of Doubled Pairs</li> <li>957. Prison Cells After N Days</li> <li>961. N-Repeated Element in Size 2N Array</li> <li>966. Vowel Spellchecker</li> <li>970. Powerful Integers</li> <li>974. Subarray Sums Divisible by K</li> <li>981. Time Based Key-Value Store</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>992. Subarrays with K Different Integers</li> <li>997. Find the Town Judge</li> </ul>"},{"location":"tags/#heap-priority-queue","title":"Heap (Priority Queue)","text":"<ul> <li>1046. Last Stone Weight</li> <li>1054. Distant Barcodes</li> <li>1094. Car Pooling</li> <li>1102. Path With Maximum Minimum Value</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1172. Dinner Plate Stacks</li> <li>1183. Maximum Number of Ones</li> <li>1199. Minimum Time to Build Blocks</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1354. Construct Target Array With Multiple Sums</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1383. Maximum Performance of a Team</li> <li>1388. Pizza With 3n Slices</li> <li>1405. Longest Happy String</li> <li>1424. Diagonal Traverse II</li> <li>1425. Constrained Subsequence Sum</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1488. Avoid Flood in The City</li> <li>1499. Max Value of Equation</li> <li>1500. Design a File Sharing System</li> <li>1514. Path with Maximum Probability</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1631. Path With Minimum Effort</li> <li>1642. Furthest Building You Can Reach</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1675. Minimize Deviation in Array</li> <li>1686. Stone Game VI</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1696. Jump Game VI</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1753. Maximum Score From Removing Stones</li> <li>1776. Car Fleet II</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1792. Maximum Average Pass Ratio</li> <li>1801. Number of Orders in the Backlog</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1825. Finding MK Average</li> <li>1834. Single-Threaded CPU</li> <li>1845. Seat Reservation Manager</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1882. Process Tasks Using Servers</li> <li>1912. Design Movie Rental System</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>1962. Remove Stones to Minimize the Total</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2034. Stock Price Fluctuation</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>215. Kth Largest Element in an Array</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>218. The Skyline Problem</li> <li>2182. Construct String With Repeat Limit</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>2231. Largest Number After Digit Swaps by Parity</li> <li>2233. Maximum Product After K Increments</li> <li>2285. Maximum Total Importance of Roads</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>23. Merge k Sorted Lists</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2336. Smallest Number in Infinite Set</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2349. Design a Number Container System</li> <li>2353. Design a Food Rating System</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2386. Find the K-Sum of an Array</li> <li>239. Sliding Window Maximum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2402. Meeting Rooms III</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2424. Longest Uploaded Prefix</li> <li>2454. Next Greater Element IV</li> <li>2456. Most Popular Video Creator</li> <li>2462. Total Cost to Hire K Workers</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2512. Reward Top K Students</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2532. Time to Cross a Bridge</li> <li>2542. Maximum Subsequence Score</li> <li>2551. Put Marbles in Bags</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>264. Ugly Number II</li> <li>272. Closest Binary Search Tree Value II</li> <li>295. Find Median from Data Stream</li> <li>347. Top K Frequent Elements</li> <li>355. Design Twitter</li> <li>358. Rearrange String k Distance Apart</li> <li>373. Find K Pairs with Smallest Sums</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>407. Trapping Rain Water II</li> <li>420. Strong Password Checker</li> <li>451. Sort Characters By Frequency</li> <li>480. Sliding Window Median</li> <li>499. The Maze III</li> <li>502. IPO</li> <li>505. The Maze II</li> <li>506. Relative Ranks</li> <li>621. Task Scheduler</li> <li>630. Course Schedule III</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>658. Find K Closest Elements</li> <li>659. Split Array into Consecutive Subsequences</li> <li>675. Cut Off Trees for Golf Event</li> <li>692. Top K Frequent Words</li> <li>703. Kth Largest Element in a Stream</li> <li>743. Network Delay Time</li> <li>759. Employee Free Time</li> <li>767. Reorganize String</li> <li>778. Swim in Rising Water</li> <li>786. K-th Smallest Prime Fraction</li> <li>787. Cheapest Flights Within K Stops</li> <li>855. Exam Room</li> <li>857. Minimum Cost to Hire K Workers</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>871. Minimum Number of Refueling Stops</li> <li>882. Reachable Nodes In Subdivided Graph</li> <li>912. Sort an Array</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#interactive","title":"Interactive","text":"<ul> <li>1095. Find in Mountain Array</li> <li>1236. Web Crawler</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1274. Number of Ships in a Rectangle</li> <li>1428. Leftmost Column with at Least a One</li> <li>1533. Find the Index of the Large Integer</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>157. Read N Characters Given Read4</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>277. Find the Celebrity</li> <li>278. First Bad Version</li> <li>374. Guess Number Higher or Lower</li> <li>489. Robot Room Cleaner</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>843. Guess the Word</li> </ul>"},{"location":"tags/#iterator","title":"Iterator","text":"<ul> <li>1286. Iterator for Combination</li> <li>1586. Binary Search Tree Iterator II</li> <li>173. Binary Search Tree Iterator</li> <li>251. Flatten 2D Vector</li> <li>281. Zigzag Iterator</li> <li>284. Peeking Iterator</li> <li>341. Flatten Nested List Iterator</li> <li>604. Design Compressed String Iterator</li> <li>900. RLE Iterator</li> </ul>"},{"location":"tags/#line-sweep","title":"Line Sweep","text":"<ul> <li>1851. Minimum Interval to Include Each Query</li> <li>218. The Skyline Problem</li> <li>391. Perfect Rectangle</li> <li>850. Rectangle Area II</li> </ul>"},{"location":"tags/#linked-list","title":"Linked List","text":"<ul> <li>1019. Next Greater Node In Linked List</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>114. Flatten Binary Tree to Linked List</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1171. Remove Zero Sum Consecutive Nodes from Linked List</li> <li>1206. Design Skiplist</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1290. Convert Binary Number in a Linked List to Integer</li> <li>1367. Linked List in Binary Tree</li> <li>138. Copy List with Random Pointer</li> <li>141. Linked List Cycle</li> <li>142. Linked List Cycle II</li> <li>143. Reorder List</li> <li>146. LRU Cache</li> <li>147. Insertion Sort List</li> <li>1472. Design Browser History</li> <li>1474. Delete N Nodes After M Nodes of a Linked List</li> <li>148. Sort List</li> <li>160. Intersection of Two Linked Lists</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>1669. Merge In Between Linked Lists</li> <li>1670. Design Front Middle Back Queue</li> <li>1721. Swapping Nodes in a Linked List</li> <li>1836. Remove Duplicates From an Unsorted Linked List</li> <li>19. Remove Nth Node From End of List</li> <li>2. Add Two Numbers</li> <li>203. Remove Linked List Elements</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2058. Find the Minimum and Maximum Number of Nodes Between Critical Points</li> <li>206. Reverse Linked List</li> <li>2074. Reverse Nodes in Even Length Groups</li> <li>2095. Delete the Middle Node of a Linked List</li> <li>21. Merge Two Sorted Lists</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2181. Merge Nodes in Between Zeros</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>2296. Design a Text Editor</li> <li>23. Merge k Sorted Lists</li> <li>2326. Spiral Matrix IV</li> <li>234. Palindrome Linked List</li> <li>237. Delete Node in a Linked List</li> <li>24. Swap Nodes in Pairs</li> <li>2487. Remove Nodes From Linked List</li> <li>25. Reverse Nodes in k-Group</li> <li>328. Odd Even Linked List</li> <li>355. Design Twitter</li> <li>369. Plus One Linked List</li> <li>379. Design Phone Directory</li> <li>382. Linked List Random Node</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>432. All O`one Data Structure</li> <li>445. Add Two Numbers II</li> <li>460. LFU Cache</li> <li>61. Rotate List</li> <li>622. Design Circular Queue</li> <li>641. Design Circular Deque</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>707. Design Linked List</li> <li>708. Insert into a Sorted Circular Linked List</li> <li>716. Max Stack</li> <li>725. Split Linked List in Parts</li> <li>817. Linked List Components</li> <li>82. Remove Duplicates from Sorted List II</li> <li>83. Remove Duplicates from Sorted List</li> <li>86. Partition List</li> <li>876. Middle of the Linked List</li> <li>92. Reverse Linked List II</li> </ul>"},{"location":"tags/#math","title":"Math","text":"<ul> <li>1006. Clumsy Factorial</li> <li>1012. Numbers With Repeated Digits</li> <li>1015. Smallest Integer Divisible by K</li> <li>1017. Convert to Base -2</li> <li>1025. Divisor Game</li> <li>1030. Matrix Cells in Distance Order</li> <li>1033. Moving Stones Until Consecutive</li> <li>1037. Valid Boomerang</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1041. Robot Bounded In Circle</li> <li>1056. Confusing Number</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1067. Digit Count in Range</li> <li>1071. Greatest Common Divisor of Strings</li> <li>1073. Adding Two Negabinary Numbers</li> <li>1085. Sum of Digits in the Minimum Number</li> <li>1088. Confusing Number II</li> <li>1093. Statistics from a Large Sample</li> <li>1103. Distribute Candies to People</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>1118. Number of Days in a Month</li> <li>1131. Maximum of Absolute Value Expression</li> <li>1134. Armstrong Number</li> <li>1137. N-th Tribonacci Number</li> <li>1140. Stone Game II</li> <li>1154. Day of the Year</li> <li>1175. Prime Arrangements</li> <li>1180. Count Substrings with Only One Distinct Letter</li> <li>1185. Day of the Week</li> <li>1199. Minimum Time to Build Blocks</li> <li>12. Integer to Roman</li> <li>1201. Ugly Number III</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1228. Missing Number In Arithmetic Progression</li> <li>1230. Toss Strange Coins</li> <li>1232. Check If It Is a Straight Line</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1248. Count Number of Nice Subarrays</li> <li>1250. Check If It Is a Good Array</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1256. Encode Number</li> <li>1259. Handshakes That Don't Cross</li> <li>1266. Minimum Time Visiting All Points</li> <li>1271. Hexspeak</li> <li>1276. Number of Burgers with No Waste of Ingredients</li> <li>1281. Subtract the Product and Sum of Digits of an Integer</li> <li>1290. Convert Binary Number in a Linked List to Integer</li> <li>13. Roman to Integer</li> <li>1304. Find N Unique Integers Sum up to Zero</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1317. Convert Integer to the Sum of Two No-Zero Integers</li> <li>1323. Maximum 69 Number</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1342. Number of Steps to Reduce a Number to Zero</li> <li>1344. Angle Between Hands of a Clock</li> <li>1352. Product of the Last K Numbers</li> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>1360. Number of Days Between Two Dates</li> <li>1362. Closest Divisors</li> <li>1390. Four Divisors</li> <li>1399. Count Largest Group</li> <li>1401. Circle and Rectangle Overlapping</li> <li>1406. Stone Game III</li> <li>1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K</li> <li>1427. Perform String Shifts</li> <li>1432. Max Difference You Can Get From Changing an Integer</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1447. Simplified Fractions</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1478. Allocate Mailboxes</li> <li>1486. XOR Operation in an Array</li> <li>149. Max Points on a Line</li> <li>1492. The kth Factor of n</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1510. Stone Game IV</li> <li>1512. Number of Good Pairs</li> <li>1513. Number of Substrings With Only 1s</li> <li>1515. Best Position for a Service Centre</li> <li>1518. Water Bottles</li> <li>1523. Count Odd Numbers in an Interval Range</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>1551. Minimum Operations to Make Array Equal</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1563. Stone Game V</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1573. Number of Ways to Split a String</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1610. Maximum Number of Visible Points</li> <li>1621. Number of Sets of K Non-Overlapping Line Segments</li> <li>1622. Fancy Sequence</li> <li>1627. Graph Connectivity With Threshold</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>1641. Count Sorted Vowel Strings</li> <li>1643. Kth Smallest Instructions</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>166. Fraction to Recurring Decimal</li> <li>168. Excel Sheet Column Title</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1686. Stone Game VI</li> <li>1688. Count of Matches in Tournament</li> <li>1690. Stone Game VII</li> <li>171. Excel Sheet Column Number</li> <li>1716. Calculate Money in Leetcode Bank</li> <li>172. Factorial Trailing Zeroes</li> <li>1728. Cat and Mouse II</li> <li>1735. Count Ways to Make Array With Product</li> <li>1739. Building Boxes</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1753. Maximum Score From Removing Stones</li> <li>1759. Count Number of Homogenous Substrings</li> <li>1766. Tree of Coprimes</li> <li>1776. Car Fleet II</li> <li>1780. Check if Number is a Sum of Powers of Three</li> <li>1799. Maximize Score After N Operations</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1808. Maximize Number of Nice Divisors</li> <li>1812. Determine Color of a Chessboard Square</li> <li>1814. Count Nice Pairs in an Array</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1822. Sign of the Product of an Array</li> <li>1823. Find the Winner of the Circular Game</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1837. Sum of Digits in Base K</li> <li>1840. Maximum Building Height</li> <li>1862. Sum of Floored Pairs</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1872. Stone Game VIII</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1884. Egg Drop With 2 Eggs and N Floors</li> <li>189. Rotate Array</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1903. Largest Odd Number in String</li> <li>1904. The Number of Full Rounds You Have Played</li> <li>1908. Game of Nim</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1922. Count Good Numbers</li> <li>1924. Erect the Fence II</li> <li>1925. Count Square Sum Triples</li> <li>1927. Sum Game</li> <li>1952. Three Divisors</li> <li>1954. Minimum Garden Perimeter to Collect Enough Apples</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>1994. The Number of Good Subsets</li> <li>1998. GCD Sort of an Array</li> <li>1999. Smallest Greater Multiple Made of Two Digits</li> <li>2. Add Two Numbers</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2019. The Score of Students Solving Math Expression</li> <li>202. Happy Number</li> <li>2028. Find Missing Observations</li> <li>2029. Stone Game IX</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>204. Count Primes</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2063. Vowels of All Substrings</li> <li>2081. Sum of k-Mirror Numbers</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2101. Detonate the Maximum Bombs</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>2117. Abbreviating the Product of a Range</li> <li>2119. A Number After a Double Reversal</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2139. Minimum Moves to Reach Target Score</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2162. Minimum Cost to Set Cooking Time</li> <li>2165. Smallest Value of the Rearranged Number</li> <li>2169. Count Operations to Obtain Zero</li> <li>2177. Find Three Consecutive Integers That Sum to a Given Number</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>2180. Count Integers With Even Digit Sum</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2189. Number of Ways to Build House of Cards</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2198. Number of Single Divisor Triplets</li> <li>2217. Find Palindrome With Fixed Length</li> <li>2221. Find Triangular Sum of an Array</li> <li>223. Rectangle Area</li> <li>2235. Add Two Integers</li> <li>224. Basic Calculator</li> <li>2240. Number of Ways to Buy Pens and Pencils</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2266. Count Number of Texts</li> <li>2269. Find the K-Beauty of a Number</li> <li>227. Basic Calculator II</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>231. Power of Two</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2317. Maximum XOR After Operations</li> <li>233. Number of Digit One</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2348. Number of Zero-Filled Subarrays</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2376. Count Special Integers</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2396. Strictly Palindromic Number</li> <li>2400. Number of Ways to Reach a Position After Exactly k Steps</li> <li>2409. Count Days Spent Together</li> <li>241. Different Ways to Add Parentheses</li> <li>2413. Smallest Even Multiple</li> <li>2417. Closest Fair Integer</li> <li>2427. Number of Common Factors</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2440. Create Components With Same Value</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2443. Sum of Number and Its Reverse</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2450. Number of Distinct Binary Strings After Applying Operations</li> <li>2451. Odd String Difference</li> <li>2455. Average Value of Even Numbers That Are Divisible by Three</li> <li>2457. Minimum Addition to Make Integer Beautiful</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2469. Convert the Temperature</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2481. Minimum Cuts to Divide a Circle</li> <li>2485. Find the Pivot Integer</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2507. Smallest Value After Replacing With Sum of Prime Factors</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2514. Count Anagrams</li> <li>2520. Count the Digits That Divide a Number</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2523. Closest Prime Numbers in Range</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2525. Categorize Box According to Criteria</li> <li>2527. Find Xor-Beauty of Array</li> <li>2535. Difference Between Element Sum and Digit Sum of an Array</li> <li>2539. Count the Number of Good Subsequences</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2543. Check if Point Is Reachable</li> <li>2544. Alternating Digit Sum</li> <li>2549. Count Distinct Numbers on Board</li> <li>2550. Count Collisions of Monkeys on a Polygon</li> <li>2575. Find the Divisibility Array of a String</li> <li>2578. Split With Minimum Sum</li> <li>2579. Count Total Number of Colored Cells</li> <li>258. Add Digits</li> <li>2582. Pass the Pillow</li> <li>2584. Split the Array to Make Coprime Products</li> <li>263. Ugly Number</li> <li>264. Ugly Number II</li> <li>268. Missing Number</li> <li>273. Integer to English Words</li> <li>279. Perfect Squares</li> <li>282. Expression Add Operators</li> <li>29. Divide Two Integers</li> <li>292. Nim Game</li> <li>294. Flip Game II</li> <li>296. Best Meeting Point</li> <li>313. Super Ugly Number</li> <li>319. Bulb Switcher</li> <li>326. Power of Three</li> <li>335. Self Crossing</li> <li>342. Power of Four</li> <li>343. Integer Break</li> <li>356. Line Reflection</li> <li>357. Count Numbers with Unique Digits</li> <li>360. Sort Transformed Array</li> <li>365. Water and Jug Problem</li> <li>367. Valid Perfect Square</li> <li>368. Largest Divisible Subset</li> <li>369. Plus One Linked List</li> <li>371. Sum of Two Integers</li> <li>372. Super Pow</li> <li>375. Guess Number Higher or Lower II</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>382. Linked List Random Node</li> <li>384. Shuffle an Array</li> <li>390. Elimination Game</li> <li>396. Rotate Function</li> <li>398. Random Pick Index</li> <li>400. Nth Digit</li> <li>405. Convert a Number to Hexadecimal</li> <li>412. Fizz Buzz</li> <li>415. Add Strings</li> <li>423. Reconstruct Original Digits from English</li> <li>43. Multiply Strings</li> <li>441. Arranging Coins</li> <li>445. Add Two Numbers II</li> <li>447. Number of Boomerangs</li> <li>453. Minimum Moves to Equal Array Elements</li> <li>458. Poor Pigs</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>464. Can I Win</li> <li>469. Convex Polygon</li> <li>470. Implement Rand10() Using Rand7()</li> <li>477. Total Hamming Distance</li> <li>478. Generate Random Point in a Circle</li> <li>479. Largest Palindrome Product</li> <li>48. Rotate Image</li> <li>483. Smallest Good Base</li> <li>486. Predict the Winner</li> <li>492. Construct the Rectangle</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>50. Pow(x, n)</li> <li>504. Base 7</li> <li>507. Perfect Number</li> <li>509. Fibonacci Number</li> <li>519. Random Flip Matrix</li> <li>523. Continuous Subarray Sum</li> <li>528. Random Pick with Weight</li> <li>537. Complex Number Multiplication</li> <li>539. Minimum Time Difference</li> <li>553. Optimal Division</li> <li>556. Next Greater Element III</li> <li>564. Find the Closest Palindrome</li> <li>573. Squirrel Simulation</li> <li>587. Erect the Fence</li> <li>592. Fraction Addition and Subtraction</li> <li>593. Valid Square</li> <li>598. Range Addition II</li> <li>60. Permutation Sequence</li> <li>62. Unique Paths</li> <li>625. Minimum Factorization</li> <li>628. Maximum Product of Three Numbers</li> <li>633. Sum of Square Numbers</li> <li>634. Find the Derangement of An Array</li> <li>640. Solve the Equation</li> <li>650. 2 Keys Keyboard</li> <li>651. 4 Keys Keyboard</li> <li>66. Plus One</li> <li>660. Remove 9</li> <li>667. Beautiful Arrangement II</li> <li>668. Kth Smallest Number in Multiplication Table</li> <li>67. Add Binary</li> <li>670. Maximum Swap</li> <li>672. Bulb Switcher II</li> <li>679. 24 Game</li> <li>69. Sqrt(x)</li> <li>7. Reverse Integer</li> <li>70. Climbing Stairs</li> <li>710. Random Pick with Blacklist</li> <li>728. Self Dividing Numbers</li> <li>738. Monotone Increasing Digits</li> <li>750. Number Of Corner Rectangles</li> <li>754. Reach a Number</li> <li>762. Prime Number of Set Bits in Binary Representation</li> <li>770. Basic Calculator IV</li> <li>772. Basic Calculator III</li> <li>775. Global and Local Inversions</li> <li>779. K-th Symbol in Grammar</li> <li>780. Reaching Points</li> <li>781. Rabbits in Forest</li> <li>782. Transform to Chessboard</li> <li>788. Rotated Digits</li> <li>789. Escape The Ghosts</li> <li>793. Preimage Size of Factorial Zeroes Function</li> <li>800. Similar RGB Color</li> <li>805. Split Array With Same Average</li> <li>808. Soup Servings</li> <li>810. Chalkboard XOR Game</li> <li>812. Largest Triangle Area</li> <li>829. Consecutive Numbers Sum</li> <li>836. Rectangle Overlap</li> <li>837. New 21 Game</li> <li>840. Magic Squares In Grid</li> <li>843. Guess the Word</li> <li>858. Mirror Reflection</li> <li>866. Prime Palindrome</li> <li>869. Reordered Power of 2</li> <li>877. Stone Game</li> <li>878. Nth Magical Number</li> <li>883. Projection Area of 3D Shapes</li> <li>887. Super Egg Drop</li> <li>89. Gray Code</li> <li>891. Sum of Subsequence Widths</li> <li>892. Surface Area of 3D Shapes</li> <li>899. Orderly Queue</li> <li>9. Palindrome Number</li> <li>902. Numbers At Most N Given Digit Set</li> <li>906. Super Palindromes</li> <li>908. Smallest Range I</li> <li>910. Smallest Range II</li> <li>913. Cat and Mouse</li> <li>914. X of a Kind in a Deck of Cards</li> <li>920. Number of Music Playlists</li> <li>927. Three Equal Parts</li> <li>932. Beautiful Array</li> <li>939. Minimum Area Rectangle</li> <li>952. Largest Component Size by Common Factor</li> <li>957. Prison Cells After N Days</li> <li>96. Unique Binary Search Trees</li> <li>963. Minimum Area Rectangle II</li> <li>964. Least Operators to Express Number</li> <li>970. Powerful Integers</li> <li>972. Equal Rational Numbers</li> <li>973. K Closest Points to Origin</li> <li>976. Largest Perimeter Triangle</li> <li>989. Add to Array-Form of Integer</li> <li>991. Broken Calculator</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#matrix","title":"Matrix","text":"<ul> <li>1020. Number of Enclaves</li> <li>1030. Matrix Cells in Distance Order</li> <li>1034. Coloring A Border</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1102. Path With Maximum Minimum Value</li> <li>1139. Largest 1-Bordered Square</li> <li>1162. As Far from Land as Possible</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1219. Path with Maximum Gold</li> <li>1222. Queens That Can Attack the King</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1254. Number of Closed Islands</li> <li>1260. Shift 2D Grid</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1267. Count Servers that Communicate</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1277. Count Square Submatrices with All Ones</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1289. Minimum Falling Path Sum II</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>130. Surrounded Regions</li> <li>1301. Number of Paths with Max Score</li> <li>1314. Matrix Block Sum</li> <li>1329. Sort the Matrix Diagonally</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1349. Maximum Students Taking Exam</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1380. Lucky Numbers in a Matrix</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1428. Leftmost Column with at Least a One</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1463. Cherry Pickup II</li> <li>1476. Subrectangle Queries</li> <li>1504. Count Submatrices With All Ones</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1572. Matrix Diagonal Sum</li> <li>1582. Special Positions in a Binary Matrix</li> <li>1591. Strange Printer II</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1672. Richest Customer Wealth</li> <li>1706. Where Will the Ball Fall</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1728. Cat and Mouse II</li> <li>1730. Shortest Path to Get Food</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>174. Dungeon Game</li> <li>1765. Map of Highest Peak</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1861. Rotating the Box</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1886. Determine Whether Matrix Can Be Obtained By Rotation</li> <li>1895. Largest Magic Square</li> <li>1901. Find a Peak Element II</li> <li>1905. Count Sub Islands</li> <li>1914. Cyclically Rotating a Grid</li> <li>1926. Nearest Exit from Entrance in Maze</li> <li>1958. Check if Move is Legal</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1975. Maximum Matrix Sum</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1992. Find All Groups of Farmland</li> <li>200. Number of Islands</li> <li>2017. Grid Game</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>212. Word Search II</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2132. Stamping the Grid</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>221. Maximal Square</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2258. Escape the Spreading Fire</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2319. Check if Matrix Is X-Matrix</li> <li>2326. Spiral Matrix IV</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2352. Equal Row and Column Pairs</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2373. Largest Local Values in a Matrix</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2392. Build a Matrix With Conditions</li> <li>2397. Maximum Rows Covered by Columns</li> <li>240. Search a 2D Matrix II</li> <li>2428. Maximum Sum of an Hourglass</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2536. Increment Submatrices by One</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>286. Walls and Gates</li> <li>289. Game of Life</li> <li>296. Best Meeting Point</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>304. Range Sum Query 2D - Immutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>311. Sparse Matrix Multiplication</li> <li>317. Shortest Distance from All Buildings</li> <li>329. Longest Increasing Path in a Matrix</li> <li>348. Design Tic-Tac-Toe</li> <li>353. Design Snake Game</li> <li>36. Valid Sudoku</li> <li>361. Bomb Enemy</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>37. Sudoku Solver</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>407. Trapping Rain Water II</li> <li>417. Pacific Atlantic Water Flow</li> <li>419. Battleships in a Board</li> <li>422. Valid Word Square</li> <li>427. Construct Quad Tree</li> <li>463. Island Perimeter</li> <li>48. Rotate Image</li> <li>498. Diagonal Traverse</li> <li>529. Minesweeper</li> <li>531. Lonely Pixel I</li> <li>533. Lonely Pixel II</li> <li>54. Spiral Matrix</li> <li>542. 01 Matrix</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>566. Reshape the Matrix</li> <li>568. Maximum Vacation Days</li> <li>59. Spiral Matrix II</li> <li>63. Unique Paths II</li> <li>64. Minimum Path Sum</li> <li>661. Image Smoother</li> <li>675. Cut Off Trees for Golf Event</li> <li>695. Max Area of Island</li> <li>723. Candy Crush</li> <li>73. Set Matrix Zeroes</li> <li>733. Flood Fill</li> <li>74. Search a 2D Matrix</li> <li>741. Cherry Pickup</li> <li>749. Contain Virus</li> <li>750. Number Of Corner Rectangles</li> <li>766. Toeplitz Matrix</li> <li>773. Sliding Puzzle</li> <li>778. Swim in Rising Water</li> <li>782. Transform to Chessboard</li> <li>79. Word Search</li> <li>803. Bricks Falling When Hit</li> <li>807. Max Increase to Keep City Skyline</li> <li>827. Making A Large Island</li> <li>832. Flipping an Image</li> <li>835. Image Overlap</li> <li>840. Magic Squares In Grid</li> <li>85. Maximal Rectangle</li> <li>861. Score After Flipping Matrix</li> <li>864. Shortest Path to Get All Keys</li> <li>867. Transpose Matrix</li> <li>883. Projection Area of 3D Shapes</li> <li>885. Spiral Matrix III</li> <li>892. Surface Area of 3D Shapes</li> <li>909. Snakes and Ladders</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>931. Minimum Falling Path Sum</li> <li>934. Shortest Bridge</li> <li>980. Unique Paths III</li> <li>994. Rotting Oranges</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"tags/#memoization","title":"Memoization","text":"<ul> <li>1137. N-th Tribonacci Number</li> <li>1387. Sort Integers by The Power Value</li> <li>139. Word Break</li> <li>140. Word Break II</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1553. Minimum Number of Days to Eat N Oranges</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1575. Count All Possible Routes</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1659. Maximize Grid Happiness</li> <li>1728. Cat and Mouse II</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1900. The Earliest and Latest Rounds Where Players Compete</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2312. Selling Pieces of Wood</li> <li>2318. Number of Distinct Roll Sequences</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>241. Different Ways to Add Parentheses</li> <li>294. Flip Game II</li> <li>329. Longest Increasing Path in a Matrix</li> <li>397. Integer Replacement</li> <li>464. Can I Win</li> <li>488. Zuma Game</li> <li>509. Fibonacci Number</li> <li>546. Remove Boxes</li> <li>638. Shopping Offers</li> <li>698. Partition to K Equal Sum Subsets</li> <li>70. Climbing Stairs</li> <li>894. All Possible Full Binary Trees</li> <li>913. Cat and Mouse</li> </ul>"},{"location":"tags/#merge-sort","title":"Merge Sort","text":"<ul> <li>148. Sort List</li> <li>1649. Create Sorted Array through Instructions</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2179. Count Good Triplets in an Array</li> <li>23. Merge k Sorted Lists</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>493. Reverse Pairs</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#minimum-spanning-tree","title":"Minimum Spanning Tree","text":"<ul> <li>1135. Connecting Cities With Minimum Cost</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1584. Min Cost to Connect All Points</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> </ul>"},{"location":"tags/#monotonic-queue","title":"Monotonic Queue","text":"<ul> <li>1425. Constrained Subsequence Sum</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1499. Max Value of Equation</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1696. Jump Game VI</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>239. Sliding Window Maximum</li> <li>2407. Longest Increasing Subsequence II</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>918. Maximum Sum Circular Subarray</li> </ul>"},{"location":"tags/#monotonic-stack","title":"Monotonic Stack","text":"<ul> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1019. Next Greater Node In Linked List</li> <li>1063. Number of Valid Subarrays</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1124. Longest Well-Performing Interval</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>1504. Count Submatrices With All Ones</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1762. Buildings With an Ocean View</li> <li>1776. Car Fleet II</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1856. Maximum Subarray Min-Product</li> <li>1944. Number of Visible People in a Queue</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1996. The Number of Weak Characters in the Game</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2104. Sum of Subarray Ranges</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>2297. Jump Game VIII</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2454. Next Greater Element IV</li> <li>2487. Remove Nodes From Linked List</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>316. Remove Duplicate Letters</li> <li>321. Create Maximum Number</li> <li>402. Remove K Digits</li> <li>42. Trapping Rain Water</li> <li>456. 132 Pattern</li> <li>496. Next Greater Element I</li> <li>503. Next Greater Element II</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>654. Maximum Binary Tree</li> <li>739. Daily Temperatures</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>84. Largest Rectangle in Histogram</li> <li>85. Maximal Rectangle</li> <li>853. Car Fleet</li> <li>901. Online Stock Span</li> <li>907. Sum of Subarray Minimums</li> <li>962. Maximum Width Ramp</li> <li>975. Odd Even Jump</li> </ul>"},{"location":"tags/#number-theory","title":"Number Theory","text":"<ul> <li>1201. Ugly Number III</li> <li>1250. Check If It Is a Good Array</li> <li>1447. Simplified Fractions</li> <li>1735. Count Ways to Make Array With Product</li> <li>1799. Maximize Score After N Operations</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>204. Count Primes</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2413. Smallest Even Multiple</li> <li>2427. Number of Common Factors</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2507. Smallest Value After Replacing With Sum of Prime Factors</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2523. Closest Prime Numbers in Range</li> <li>2543. Check if Point Is Reachable</li> <li>258. Add Digits</li> <li>2584. Split the Array to Make Coprime Products</li> <li>858. Mirror Reflection</li> <li>914. X of a Kind in a Deck of Cards</li> </ul>"},{"location":"tags/#ordered-set","title":"Ordered Set","text":"<ul> <li>1348. Tweet Counts Per Frequency</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1649. Create Sorted Array through Instructions</li> <li>1675. Minimize Deviation in Array</li> <li>1756. Design Most Recently Used Queue</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1825. Finding MK Average</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1912. Design Movie Rental System</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>2021. Brightest Position on Street</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2034. Stock Price Fluctuation</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2158. Amount of New Area Painted Each Day</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>220. Contains Duplicate III</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2254. Design Video Sharing Platform</li> <li>2276. Count Integers in Intervals</li> <li>2349. Design a Number Container System</li> <li>2353. Design a Food Rating System</li> <li>2363. Merge Similar Items</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>352. Data Stream as Disjoint Intervals</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>456. 132 Pattern</li> <li>493. Reverse Pairs</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>635. Design Log Storage System</li> <li>683. K Empty Slots</li> <li>699. Falling Squares</li> <li>715. Range Module</li> <li>716. Max Stack</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>850. Rectangle Area II</li> <li>855. Exam Room</li> <li>895. Maximum Frequency Stack</li> <li>975. Odd Even Jump</li> </ul>"},{"location":"tags/#prefix-sum","title":"Prefix Sum","text":"<ul> <li>1004. Max Consecutive Ones III</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1094. Car Pooling</li> <li>1109. Corporate Flight Bookings</li> <li>1124. Longest Well-Performing Interval</li> <li>1177. Can Make Palindrome from Substring</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1310. XOR Queries of a Subarray</li> <li>1314. Matrix Block Sum</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1413. Minimum Value to Get Positive Step by Step Sum</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1480. Running Sum of 1d Array</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>1590. Make Sum Divisible by P</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1732. Find the Highest Altitude</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1744. Can You Eat Your Favorite Candy on Your Favorite Day?</li> <li>1788. Maximize the Beauty of the Garden</li> <li>1829. Maximum XOR for Each Query</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1856. Maximum Subarray Min-Product</li> <li>1862. Sum of Floored Pairs</li> <li>1871. Jump Game VII</li> <li>1872. Stone Game VIII</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1895. Largest Magic Square</li> <li>1915. Number of Wonderful Substrings</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1943. Describe the Painting</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1991. Find the Middle Index in Array</li> <li>2017. Grid Game</li> <li>2021. Brightest Position on Street</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2055. Plates Between Candles</li> <li>2067. Number of Equal Count Substrings</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>209. Minimum Size Subarray Sum</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2121. Intervals Between Identical Elements</li> <li>2132. Stamping the Grid</li> <li>2145. Count the Hidden Sequences</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>2214. Minimum Health to Beat Game</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2219. Maximum Sum Score of Array</li> <li>2222. Number of Ways to Select Buildings</li> <li>2237. Count Positions on Street With Required Brightness</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2256. Minimum Average Difference</li> <li>2270. Number of Ways to Split Array</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>238. Product of Array Except Self</li> <li>2381. Shifting Letters II</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2420. Find All Good Indices</li> <li>2428. Maximum Sum of an Hourglass</li> <li>2438. Range Product Queries of Powers</li> <li>2439. Minimize Maximum of Array</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2483. Minimum Penalty for a Shop</li> <li>2485. Find the Pivot Integer</li> <li>2488. Count Subarrays With Median K</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>2528. Maximize the Minimum Powered City</li> <li>253. Meeting Rooms II</li> <li>2536. Increment Submatrices by One</li> <li>2552. Count Increasing Quadruplets</li> <li>2559. Count Vowel Strings in Ranges</li> <li>2574. Left and Right Sum Differences</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>370. Range Addition</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>523. Continuous Subarray Sum</li> <li>525. Contiguous Array</li> <li>528. Random Pick with Weight</li> <li>548. Split Array with Equal Sum</li> <li>560. Subarray Sum Equals K</li> <li>644. Maximum Average Subarray II</li> <li>724. Find Pivot Index</li> <li>798. Smallest Rotation with Highest Score</li> <li>813. Largest Sum of Averages</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>930. Binary Subarrays With Sum</li> <li>974. Subarray Sums Divisible by K</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> </ul>"},{"location":"tags/#probability-and-statistics","title":"Probability and Statistics","text":"<ul> <li>1093. Statistics from a Large Sample</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1230. Toss Strange Coins</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>470. Implement Rand10() Using Rand7()</li> <li>808. Soup Servings</li> <li>837. New 21 Game</li> </ul>"},{"location":"tags/#queue","title":"Queue","text":"<ul> <li>1352. Product of the Last K Numbers</li> <li>1425. Constrained Subsequence Sum</li> <li>1429. First Unique Number</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1499. Max Value of Equation</li> <li>1670. Design Front Middle Back Queue</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1696. Jump Game VI</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1823. Find the Winner of the Circular Game</li> <li>1825. Finding MK Average</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2073. Time Needed to Buy Tickets</li> <li>225. Implement Stack using Queues</li> <li>232. Implement Queue using Stacks</li> <li>2327. Number of People Aware of a Secret</li> <li>239. Sliding Window Maximum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2407. Longest Increasing Subsequence II</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2528. Maximize the Minimum Powered City</li> <li>2534. Time Taken to Cross the Door</li> <li>281. Zigzag Iterator</li> <li>341. Flatten Nested List Iterator</li> <li>346. Moving Average from Data Stream</li> <li>353. Design Snake Game</li> <li>362. Design Hit Counter</li> <li>379. Design Phone Directory</li> <li>387. First Unique Character in a String</li> <li>622. Design Circular Queue</li> <li>641. Design Circular Deque</li> <li>649. Dota2 Senate</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>918. Maximum Sum Circular Subarray</li> <li>933. Number of Recent Calls</li> <li>936. Stamping The Sequence</li> <li>950. Reveal Cards In Increasing Order</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> </ul>"},{"location":"tags/#quickselect","title":"Quickselect","text":"<ul> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>215. Kth Largest Element in an Array</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>324. Wiggle Sort II</li> <li>347. Top K Frequent Elements</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#radix-sort","title":"Radix Sort","text":"<ul> <li>164. Maximum Gap</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#randomized","title":"Randomized","text":"<ul> <li>1515. Best Position for a Service Centre</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>382. Linked List Random Node</li> <li>384. Shuffle an Array</li> <li>398. Random Pick Index</li> <li>470. Implement Rand10() Using Rand7()</li> <li>478. Generate Random Point in a Circle</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>519. Random Flip Matrix</li> <li>528. Random Pick with Weight</li> <li>710. Random Pick with Blacklist</li> </ul>"},{"location":"tags/#recursion","title":"Recursion","text":"<ul> <li>10. Regular Expression Matching</li> <li>1106. Parsing A Boolean Expression</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>143. Reorder List</li> <li>1545. Find Kth Bit in Nth Binary String</li> <li>1808. Maximize Number of Nice Divisors</li> <li>1823. Find the Winner of the Circular Game</li> <li>1922. Count Good Numbers</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>2. Add Two Numbers</li> <li>203. Remove Linked List Elements</li> <li>206. Reverse Linked List</li> <li>21. Merge Two Sorted Lists</li> <li>2212. Maximum Points in an Archery Competition</li> <li>224. Basic Calculator</li> <li>231. Power of Two</li> <li>233. Number of Digit One</li> <li>234. Palindrome Linked List</li> <li>24. Swap Nodes in Pairs</li> <li>241. Different Ways to Add Parentheses</li> <li>247. Strobogrammatic Number II</li> <li>248. Strobogrammatic Number III</li> <li>2487. Remove Nodes From Linked List</li> <li>25. Reverse Nodes in k-Group</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>2550. Count Collisions of Monkeys on a Polygon</li> <li>273. Integer to English Words</li> <li>326. Power of Three</li> <li>342. Power of Four</li> <li>390. Elimination Game</li> <li>394. Decode String</li> <li>439. Ternary Expression Parser</li> <li>44. Wildcard Matching</li> <li>486. Predict the Winner</li> <li>50. Pow(x, n)</li> <li>509. Fibonacci Number</li> <li>544. Output Contest Matches</li> <li>60. Permutation Sequence</li> <li>736. Parse Lisp Expression</li> <li>761. Special Binary String</li> <li>770. Basic Calculator IV</li> <li>772. Basic Calculator III</li> <li>776. Split BST</li> <li>779. K-th Symbol in Grammar</li> <li>894. All Possible Full Binary Trees</li> </ul>"},{"location":"tags/#rejection-sampling","title":"Rejection Sampling","text":"<ul> <li>470. Implement Rand10() Using Rand7()</li> <li>478. Generate Random Point in a Circle</li> </ul>"},{"location":"tags/#reservoir-sampling","title":"Reservoir Sampling","text":"<ul> <li>382. Linked List Random Node</li> <li>398. Random Pick Index</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>519. Random Flip Matrix</li> </ul>"},{"location":"tags/#rolling-hash","title":"Rolling Hash","text":"<ul> <li>1044. Longest Duplicate Substring</li> <li>1062. Longest Repeating Substring</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1316. Distinct Echo Substrings</li> <li>1392. Longest Happy Prefix</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1554. Strings Differ by One Character</li> <li>1698. Number of Distinct Substrings in a String</li> <li>187. Repeated DNA Sequences</li> <li>1923. Longest Common Subpath</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>214. Shortest Palindrome</li> <li>2156. Find Substring With Given Hash Value</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2223. Sum of Scores of Built Strings</li> <li>2261. K Divisible Elements Subarrays</li> <li>2430. Maximum Deletions on a String</li> <li>718. Maximum Length of Repeated Subarray</li> </ul>"},{"location":"tags/#segment-tree","title":"Segment Tree","text":"<ul> <li>1157. Online Majority Element In Subarray</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1622. Fancy Sequence</li> <li>1649. Create Sorted Array through Instructions</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2080. Range Frequency Queries</li> <li>2158. Amount of New Area Painted Each Day</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2276. Count Integers in Intervals</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>406. Queue Reconstruction by Height</li> <li>493. Reverse Pairs</li> <li>673. Number of Longest Increasing Subsequence</li> <li>699. Falling Squares</li> <li>715. Range Module</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>850. Rectangle Area II</li> </ul>"},{"location":"tags/#shell","title":"Shell","text":"<ul> <li>192. Word Frequency</li> <li>193. Valid Phone Numbers</li> <li>194. Transpose File</li> <li>195. Tenth Line</li> </ul>"},{"location":"tags/#shortest-path","title":"Shortest Path","text":"<ul> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1514. Path with Maximum Probability</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2093. Minimum Cost to Reach City With Discounts</li> <li>2203. Minimum Weighted Subgraph With the Required Paths</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2297. Jump Game VIII</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>399. Evaluate Division</li> <li>499. The Maze III</li> <li>505. The Maze II</li> <li>743. Network Delay Time</li> <li>787. Cheapest Flights Within K Stops</li> <li>882. Reachable Nodes In Subdivided Graph</li> </ul>"},{"location":"tags/#simulation","title":"Simulation","text":"<ul> <li>1006. Clumsy Factorial</li> <li>1041. Robot Bounded In Circle</li> <li>1094. Car Pooling</li> <li>1103. Distribute Candies to People</li> <li>1222. Queens That Can Attack the King</li> <li>1243. Array Transformation</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1260. Shift 2D Grid</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1324. Print Words Vertically</li> <li>1389. Create Target Array in the Given Order</li> <li>1409. Queries on a Permutation With Key</li> <li>1441. Build an Array With Stack Operations</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1518. Water Bottles</li> <li>1535. Find the Winner of an Array Game</li> <li>1560. Most Visited Sector in  a Circular Track</li> <li>1562. Find Latest Group of Size M</li> <li>157. Read N Characters Given Read4</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1583. Count Unhappy Friends</li> <li>1599. Maximum Profit of Operating a Centennial Wheel</li> <li>1603. Design Parking System</li> <li>1646. Get Maximum in Generated Array</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1688. Count of Matches in Tournament</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1701. Average Waiting Time</li> <li>1706. Where Will the Ball Fall</li> <li>1801. Number of Orders in the Backlog</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1823. Find the Winner of the Circular Game</li> <li>1860. Incremental Memory Leak</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1914. Cyclically Rotating a Grid</li> <li>1920. Build Array from Permutation</li> <li>1945. Sum of Digits of String After Convert</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2028. Find Missing Observations</li> <li>2043. Simple Bank System</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2069. Walking Robot Simulation II</li> <li>2073. Time Needed to Buy Tickets</li> <li>2075. Decode the Slanted Ciphertext</li> <li>2105. Watering Plants II</li> <li>2109. Adding Spaces to a String</li> <li>2120. Execution of All Suffix Instructions Staying in a Grid</li> <li>2138. Divide a String Into Groups of Size k</li> <li>2149. Rearrange Array Elements by Sign</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2161. Partition Array According to Given Pivot</li> <li>2169. Count Operations to Obtain Zero</li> <li>2177. Find Three Consecutive Integers That Sum to a Given Number</li> <li>2180. Count Integers With Even Digit Sum</li> <li>2181. Merge Nodes in Between Zeros</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2221. Find Triangular Sum of an Array</li> <li>2243. Calculate Digit Sum of a String</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2293. Min Max Game</li> <li>2295. Replace Elements in an Array</li> <li>2296. Design a Text Editor</li> <li>2303. Calculate Amount Paid in Taxes</li> <li>2326. Spiral Matrix IV</li> <li>2327. Number of People Aware of a Secret</li> <li>2352. Equal Row and Column Pairs</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2365. Task Scheduler II</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2390. Removing Stars From a String</li> <li>2460. Apply Operations to an Array</li> <li>2462. Total Cost to Hire K Workers</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2502. Design Memory Allocator</li> <li>2532. Time to Cross a Bridge</li> <li>2534. Time Taken to Cross the Door</li> <li>2549. Count Distinct Numbers on Board</li> <li>2553. Separate the Digits in an Array</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2562. Find the Array Concatenation Value</li> <li>258. Add Digits</li> <li>2582. Pass the Pillow</li> <li>289. Game of Life</li> <li>412. Fizz Buzz</li> <li>415. Add Strings</li> <li>418. Sentence Screen Fitting</li> <li>43. Multiply Strings</li> <li>495. Teemo Attacking</li> <li>498. Diagonal Traverse</li> <li>537. Complex Number Multiplication</li> <li>54. Spiral Matrix</li> <li>544. Output Contest Matches</li> <li>566. Reshape the Matrix</li> <li>59. Spiral Matrix II</li> <li>592. Fraction Addition and Subtraction</li> <li>640. Solve the Equation</li> <li>657. Robot Return to Origin</li> <li>67. Add Binary</li> <li>68. Text Justification</li> <li>682. Baseball Game</li> <li>723. Candy Crush</li> <li>749. Contain Virus</li> <li>755. Pour Water</li> <li>832. Flipping an Image</li> <li>844. Backspace String Compare</li> <li>867. Transpose Matrix</li> <li>874. Walking Robot Simulation</li> <li>885. Spiral Matrix III</li> <li>946. Validate Stack Sequences</li> <li>950. Reveal Cards In Increasing Order</li> <li>985. Sum of Even Numbers After Queries</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"tags/#sliding-window","title":"Sliding Window","text":"<ul> <li>1004. Max Consecutive Ones III</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1044. Longest Duplicate Substring</li> <li>1052. Grumpy Bookstore Owner</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1151. Minimum Swaps to Group All 1's Together</li> <li>1156. Swap For Longest Repeated Character Substring</li> <li>1176. Diet Plan Performance</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1234. Replace the Substring for Balanced String</li> <li>1248. Count Number of Nice Subarrays</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1425. Constrained Subsequence Sum</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1456. Maximum Number of Vowels in a Substring of Given Length</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1499. Max Value of Equation</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1610. Maximum Number of Visible Points</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1695. Maximum Erasure Value</li> <li>1696. Jump Game VI</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1763. Longest Nice Substring</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1839. Longest Substring Of All Vowels in Order</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>187. Repeated DNA Sequences</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>2024. Maximize the Confusion of an Exam</li> <li>209. Minimum Size Subarray Sum</li> <li>2090. K Radius Subarray Averages</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2134. Minimum Swaps to Group All 1's Together II</li> <li>2156. Find Substring With Given Hash Value</li> <li>219. Contains Duplicate II</li> <li>220. Contains Duplicate III</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2269. Find the K-Beauty of a Number</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2379. Minimum Recolors to Get K Consecutive Black Blocks</li> <li>239. Sliding Window Maximum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2401. Longest Nice Subarray</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2528. Maximize the Minimum Powered City</li> <li>2537. Count the Number of Good Subarrays</li> <li>2555. Maximize Win From Two Segments</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>424. Longest Repeating Character Replacement</li> <li>438. Find All Anagrams in a String</li> <li>480. Sliding Window Median</li> <li>487. Max Consecutive Ones II</li> <li>567. Permutation in String</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>643. Maximum Average Subarray I</li> <li>658. Find K Closest Elements</li> <li>683. K Empty Slots</li> <li>713. Subarray Product Less Than K</li> <li>718. Maximum Length of Repeated Subarray</li> <li>727. Minimum Window Subsequence</li> <li>76. Minimum Window Substring</li> <li>837. New 21 Game</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>904. Fruit Into Baskets</li> <li>930. Binary Subarrays With Sum</li> <li>978. Longest Turbulent Subarray</li> <li>992. Subarrays with K Different Integers</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> </ul>"},{"location":"tags/#sorting","title":"Sorting","text":"<ul> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1029. Two City Scheduling</li> <li>1030. Matrix Cells in Distance Order</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1051. Height Checker</li> <li>1054. Distant Barcodes</li> <li>1057. Campus Bikes</li> <li>1065. Index Pairs of a String</li> <li>1086. High Five</li> <li>1090. Largest Values From Labels</li> <li>1094. Car Pooling</li> <li>1099. Two Sum Less Than K</li> <li>1122. Relative Sort Array</li> <li>1133. Largest Unique Number</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1181. Before and After Puzzle</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1200. Minimum Absolute Difference</li> <li>1229. Meeting Scheduler</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1244. Design A Leaderboard</li> <li>1288. Remove Covered Intervals</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1329. Sort the Matrix Diagonally</li> <li>1331. Rank Transform of an Array</li> <li>1333. Filter Restaurants by Vegan-Friendly, Price and Distance</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>1340. Jump Game V</li> <li>1346. Check If N and Its Double Exist</li> <li>1348. Tweet Counts Per Frequency</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1383. Maximum Performance of a Team</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1387. Sort Integers by The Power Value</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1424. Diagonal Traverse II</li> <li>1433. Check If a String Can Break Another String</li> <li>1451. Rearrange Words in a Sentence</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>147. Insertion Sort List</li> <li>1471. The k Strongest Values in an Array</li> <li>1478. Allocate Mailboxes</li> <li>148. Sort List</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1491. Average Salary Excluding the Minimum and Maximum Salary</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>15. 3Sum</li> <li>1502. Can Make Arithmetic Progression From Sequence</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>16. 3Sum Closest</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1610. Maximum Number of Visible Points</li> <li>1619. Mean of Array After Removing Some Elements</li> <li>1626. Best Team With No Conflicts</li> <li>1630. Arithmetic Subarrays</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1637. Widest Vertical Area Between Two Points Containing No Points</li> <li>164. Maximum Gap</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1657. Determine if Two Strings Are Close</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>1679. Max Number of K-Sum Pairs</li> <li>1686. Stone Game VI</li> <li>169. Majority Element</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1710. Maximum Units on a Truck</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1772. Sort Features by Popularity</li> <li>179. Largest Number</li> <li>18. 4Sum</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1833. Maximum Ice Cream Bars</li> <li>1834. Single-Threaded CPU</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1847. Closest Room</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1859. Sorting the Sentence</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1885. Count Pairs in Two Arrays</li> <li>1887. Reduction Operations to Make the Array Elements Equal</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>1913. Maximum Product Difference Between Two Pairs</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1996. The Number of Weak Characters in the Game</li> <li>1998. GCD Sort of an Array</li> <li>2007. Find Original Array From Doubled Array</li> <li>2008. Maximum Earnings From Taxi</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2037. Minimum Number of Moves to Seat Everyone</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2089. Find Target Indices After Sorting Array</li> <li>2092. Find All People With Secret</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2122. Recover the Original Array</li> <li>2126. Destroying Asteroids</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2141. Maximum Running Time of N Computers</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2148. Count Elements With Strictly Smaller and Greater Elements</li> <li>215. Kth Largest Element in an Array</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2164. Sort Even and Odd Indices Independently</li> <li>2165. Smallest Value of the Rearranged Number</li> <li>217. Contains Duplicate</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2191. Sort the Jumbled Numbers</li> <li>2195. Append K Integers With Minimal Sum</li> <li>220. Contains Duplicate III</li> <li>2225. Find Players With Zero or One Losses</li> <li>2231. Largest Number After Digit Swaps by Parity</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2268. Minimum Number of Keypresses</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2274. Maximum Consecutive Floors Without Special Floors</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2285. Maximum Total Importance of Roads</li> <li>229. Majority Element II</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2363. Merge Similar Items</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2386. Find the K-Sum of an Array</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2402. Meeting Rooms III</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2418. Sort the People</li> <li>242. Valid Anagram</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>2454. Next Greater Element IV</li> <li>2456. Most Popular Video Creator</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>2463. Minimum Total Distance Traveled</li> <li>2465. Number of Distinct Averages</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2501. Longest Square Streak in an Array</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2512. Reward Top K Students</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>252. Meeting Rooms</li> <li>253. Meeting Rooms II</li> <li>2542. Maximum Subsequence Score</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2551. Put Marbles in Bags</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2563. Count the Number of Fair Pairs</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2578. Split With Minimum Sum</li> <li>2580. Count Ways to Group Overlapping Ranges</li> <li>259. 3Sum Smaller</li> <li>268. Missing Number</li> <li>274. H-Index</li> <li>280. Wiggle Sort</li> <li>295. Find Median from Data Stream</li> <li>296. Best Meeting Point</li> <li>324. Wiggle Sort II</li> <li>347. Top K Frequent Elements</li> <li>349. Intersection of Two Arrays</li> <li>350. Intersection of Two Arrays II</li> <li>354. Russian Doll Envelopes</li> <li>358. Rearrange String k Distance Apart</li> <li>360. Sort Transformed Array</li> <li>368. Largest Divisible Subset</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>389. Find the Difference</li> <li>406. Queue Reconstruction by Height</li> <li>414. Third Maximum Number</li> <li>435. Non-overlapping Intervals</li> <li>436. Find Right Interval</li> <li>451. Sort Characters By Frequency</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>455. Assign Cookies</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>475. Heaters</li> <li>49. Group Anagrams</li> <li>502. IPO</li> <li>506. Relative Ranks</li> <li>522. Longest Uncommon Subsequence II</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>527. Word Abbreviation</li> <li>532. K-diff Pairs in an Array</li> <li>539. Minimum Time Difference</li> <li>56. Merge Intervals</li> <li>561. Array Partition</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>594. Longest Harmonious Subsequence</li> <li>611. Valid Triangle Number</li> <li>621. Task Scheduler</li> <li>628. Maximum Product of Three Numbers</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>645. Set Mismatch</li> <li>646. Maximum Length of Pair Chain</li> <li>658. Find K Closest Elements</li> <li>692. Top K Frequent Words</li> <li>710. Random Pick with Blacklist</li> <li>719. Find K-th Smallest Pair Distance</li> <li>720. Longest Word in Dictionary</li> <li>726. Number of Atoms</li> <li>747. Largest Number At Least Twice of Others</li> <li>75. Sort Colors</li> <li>757. Set Intersection Size At Least Two</li> <li>759. Employee Free Time</li> <li>767. Reorganize String</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>786. K-th Smallest Prime Fraction</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>833. Find And Replace in String</li> <li>846. Hand of Straights</li> <li>853. Car Fleet</li> <li>857. Minimum Cost to Hire K Workers</li> <li>869. Reordered Power of 2</li> <li>870. Advantage Shuffle</li> <li>88. Merge Sorted Array</li> <li>881. Boats to Save People</li> <li>888. Fair Candy Swap</li> <li>891. Sum of Subsequence Widths</li> <li>899. Orderly Queue</li> <li>905. Sort Array By Parity</li> <li>910. Smallest Range II</li> <li>912. Sort an Array</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>937. Reorder Data in Log Files</li> <li>939. Minimum Area Rectangle</li> <li>945. Minimum Increment to Make Array Unique</li> <li>948. Bag of Tokens</li> <li>950. Reveal Cards In Increasing Order</li> <li>954. Array of Doubled Pairs</li> <li>969. Pancake Sorting</li> <li>973. K Closest Points to Origin</li> <li>976. Largest Perimeter Triangle</li> <li>977. Squares of a Sorted Array</li> </ul>"},{"location":"tags/#stack","title":"Stack","text":"<ul> <li>1003. Check If Word Is Valid After Substitutions</li> <li>1006. Clumsy Factorial</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1019. Next Greater Node In Linked List</li> <li>1021. Remove Outermost Parentheses</li> <li>1047. Remove All Adjacent Duplicates In String</li> <li>1063. Number of Valid Subarrays</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1096. Brace Expansion II</li> <li>1106. Parsing A Boolean Expression</li> <li>1111. Maximum Nesting Depth of Two Valid Parentheses Strings</li> <li>1124. Longest Well-Performing Interval</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1172. Dinner Plate Stacks</li> <li>1190. Reverse Substrings Between Each Pair of Parentheses</li> <li>1209. Remove All Adjacent Duplicates in String II</li> <li>1214. Two Sum BSTs</li> <li>1249. Minimum Remove to Make Valid Parentheses</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1381. Design a Stack With Increment Operation</li> <li>143. Reorder List</li> <li>144. Binary Tree Preorder Traversal</li> <li>1441. Build an Array With Stack Operations</li> <li>145. Binary Tree Postorder Traversal</li> <li>1472. Design Browser History</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1504. Count Submatrices With All Ones</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1544. Make The String Great</li> <li>155. Min Stack</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1586. Binary Search Tree Iterator II</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1598. Crawler Log Folder</li> <li>1614. Maximum Nesting Depth of the Parentheses</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1717. Maximum Score From Removing Substrings</li> <li>173. Binary Search Tree Iterator</li> <li>1756. Design Most Recently Used Queue</li> <li>1762. Buildings With an Ocean View</li> <li>1776. Car Fleet II</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1856. Maximum Subarray Min-Product</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1944. Number of Visible People in a Queue</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>1996. The Number of Weak Characters in the Game</li> <li>20. Valid Parentheses</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2104. Sum of Subarray Ranges</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2211. Count Collisions on a Road</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>224. Basic Calculator</li> <li>225. Implement Stack using Queues</li> <li>2254. Design Video Sharing Platform</li> <li>227. Basic Calculator II</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>2296. Design a Text Editor</li> <li>2297. Jump Game VIII</li> <li>232. Implement Queue using Stacks</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>234. Palindrome Linked List</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2375. Construct Smallest Number From DI String</li> <li>2390. Removing Stars From a String</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2454. Next Greater Element IV</li> <li>2487. Remove Nodes From Linked List</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>272. Closest Binary Search Tree Value II</li> <li>316. Remove Duplicate Letters</li> <li>32. Longest Valid Parentheses</li> <li>321. Create Maximum Number</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>341. Flatten Nested List Iterator</li> <li>364. Nested List Weight Sum II</li> <li>385. Mini Parser</li> <li>388. Longest Absolute File Path</li> <li>394. Decode String</li> <li>402. Remove K Digits</li> <li>42. Trapping Rain Water</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>439. Ternary Expression Parser</li> <li>445. Add Two Numbers II</li> <li>456. 132 Pattern</li> <li>484. Find Permutation</li> <li>496. Next Greater Element I</li> <li>503. Next Greater Element II</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>589. N-ary Tree Preorder Traversal</li> <li>590. N-ary Tree Postorder Traversal</li> <li>591. Tag Validator</li> <li>636. Exclusive Time of Functions</li> <li>654. Maximum Binary Tree</li> <li>678. Valid Parenthesis String</li> <li>682. Baseball Game</li> <li>71. Simplify Path</li> <li>716. Max Stack</li> <li>726. Number of Atoms</li> <li>735. Asteroid Collision</li> <li>736. Parse Lisp Expression</li> <li>739. Daily Temperatures</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>770. Basic Calculator IV</li> <li>772. Basic Calculator III</li> <li>84. Largest Rectangle in Histogram</li> <li>844. Backspace String Compare</li> <li>85. Maximal Rectangle</li> <li>853. Car Fleet</li> <li>856. Score of Parentheses</li> <li>880. Decoded String at Index</li> <li>895. Maximum Frequency Stack</li> <li>897. Increasing Order Search Tree</li> <li>901. Online Stock Span</li> <li>907. Sum of Subarray Minimums</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>936. Stamping The Sequence</li> <li>94. Binary Tree Inorder Traversal</li> <li>946. Validate Stack Sequences</li> <li>962. Maximum Width Ramp</li> <li>975. Odd Even Jump</li> </ul>"},{"location":"tags/#string","title":"String","text":"<ul> <li>10. Regular Expression Matching</li> <li>1002. Find Common Characters</li> <li>1003. Check If Word Is Valid After Substitutions</li> <li>1016. Binary String With Substrings Representing 1 To N</li> <li>1021. Remove Outermost Parentheses</li> <li>1023. Camelcase Matching</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>1032. Stream of Characters</li> <li>1041. Robot Bounded In Circle</li> <li>1044. Longest Duplicate Substring</li> <li>1047. Remove All Adjacent Duplicates In String</li> <li>1048. Longest String Chain</li> <li>1055. Shortest Way to Form String</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1061. Lexicographically Smallest Equivalent String</li> <li>1062. Longest Repeating Substring</li> <li>1065. Index Pairs of a String</li> <li>1071. Greatest Common Divisor of Strings</li> <li>1078. Occurrences After Bigram</li> <li>1079. Letter Tile Possibilities</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1087. Brace Expansion</li> <li>1092. Shortest Common Supersequence</li> <li>1096. Brace Expansion II</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1106. Parsing A Boolean Expression</li> <li>1108. Defanging an IP Address</li> <li>1111. Maximum Nesting Depth of Two Valid Parentheses Strings</li> <li>1119. Remove Vowels from a String</li> <li>1138. Alphabet Board Path</li> <li>1143. Longest Common Subsequence</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>115. Distinct Subsequences</li> <li>1153. String Transforms Into Another String</li> <li>1154. Day of the Year</li> <li>1156. Swap For Longest Repeated Character Substring</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1163. Last Substring in Lexicographical Order</li> <li>1165. Single-Row Keyboard</li> <li>1166. Design File System</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1180. Count Substrings with Only One Distinct Letter</li> <li>1181. Before and After Puzzle</li> <li>1189. Maximum Number of Balloons</li> <li>1190. Reverse Substrings Between Each Pair of Parentheses</li> <li>12. Integer to Roman</li> <li>1202. Smallest String With Swaps</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1209. Remove All Adjacent Duplicates in String II</li> <li>1216. Valid Palindrome III</li> <li>1221. Split a String in Balanced Strings</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1234. Replace the Substring for Balanced String</li> <li>1236. Web Crawler</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1249. Minimum Remove to Make Valid Parentheses</li> <li>125. Valid Palindrome</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1256. Encode Number</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>126. Word Ladder II</li> <li>1268. Search Suggestions System</li> <li>127. Word Ladder</li> <li>1271. Hexspeak</li> <li>1278. Palindrome Partitioning III</li> <li>1286. Iterator for Combination</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>13. Roman to Integer</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1309. Decrypt String from Alphabet to Integer Mapping</li> <li>131. Palindrome Partitioning</li> <li>1312. Minimum Insertion Steps to Make a String Palindrome</li> <li>1316. Distinct Echo Substrings</li> <li>132. Palindrome Partitioning II</li> <li>1320. Minimum Distance to Type a Word Using Two Fingers</li> <li>1324. Print Words Vertically</li> <li>1328. Break a Palindrome</li> <li>1332. Remove Palindromic Subsequences</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1360. Number of Days Between Two Dates</li> <li>1366. Rank Teams by Votes</li> <li>1370. Increasing Decreasing String</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1374. Generate a String With Characters That Have Odd Counts</li> <li>139. Word Break</li> <li>1392. Longest Happy Prefix</li> <li>1396. Design Underground System</li> <li>1397. Find All Good Strings</li> <li>14. Longest Common Prefix</li> <li>140. Word Break II</li> <li>1400. Construct K Palindrome Strings</li> <li>1404. Number of Steps to Reduce a Number in Binary Representation to One</li> <li>1405. Longest Happy String</li> <li>1408. String Matching in an Array</li> <li>1410. HTML Entity Parser</li> <li>1415. The k-th Lexicographical String of All Happy Strings of Length n</li> <li>1416. Restore The Array</li> <li>1417. Reformat The String</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1419. Minimum Number of Frogs Croaking</li> <li>1422. Maximum Score After Splitting a String</li> <li>1427. Perform String Shifts</li> <li>1433. Check If a String Can Break Another String</li> <li>1436. Destination City</li> <li>1446. Consecutive Characters</li> <li>1447. Simplified Fractions</li> <li>1451. Rearrange Words in a Sentence</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence</li> <li>1456. Maximum Number of Vowels in a Substring of Given Length</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1487. Making File Names Unique</li> <li>1496. Path Crossing</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1507. Reformat Date</li> <li>151. Reverse Words in a String</li> <li>1513. Number of Substrings With Only 1s</li> <li>1520. Maximum Number of Non-Overlapping Substrings</li> <li>1525. Number of Good Ways to Split a String</li> <li>1528. Shuffle String</li> <li>1529. Minimum Suffix Flips</li> <li>1531. String Compression II</li> <li>1540. Can Convert String in K Moves</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1542. Find Longest Awesome Substring</li> <li>1544. Make The String Great</li> <li>1545. Find Kth Bit in Nth Binary String</li> <li>1554. Strings Differ by One Character</li> <li>1556. Thousand Separator</li> <li>157. Read N Characters Given Read4</li> <li>1573. Number of Ways to Split a String</li> <li>1576. Replace All ?'s to Avoid Consecutive Repeating Characters</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1592. Rearrange Spaces Between Words</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1598. Crawler Log Folder</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>161. One Edit Distance</li> <li>1614. Maximum Nesting Depth of the Parentheses</li> <li>1616. Split Two Strings to Make Palindrome</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1624. Largest Substring Between Two Equal Characters</li> <li>1625. Lexicographically Smallest String After Applying Operations</li> <li>1629. Slowest Key</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>165. Compare Version Numbers</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1657. Determine if Two Strings Are Close</li> <li>166. Fraction to Recurring Decimal</li> <li>1662. Check If Two String Arrays are Equivalent</li> <li>1663. Smallest String With A Given Numeric Value</li> <li>1668. Maximum Repeating Substring</li> <li>1678. Goal Parser Interpretation</li> <li>168. Excel Sheet Column Title</li> <li>1682. Longest Palindromic Subsequence II</li> <li>1684. Count the Number of Consistent Strings</li> <li>1689. Partitioning Into Minimum Number Of Deci-Binary Numbers</li> <li>1694. Reformat Phone Number</li> <li>1698. Number of Distinct Substrings in a String</li> <li>17. Letter Combinations of a Phone Number</li> <li>1702. Maximum Binary String After Change</li> <li>1704. Determine if String Halves Are Alike</li> <li>171. Excel Sheet Column Number</li> <li>1717. Maximum Score From Removing Substrings</li> <li>1736. Latest Time by Replacing Hidden Digits</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1745. Palindrome Partitioning IV</li> <li>1750. Minimum Length of String After Deleting Similar Ends</li> <li>1754. Largest Merge Of Two Strings</li> <li>1758. Minimum Changes To Make Alternating Binary String</li> <li>1759. Count Number of Homogenous Substrings</li> <li>1763. Longest Nice Substring</li> <li>1768. Merge Strings Alternately</li> <li>1769. Minimum Number of Operations to Move All Balls to Each Box</li> <li>1771. Maximize Palindrome Length From Subsequences</li> <li>1772. Sort Features by Popularity</li> <li>1773. Count Items Matching a Rule</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1784. Check if Binary String Has at Most One Segment of Ones</li> <li>179. Largest Number</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1796. Second Largest Digit in a String</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1805. Number of Different Integers in a String</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1812. Determine Color of a Chessboard Square</li> <li>1813. Sentence Similarity III</li> <li>1816. Truncate Sentence</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1832. Check if the Sentence Is Pangram</li> <li>1839. Longest Substring Of All Vowels in Order</li> <li>1842. Next Palindrome Using Same Digits</li> <li>1844. Replace All Digits with Characters</li> <li>1849. Splitting a String Into Descending Consecutive Values</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1859. Sorting the Sentence</li> <li>186. Reverse Words in a String II</li> <li>1864. Minimum Number of Swaps to Make the Binary String Alternating</li> <li>1869. Longer Contiguous Segments of Ones than Zeros</li> <li>187. Repeated DNA Sequences</li> <li>1871. Jump Game VII</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1880. Check if Word Equals Summation of Two Words</li> <li>1881. Maximum Value after Insertion</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1898. Maximum Number of Removable Characters</li> <li>1903. Largest Odd Number in String</li> <li>1904. The Number of Full Rounds You Have Played</li> <li>1910. Remove All Occurrences of a Substring</li> <li>1915. Number of Wonderful Substrings</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1933. Check if String Is Decomposable Into Value-Equal Substrings</li> <li>1935. Maximum Number of Words You Can Type</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>1945. Sum of Digits of String After Convert</li> <li>1946. Largest Number After Mutating Substring</li> <li>1948. Delete Duplicate Folders in System</li> <li>1957. Delete Characters to Make Fancy String</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>1961. Check If String Is a Prefix of Array</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>1967. Number of Strings That Appear as Substrings in Word</li> <li>1974. Minimum Time to Type Word Using Special Typewriter</li> <li>1977. Number of Ways to Separate Numbers</li> <li>1980. Find Unique Binary String</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1987. Number of Unique Good Subsequences</li> <li>20. Valid Parentheses</li> <li>2000. Reverse Prefix of Word</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2023. Number of Pairs of Strings With Concatenation Equal to Target</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2027. Minimum Moves to Convert String</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>2042. Check if Numbers Are Ascending in a Sentence</li> <li>2047. Number of Valid Words in a Sentence</li> <li>205. Isomorphic Strings</li> <li>2053. Kth Distinct String in an Array</li> <li>2055. Plates Between Candles</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2060. Check if an Original String Exists Given Two Encoded Strings</li> <li>2062. Count Vowel Substrings of a String</li> <li>2063. Vowels of All Substrings</li> <li>2067. Number of Equal Count Substrings</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>2075. Decode the Slanted Ciphertext</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2085. Count Common Words With One Occurrence</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2103. Rings and Rods</li> <li>2108. Find First Palindromic String in the Array</li> <li>2109. Adding Spaces to a String</li> <li>211. Design Add and Search Words Data Structure</li> <li>2114. Maximum Number of Words Found in Sentences</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>212. Word Search II</li> <li>2120. Execution of All Suffix Instructions Staying in a Grid</li> <li>2124. Check if All A's Appears Before All B's</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2129. Capitalize the Title</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2138. Divide a String Into Groups of Size k</li> <li>214. Shortest Palindrome</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2156. Find Substring With Given Hash Value</li> <li>2157. Groups of Strings</li> <li>2167. Minimum Time to Remove All Cars Containing Illegal Goods</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2182. Construct String With Repeat Limit</li> <li>2185. Counting Words With a Given Prefix</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2194. Cells in a Range on an Excel Sheet</li> <li>22. Generate Parentheses</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>2211. Count Collisions on a Road</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2222. Number of Ways to Select Buildings</li> <li>2223. Sum of Scores of Built Strings</li> <li>2224. Minimum Number of Operations to Convert Time</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2232. Minimize Result by Adding Parentheses to Expression</li> <li>224. Basic Calculator</li> <li>2243. Calculate Digit Sum of a String</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2255. Count Prefixes of a Given String</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>2262. Total Appeal of A String</li> <li>2264. Largest 3-Same-Digit Number in String</li> <li>2266. Count Number of Texts</li> <li>2268. Minimum Number of Keypresses</li> <li>2269. Find the K-Beauty of a Number</li> <li>227. Basic Calculator II</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2278. Percentage of Letter in String</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2287. Rearrange Characters to Make Target String</li> <li>2288. Apply Discount to Prices</li> <li>2296. Design a Text Editor</li> <li>2299. Strong Password Checker II</li> <li>2301. Match Substring After Replacement</li> <li>2306. Naming a Company</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2315. Count Asterisks</li> <li>2325. Decode the Message</li> <li>2330. Valid Palindrome IV</li> <li>2337. Move Pieces to Obtain a String</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2351. First Letter to Appear Twice</li> <li>2370. Longest Ideal Subsequence</li> <li>2375. Construct Smallest Number From DI String</li> <li>2379. Minimum Recolors to Get K Consecutive Black Blocks</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2381. Shifting Letters II</li> <li>2384. Largest Palindromic Number</li> <li>2390. Removing Stars From a String</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2399. Check Distances Between Same Letters</li> <li>2405. Optimal Partition of String</li> <li>2408. Design SQL</li> <li>2409. Count Days Spent Together</li> <li>241. Different Ways to Add Parentheses</li> <li>2414. Length of the Longest Alphabetical Continuous Substring</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2418. Sort the People</li> <li>242. Valid Anagram</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>243. Shortest Word Distance</li> <li>2430. Maximum Deletions on a String</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2437. Number of Valid Clock Times</li> <li>244. Shortest Word Distance II</li> <li>2446. Determine if Two Events Have Conflict</li> <li>245. Shortest Word Distance III</li> <li>2450. Number of Distinct Binary Strings After Applying Operations</li> <li>2451. Odd String Difference</li> <li>2452. Words Within Two Edits of Dictionary</li> <li>2456. Most Popular Video Creator</li> <li>246. Strobogrammatic Number</li> <li>2468. Split Message Based on Limit</li> <li>247. Strobogrammatic Number II</li> <li>2472. Maximum Number of Non-overlapping Palindrome Substrings</li> <li>2478. Number of Beautiful Partitions</li> <li>248. Strobogrammatic Number III</li> <li>2483. Minimum Penalty for a Shop</li> <li>2484. Count Palindromic Subsequences</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>249. Group Shifted Strings</li> <li>2490. Circular Sentence</li> <li>2496. Maximum Value of a String in an Array</li> <li>2506. Count Pairs Of Similar Strings</li> <li>2512. Reward Top K Students</li> <li>2514. Count Anagrams</li> <li>2515. Shortest Distance to Target String in a Circular Array</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2539. Count the Number of Good Subsequences</li> <li>2546. Apply Bitwise Operations to Make Strings Equal</li> <li>2559. Count Vowel Strings in Ranges</li> <li>2564. Substring XOR Queries</li> <li>2565. Subsequence With the Minimum Score</li> <li>257. Binary Tree Paths</li> <li>2575. Find the Divisibility Array of a String</li> <li>266. Palindrome Permutation</li> <li>267. Palindrome Permutation II</li> <li>269. Alien Dictionary</li> <li>271. Encode and Decode Strings</li> <li>273. Integer to English Words</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>282. Expression Add Operators</li> <li>288. Unique Word Abbreviation</li> <li>290. Word Pattern</li> <li>291. Word Pattern II</li> <li>293. Flip Game</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>299. Bulls and Cows</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>301. Remove Invalid Parentheses</li> <li>306. Additive Number</li> <li>316. Remove Duplicate Letters</li> <li>318. Maximum Product of Word Lengths</li> <li>32. Longest Valid Parentheses</li> <li>320. Generalized Abbreviation</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>336. Palindrome Pairs</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>344. Reverse String</li> <li>345. Reverse Vowels of a String</li> <li>358. Rearrange String k Distance Apart</li> <li>38. Count and Say</li> <li>383. Ransom Note</li> <li>385. Mini Parser</li> <li>387. First Unique Character in a String</li> <li>388. Longest Absolute File Path</li> <li>389. Find the Difference</li> <li>392. Is Subsequence</li> <li>394. Decode String</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>402. Remove K Digits</li> <li>408. Valid Word Abbreviation</li> <li>409. Longest Palindrome</li> <li>411. Minimum Unique Word Abbreviation</li> <li>412. Fizz Buzz</li> <li>415. Add Strings</li> <li>418. Sentence Screen Fitting</li> <li>420. Strong Password Checker</li> <li>423. Reconstruct Original Digits from English</li> <li>424. Longest Repeating Character Replacement</li> <li>425. Word Squares</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>43. Multiply Strings</li> <li>433. Minimum Genetic Mutation</li> <li>434. Number of Segments in a String</li> <li>438. Find All Anagrams in a String</li> <li>439. Ternary Expression Parser</li> <li>44. Wildcard Matching</li> <li>443. String Compression</li> <li>449. Serialize and Deserialize BST</li> <li>451. Sort Characters By Frequency</li> <li>459. Repeated Substring Pattern</li> <li>466. Count The Repetitions</li> <li>467. Unique Substrings in Wraparound String</li> <li>468. Validate IP Address</li> <li>471. Encode String with Shortest Length</li> <li>472. Concatenated Words</li> <li>474. Ones and Zeroes</li> <li>481. Magical String</li> <li>482. License Key Formatting</li> <li>484. Find Permutation</li> <li>488. Zuma Game</li> <li>49. Group Anagrams</li> <li>5. Longest Palindromic Substring</li> <li>500. Keyboard Row</li> <li>514. Freedom Trail</li> <li>516. Longest Palindromic Subsequence</li> <li>520. Detect Capital</li> <li>521. Longest Uncommon Subsequence I</li> <li>522. Longest Uncommon Subsequence II</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>527. Word Abbreviation</li> <li>535. Encode and Decode TinyURL</li> <li>536. Construct Binary Tree from String</li> <li>537. Complex Number Multiplication</li> <li>539. Minimum Time Difference</li> <li>541. Reverse String II</li> <li>544. Output Contest Matches</li> <li>551. Student Attendance Record I</li> <li>555. Split Concatenated Strings</li> <li>556. Next Greater Element III</li> <li>557. Reverse Words in a String III</li> <li>564. Find the Closest Palindrome</li> <li>567. Permutation in String</li> <li>58. Length of Last Word</li> <li>583. Delete Operation for Two Strings</li> <li>588. Design In-Memory File System</li> <li>591. Tag Validator</li> <li>592. Fraction Addition and Subtraction</li> <li>599. Minimum Index Sum of Two Lists</li> <li>6. Zigzag Conversion</li> <li>604. Design Compressed String Iterator</li> <li>606. Construct String from Binary Tree</li> <li>609. Find Duplicate File in System</li> <li>616. Add Bold Tag in String</li> <li>635. Design Log Storage System</li> <li>639. Decode Ways II</li> <li>640. Solve the Equation</li> <li>642. Design Search Autocomplete System</li> <li>647. Palindromic Substrings</li> <li>648. Replace Words</li> <li>649. Dota2 Senate</li> <li>65. Valid Number</li> <li>657. Robot Return to Origin</li> <li>664. Strange Printer</li> <li>67. Add Binary</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>678. Valid Parenthesis String</li> <li>68. Text Justification</li> <li>680. Valid Palindrome II</li> <li>681. Next Closest Time</li> <li>686. Repeated String Match</li> <li>691. Stickers to Spell Word</li> <li>692. Top K Frequent Words</li> <li>696. Count Binary Substrings</li> <li>709. To Lower Case</li> <li>71. Simplify Path</li> <li>712. Minimum ASCII Delete Sum for Two Strings</li> <li>72. Edit Distance</li> <li>720. Longest Word in Dictionary</li> <li>721. Accounts Merge</li> <li>722. Remove Comments</li> <li>726. Number of Atoms</li> <li>727. Minimum Window Subsequence</li> <li>730. Count Different Palindromic Subsequences</li> <li>734. Sentence Similarity</li> <li>736. Parse Lisp Expression</li> <li>737. Sentence Similarity II</li> <li>745. Prefix and Suffix Search</li> <li>748. Shortest Completing Word</li> <li>751. IP to CIDR</li> <li>752. Open the Lock</li> <li>758. Bold Words in String</li> <li>76. Minimum Window Substring</li> <li>761. Special Binary String</li> <li>763. Partition Labels</li> <li>767. Reorganize String</li> <li>770. Basic Calculator IV</li> <li>771. Jewels and Stones</li> <li>772. Basic Calculator III</li> <li>777. Swap Adjacent in LR String</li> <li>784. Letter Case Permutation</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>794. Valid Tic-Tac-Toe State</li> <li>796. Rotate String</li> <li>8. String to Integer (atoi)</li> <li>800. Similar RGB Color</li> <li>804. Unique Morse Code Words</li> <li>806. Number of Lines To Write String</li> <li>809. Expressive Words</li> <li>811. Subdomain Visit Count</li> <li>816. Ambiguous Coordinates</li> <li>819. Most Common Word</li> <li>820. Short Encoding of Words</li> <li>821. Shortest Distance to a Character</li> <li>824. Goat Latin</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>830. Positions of Large Groups</li> <li>831. Masking Personal Information</li> <li>833. Find And Replace in String</li> <li>838. Push Dominoes</li> <li>839. Similar String Groups</li> <li>842. Split Array into Fibonacci Sequence</li> <li>843. Guess the Word</li> <li>844. Backspace String Compare</li> <li>848. Shifting Letters</li> <li>854. K-Similar Strings</li> <li>856. Score of Parentheses</li> <li>859. Buddy Strings</li> <li>87. Scramble String</li> <li>880. Decoded String at Index</li> <li>884. Uncommon Words from Two Sentences</li> <li>890. Find and Replace Pattern</li> <li>893. Groups of Special-Equivalent Strings</li> <li>899. Orderly Queue</li> <li>902. Numbers At Most N Given Digit Set</li> <li>91. Decode Ways</li> <li>916. Word Subsets</li> <li>917. Reverse Only Letters</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>925. Long Pressed Name</li> <li>926. Flip String to Monotone Increasing</li> <li>929. Unique Email Addresses</li> <li>93. Restore IP Addresses</li> <li>936. Stamping The Sequence</li> <li>937. Reorder Data in Log Files</li> <li>940. Distinct Subsequences II</li> <li>942. DI String Match</li> <li>943. Find the Shortest Superstring</li> <li>944. Delete Columns to Make Sorted</li> <li>949. Largest Time for Given Digits</li> <li>953. Verifying an Alien Dictionary</li> <li>955. Delete Columns to Make Sorted II</li> <li>960. Delete Columns to Make Sorted III</li> <li>966. Vowel Spellchecker</li> <li>97. Interleaving String</li> <li>972. Equal Rational Numbers</li> <li>981. Time Based Key-Value Store</li> <li>984. String Without AAA or BBB</li> <li>988. Smallest String Starting From Leaf</li> <li>990. Satisfiability of Equality Equations</li> </ul>"},{"location":"tags/#string-matching","title":"String Matching","text":"<ul> <li>1023. Camelcase Matching</li> <li>1392. Longest Happy Prefix</li> <li>1397. Find All Good Strings</li> <li>1408. String Matching in an Array</li> <li>1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence</li> <li>1668. Maximum Repeating Substring</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>214. Shortest Palindrome</li> <li>2223. Sum of Scores of Built Strings</li> <li>2301. Match Substring After Replacement</li> <li>2430. Maximum Deletions on a String</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>459. Repeated Substring Pattern</li> <li>572. Subtree of Another Tree</li> <li>616. Add Bold Tag in String</li> <li>686. Repeated String Match</li> <li>758. Bold Words in String</li> <li>796. Rotate String</li> </ul>"},{"location":"tags/#strongly-connected-component","title":"Strongly Connected Component","text":"<ul> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1568. Minimum Number of Days to Disconnect Island</li> </ul>"},{"location":"tags/#suffix-array","title":"Suffix Array","text":"<ul> <li>1044. Longest Duplicate Substring</li> <li>1062. Longest Repeating Substring</li> <li>1698. Number of Distinct Substrings in a String</li> <li>1923. Longest Common Subpath</li> <li>1977. Number of Ways to Separate Numbers</li> <li>2223. Sum of Scores of Built Strings</li> </ul>"},{"location":"tags/#topological-sort","title":"Topological Sort","text":"<ul> <li>1136. Parallel Courses</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1245. Tree Diameter</li> <li>1462. Course Schedule IV</li> <li>1591. Strange Printer II</li> <li>1632. Rank Transform of a Matrix</li> <li>1728. Cat and Mouse II</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>2050. Parallel Courses III</li> <li>207. Course Schedule</li> <li>210. Course Schedule II</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2360. Longest Cycle in a Graph</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2392. Build a Matrix With Conditions</li> <li>269. Alien Dictionary</li> <li>310. Minimum Height Trees</li> <li>329. Longest Increasing Path in a Matrix</li> <li>444. Sequence Reconstruction</li> <li>631. Design Excel Sum Formula</li> <li>802. Find Eventual Safe States</li> <li>851. Loud and Rich</li> <li>913. Cat and Mouse</li> </ul>"},{"location":"tags/#tree","title":"Tree","text":"<ul> <li>100. Same Tree</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>101. Symmetric Tree</li> <li>102. Binary Tree Level Order Traversal</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>104. Maximum Depth of Binary Tree</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>107. Binary Tree Level Order Traversal II</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>110. Balanced Binary Tree</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>113. Path Sum II</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1145. Binary Tree Coloring Game</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1214. Two Sum BSTs</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1245. Tree Diameter</li> <li>1257. Smallest Common Region</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1273. Delete Tree Nodes</li> <li>129. Sum Root to Leaf Numbers</li> <li>1302. Deepest Leaves Sum</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1325. Delete Leaves With a Given Value</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>144. Binary Tree Preorder Traversal</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>145. Binary Tree Postorder Traversal</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1469. Find All The Lonely Nodes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1490. Clone N-ary Tree</li> <li>1506. Find Root of N-Ary Tree</li> <li>1516. Move Sub-Tree of N-Ary Tree</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1522. Diameter of N-Ary Tree</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>156. Binary Tree Upside Down</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1586. Binary Search Tree Iterator II</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1600. Throne Inheritance</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1609. Even Odd Tree</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1660. Correct a Binary Tree</li> <li>1666. Change the Root of a Binary Tree</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>1719. Number Of Ways To Reconstruct A Tree</li> <li>173. Binary Search Tree Iterator</li> <li>1740. Find Distance in a Binary Tree</li> <li>1766. Tree of Coprimes</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>199. Binary Tree Right Side View</li> <li>1993. Operations on Tree</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2049. Count Nodes With the Highest Score</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2196. Create Binary Tree From Descriptions</li> <li>222. Count Complete Tree Nodes</li> <li>2236. Root Equals Sum of Children</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>226. Invert Binary Tree</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>2277. Closest Node to Path in Tree</li> <li>230. Kth Smallest Element in a BST</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2421. Number of Good Paths</li> <li>2440. Create Components With Same Value</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2467. Most Profitable Path in a Tree</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>250. Count Univalue Subtrees</li> <li>2509. Cycle Length Queries in a Tree</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>257. Binary Tree Paths</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>341. Flatten Nested List Iterator</li> <li>366. Find Leaves of Binary Tree</li> <li>404. Sum of Left Leaves</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>427. Construct Quad Tree</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>429. N-ary Tree Level Order Traversal</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>437. Path Sum III</li> <li>449. Serialize and Deserialize BST</li> <li>450. Delete Node in a BST</li> <li>501. Find Mode in Binary Search Tree</li> <li>508. Most Frequent Subtree Sum</li> <li>510. Inorder Successor in BST II</li> <li>513. Find Bottom Left Tree Value</li> <li>515. Find Largest Value in Each Tree Row</li> <li>530. Minimum Absolute Difference in BST</li> <li>536. Construct Binary Tree from String</li> <li>538. Convert BST to Greater Tree</li> <li>543. Diameter of Binary Tree</li> <li>545. Boundary of Binary Tree</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>558. Logical OR of Two Binary Grids Represented as Quad-Trees</li> <li>559. Maximum Depth of N-ary Tree</li> <li>563. Binary Tree Tilt</li> <li>572. Subtree of Another Tree</li> <li>582. Kill Process</li> <li>589. N-ary Tree Preorder Traversal</li> <li>590. N-ary Tree Postorder Traversal</li> <li>606. Construct String from Binary Tree</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>654. Maximum Binary Tree</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>666. Path Sum IV</li> <li>669. Trim a Binary Search Tree</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>687. Longest Univalue Path</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>703. Kth Largest Element in a Stream</li> <li>742. Closest Leaf in a Binary Tree</li> <li>776. Split BST</li> <li>783. Minimum Distance Between BST Nodes</li> <li>814. Binary Tree Pruning</li> <li>834. Sum of Distances in Tree</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>872. Leaf-Similar Trees</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>894. All Possible Full Binary Trees</li> <li>897. Increasing Order Search Tree</li> <li>919. Complete Binary Tree Inserter</li> <li>938. Range Sum of BST</li> <li>94. Binary Tree Inorder Traversal</li> <li>95. Unique Binary Search Trees II</li> <li>951. Flip Equivalent Binary Trees</li> <li>958. Check Completeness of a Binary Tree</li> <li>96. Unique Binary Search Trees</li> <li>965. Univalued Binary Tree</li> <li>968. Binary Tree Cameras</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>99. Recover Binary Search Tree</li> <li>993. Cousins in Binary Tree</li> <li>998. Maximum Binary Tree II</li> </ul>"},{"location":"tags/#trie","title":"Trie","text":"<ul> <li>1023. Camelcase Matching</li> <li>1032. Stream of Characters</li> <li>1065. Index Pairs of a String</li> <li>1166. Design File System</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1268. Search Suggestions System</li> <li>1316. Distinct Echo Substrings</li> <li>139. Word Break</li> <li>14. Longest Common Prefix</li> <li>140. Word Break II</li> <li>1698. Number of Distinct Substrings in a String</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1858. Longest Word With All Prefixes</li> <li>1938. Maximum Genetic Difference Query</li> <li>1948. Delete Duplicate Folders in System</li> <li>208. Implement Trie (Prefix Tree)</li> <li>211. Design Add and Search Words Data Structure</li> <li>212. Word Search II</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2261. K Divisible Elements Subarrays</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>336. Palindrome Pairs</li> <li>386. Lexicographical Numbers</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>425. Word Squares</li> <li>440. K-th Smallest in Lexicographical Order</li> <li>472. Concatenated Words</li> <li>527. Word Abbreviation</li> <li>588. Design In-Memory File System</li> <li>616. Add Bold Tag in String</li> <li>642. Design Search Autocomplete System</li> <li>648. Replace Words</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>692. Top K Frequent Words</li> <li>720. Longest Word in Dictionary</li> <li>745. Prefix and Suffix Search</li> <li>758. Bold Words in String</li> <li>792. Number of Matching Subsequences</li> <li>820. Short Encoding of Words</li> </ul>"},{"location":"tags/#two-pointers","title":"Two Pointers","text":"<ul> <li>1023. Camelcase Matching</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1048. Longest String Chain</li> <li>1055. Shortest Way to Form String</li> <li>1089. Duplicate Zeros</li> <li>1099. Two Sum Less Than K</li> <li>11. Container With Most Water</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1163. Last Substring in Lexicographical Order</li> <li>1214. Two Sum BSTs</li> <li>1229. Meeting Scheduler</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>125. Valid Palindrome</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1332. Remove Palindromic Subsequences</li> <li>1346. Check If N and Its Double Exist</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>141. Linked List Cycle</li> <li>142. Linked List Cycle II</li> <li>143. Reorder List</li> <li>1471. The k Strongest Values in an Array</li> <li>148. Sort List</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>15. 3Sum</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>151. Reverse Words in a String</li> <li>1537. Get the Maximum Score</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>16. 3Sum Closest</li> <li>160. Intersection of Two Linked Lists</li> <li>161. One Edit Distance</li> <li>1616. Split Two Strings to Make Palindrome</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>165. Compare Version Numbers</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1679. Max Number of K-Sum Pairs</li> <li>170. Two Sum III - Data structure design</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1721. Swapping Nodes in a Linked List</li> <li>1750. Minimum Length of String After Deleting Similar Ends</li> <li>1754. Largest Merge Of Two Strings</li> <li>1755. Closest Subsequence Sum</li> <li>1768. Merge Strings Alternately</li> <li>1782. Count Pairs Of Nodes</li> <li>1793. Maximum Score of a Good Subarray</li> <li>18. 4Sum</li> <li>1813. Sentence Similarity III</li> <li>1826. Faulty Sensor</li> <li>1842. Next Palindrome Using Same Digits</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>186. Reverse Words in a String II</li> <li>1861. Rotating the Box</li> <li>1868. Product of Two Run-Length Encoded Arrays</li> <li>1871. Jump Game VII</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>189. Rotate Array</li> <li>19. Remove Nth Node From End of List</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>2000. Reverse Prefix of Word</li> <li>202. Happy Number</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2095. Delete the Middle Node of a Linked List</li> <li>2105. Watering Plants II</li> <li>2108. Find First Palindromic String in the Array</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2149. Rearrange Array Elements by Sign</li> <li>2161. Partition Array According to Given Pivot</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2330. Valid Palindrome IV</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2337. Move Pieces to Obtain a String</li> <li>234. Palindrome Linked List</li> <li>2367. Number of Arithmetic Triplets</li> <li>2396. Strictly Palindromic Number</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>244. Shortest Word Distance II</li> <li>246. Strobogrammatic Number</li> <li>2462. Total Cost to Hire K Workers</li> <li>2465. Number of Distinct Averages</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>251. Flatten 2D Vector</li> <li>2511. Maximum Enemy Forts That Can Be Captured</li> <li>253. Meeting Rooms II</li> <li>2540. Minimum Common Value</li> <li>2562. Find the Array Concatenation Value</li> <li>2563. Count the Number of Fair Pairs</li> <li>2565. Subsequence With the Minimum Score</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>259. 3Sum Smaller</li> <li>26. Remove Duplicates from Sorted Array</li> <li>27. Remove Element</li> <li>272. Closest Binary Search Tree Value II</li> <li>277. Find the Celebrity</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>283. Move Zeroes</li> <li>287. Find the Duplicate Number</li> <li>295. Find Median from Data Stream</li> <li>31. Next Permutation</li> <li>344. Reverse String</li> <li>345. Reverse Vowels of a String</li> <li>349. Intersection of Two Arrays</li> <li>350. Intersection of Two Arrays II</li> <li>360. Sort Transformed Array</li> <li>392. Is Subsequence</li> <li>408. Valid Word Abbreviation</li> <li>42. Trapping Rain Water</li> <li>443. String Compression</li> <li>455. Assign Cookies</li> <li>457. Circular Array Loop</li> <li>475. Heaters</li> <li>481. Magical String</li> <li>522. Longest Uncommon Subsequence II</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>532. K-diff Pairs in an Array</li> <li>541. Reverse String II</li> <li>556. Next Greater Element III</li> <li>557. Reverse Words in a String III</li> <li>567. Permutation in String</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>61. Rotate List</li> <li>611. Valid Triangle Number</li> <li>633. Sum of Square Numbers</li> <li>653. Two Sum IV - Input is a BST</li> <li>658. Find K Closest Elements</li> <li>680. Valid Palindrome II</li> <li>696. Count Binary Substrings</li> <li>719. Find K-th Smallest Pair Distance</li> <li>723. Candy Crush</li> <li>75. Sort Colors</li> <li>763. Partition Labels</li> <li>777. Swap Adjacent in LR String</li> <li>795. Number of Subarrays with Bounded Maximum</li> <li>80. Remove Duplicates from Sorted Array II</li> <li>809. Expressive Words</li> <li>82. Remove Duplicates from Sorted List II</li> <li>821. Shortest Distance to a Character</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>832. Flipping an Image</li> <li>838. Push Dominoes</li> <li>844. Backspace String Compare</li> <li>845. Longest Mountain in Array</li> <li>86. Partition List</li> <li>870. Advantage Shuffle</li> <li>876. Middle of the Linked List</li> <li>88. Merge Sorted Array</li> <li>881. Boats to Save People</li> <li>905. Sort Array By Parity</li> <li>917. Reverse Only Letters</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>925. Long Pressed Name</li> <li>942. DI String Match</li> <li>948. Bag of Tokens</li> <li>969. Pancake Sorting</li> <li>977. Squares of a Sorted Array</li> <li>986. Interval List Intersections</li> </ul>"},{"location":"tags/#union-find","title":"Union Find","text":"<ul> <li>1020. Number of Enclaves</li> <li>1061. Lexicographically Smallest Equivalent String</li> <li>1101. The Earliest Moment When Everyone Become Friends</li> <li>1102. Path With Maximum Minimum Value</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1202. Smallest String With Swaps</li> <li>1254. Number of Closed Islands</li> <li>1258. Synonymous Sentences</li> <li>1267. Count Servers that Communicate</li> <li>128. Longest Consecutive Sequence</li> <li>130. Surrounded Regions</li> <li>1319. Number of Operations to Make Network Connected</li> <li>1361. Validate Binary Tree Nodes</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1579. Remove Max Number of Edges to Keep Graph Fully Traversable</li> <li>1584. Min Cost to Connect All Points</li> <li>1627. Graph Connectivity With Threshold</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> <li>1905. Count Sub Islands</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>1998. GCD Sort of an Array</li> <li>200. Number of Islands</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2076. Process Restricted Friend Requests</li> <li>2092. Find All People With Secret</li> <li>2157. Groups of Strings</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2307. Check for Contradictions in Equations</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2421. Number of Good Paths</li> <li>2424. Longest Uploaded Prefix</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>261. Graph Valid Tree</li> <li>305. Number of Islands II</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>399. Evaluate Division</li> <li>547. Number of Provinces</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>711. Number of Distinct Islands II</li> <li>721. Accounts Merge</li> <li>737. Sentence Similarity II</li> <li>765. Couples Holding Hands</li> <li>778. Swim in Rising Water</li> <li>785. Is Graph Bipartite?</li> <li>803. Bricks Falling When Hit</li> <li>827. Making A Large Island</li> <li>839. Similar String Groups</li> <li>886. Possible Bipartition</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>952. Largest Component Size by Common Factor</li> <li>959. Regions Cut By Slashes</li> <li>990. Satisfiability of Equality Equations</li> </ul>"},{"location":"tags/#unsolved","title":"Unsolved","text":"<ul> <li>1. Two Sum</li> <li>10. Regular Expression Matching</li> <li>100. Same Tree</li> <li>1000. Minimum Cost to Merge Stones</li> <li>1001. Grid Illumination</li> <li>1002. Find Common Characters</li> <li>1003. Check If Word Is Valid After Substitutions</li> <li>1004. Max Consecutive Ones III</li> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1006. Clumsy Factorial</li> <li>1007. Minimum Domino Rotations For Equal Row</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1009. Complement of Base 10 Integer</li> <li>101. Symmetric Tree</li> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1011. Capacity To Ship Packages Within D Days</li> <li>1012. Numbers With Repeated Digits</li> <li>1013. Partition Array Into Three Parts With Equal Sum</li> <li>1014. Best Sightseeing Pair</li> <li>1015. Smallest Integer Divisible by K</li> <li>1016. Binary String With Substrings Representing 1 To N</li> <li>1017. Convert to Base -2</li> <li>1018. Binary Prefix Divisible By 5</li> <li>1019. Next Greater Node In Linked List</li> <li>102. Binary Tree Level Order Traversal</li> <li>1020. Number of Enclaves</li> <li>1021. Remove Outermost Parentheses</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1023. Camelcase Matching</li> <li>1024. Video Stitching</li> <li>1025. Divisor Game</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>1029. Two City Scheduling</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1030. Matrix Cells in Distance Order</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1032. Stream of Characters</li> <li>1033. Moving Stones Until Consecutive</li> <li>1034. Coloring A Border</li> <li>1035. Uncrossed Lines</li> <li>1036. Escape a Large Maze</li> <li>1037. Valid Boomerang</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>1039. Minimum Score Triangulation of Polygon</li> <li>104. Maximum Depth of Binary Tree</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1041. Robot Bounded In Circle</li> <li>1042. Flower Planting With No Adjacent</li> <li>1043. Partition Array for Maximum Sum</li> <li>1044. Longest Duplicate Substring</li> <li>1045. Customers Who Bought All Products</li> <li>1046. Last Stone Weight</li> <li>1047. Remove All Adjacent Duplicates In String</li> <li>1048. Longest String Chain</li> <li>1049. Last Stone Weight II</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>1050. Actors and Directors Who Cooperated At Least Three Times</li> <li>1051. Height Checker</li> <li>1052. Grumpy Bookstore Owner</li> <li>1053. Previous Permutation With One Swap</li> <li>1054. Distant Barcodes</li> <li>1055. Shortest Way to Form String</li> <li>1056. Confusing Number</li> <li>1057. Campus Bikes</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1059. All Paths from Source Lead to Destination</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>1060. Missing Element in Sorted Array</li> <li>1061. Lexicographically Smallest Equivalent String</li> <li>1062. Longest Repeating Substring</li> <li>1063. Number of Valid Subarrays</li> <li>1064. Fixed Point</li> <li>1065. Index Pairs of a String</li> <li>1066. Campus Bikes II</li> <li>1067. Digit Count in Range</li> <li>1068. Product Sales Analysis I</li> <li>1069. Product Sales Analysis II</li> <li>107. Binary Tree Level Order Traversal II</li> <li>1070. Product Sales Analysis III</li> <li>1071. Greatest Common Divisor of Strings</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1073. Adding Two Negabinary Numbers</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1075. Project Employees I</li> <li>1076. Project Employees II</li> <li>1077. Project Employees III</li> <li>1078. Occurrences After Bigram</li> <li>1079. Letter Tile Possibilities</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1082. Sales Analysis I</li> <li>1083. Sales Analysis II</li> <li>1084. Sales Analysis III</li> <li>1085. Sum of Digits in the Minimum Number</li> <li>1086. High Five</li> <li>1087. Brace Expansion</li> <li>1088. Confusing Number II</li> <li>1089. Duplicate Zeros</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>1090. Largest Values From Labels</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1092. Shortest Common Supersequence</li> <li>1093. Statistics from a Large Sample</li> <li>1094. Car Pooling</li> <li>1095. Find in Mountain Array</li> <li>1096. Brace Expansion II</li> <li>1097. Game Play Analysis V</li> <li>1098. Unpopular Books</li> <li>1099. Two Sum Less Than K</li> <li>11. Container With Most Water</li> <li>110. Balanced Binary Tree</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1101. The Earliest Moment When Everyone Become Friends</li> <li>1102. Path With Maximum Minimum Value</li> <li>1103. Distribute Candies to People</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>1105. Filling Bookcase Shelves</li> <li>1106. Parsing A Boolean Expression</li> <li>1107. New Users Daily Count</li> <li>1108. Defanging an IP Address</li> <li>1109. Corporate Flight Bookings</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>1111. Maximum Nesting Depth of Two Valid Parentheses Strings</li> <li>1112. Highest Grade For Each Student</li> <li>1113. Reported Posts</li> <li>1114. Print in Order</li> <li>1115. Print FooBar Alternately</li> <li>1116. Print Zero Even Odd</li> <li>1117. Building H2O</li> <li>1118. Number of Days in a Month</li> <li>1119. Remove Vowels from a String</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1121. Divide Array Into Increasing Sequences</li> <li>1122. Relative Sort Array</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>1124. Longest Well-Performing Interval</li> <li>1125. Smallest Sufficient Team</li> <li>1126. Active Businesses</li> <li>1127. User Purchase Platform</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1129. Shortest Path with Alternating Colors</li> <li>113. Path Sum II</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1131. Maximum of Absolute Value Expression</li> <li>1132. Reported Posts II</li> <li>1133. Largest Unique Number</li> <li>1134. Armstrong Number</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1136. Parallel Courses</li> <li>1137. N-th Tribonacci Number</li> <li>1138. Alphabet Board Path</li> <li>1139. Largest 1-Bordered Square</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1140. Stone Game II</li> <li>1141. User Activity for the Past 30 Days I</li> <li>1142. User Activity for the Past 30 Days II</li> <li>1143. Longest Common Subsequence</li> <li>1144. Decrease Elements To Make Array Zigzag</li> <li>1145. Binary Tree Coloring Game</li> <li>1146. Snapshot Array</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1148. Article Views I</li> <li>1149. Article Views II</li> <li>115. Distinct Subsequences</li> <li>1150. Check If a Number Is Majority Element in a Sorted Array</li> <li>1151. Minimum Swaps to Group All 1's Together</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1153. String Transforms Into Another String</li> <li>1154. Day of the Year</li> <li>1155. Number of Dice Rolls With Target Sum</li> <li>1156. Swap For Longest Repeated Character Substring</li> <li>1157. Online Majority Element In Subarray</li> <li>1158. Market Analysis I</li> <li>1159. Market Analysis II</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>1162. As Far from Land as Possible</li> <li>1163. Last Substring in Lexicographical Order</li> <li>1164. Product Price at a Given Date</li> <li>1165. Single-Row Keyboard</li> <li>1166. Design File System</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1169. Invalid Transactions</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1171. Remove Zero Sum Consecutive Nodes from Linked List</li> <li>1172. Dinner Plate Stacks</li> <li>1173. Immediate Food Delivery I</li> <li>1174. Immediate Food Delivery II</li> <li>1175. Prime Arrangements</li> <li>1176. Diet Plan Performance</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1179. Reformat Department Table</li> <li>118. Pascal's Triangle</li> <li>1180. Count Substrings with Only One Distinct Letter</li> <li>1181. Before and After Puzzle</li> <li>1182. Shortest Distance to Target Color</li> <li>1183. Maximum Number of Ones</li> <li>1184. Distance Between Bus Stops</li> <li>1185. Day of the Week</li> <li>1186. Maximum Subarray Sum with One Deletion</li> <li>1187. Make Array Strictly Increasing</li> <li>1188. Design Bounded Blocking Queue</li> <li>1189. Maximum Number of Balloons</li> <li>119. Pascal's Triangle II</li> <li>1190. Reverse Substrings Between Each Pair of Parentheses</li> <li>1191. K-Concatenation Maximum Sum</li> <li>1192. Critical Connections in a Network</li> <li>1193. Monthly Transactions I</li> <li>1194. Tournament Winners</li> <li>1195. Fizz Buzz Multithreaded</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1197. Minimum Knight Moves</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1199. Minimum Time to Build Blocks</li> <li>12. Integer to Roman</li> <li>120. Triangle</li> <li>1200. Minimum Absolute Difference</li> <li>1201. Ugly Number III</li> <li>1202. Smallest String With Swaps</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1204. Last Person to Fit in the Bus</li> <li>1205. Monthly Transactions II</li> <li>1206. Design Skiplist</li> <li>1207. Unique Number of Occurrences</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1209. Remove All Adjacent Duplicates in String II</li> <li>121. Best Time to Buy and Sell Stock</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1211. Queries Quality and Percentage</li> <li>1212. Team Scores in Football Tournament</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1214. Two Sum BSTs</li> <li>1215. Stepping Numbers</li> <li>1216. Valid Palindrome III</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>1219. Path with Maximum Gold</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1220. Count Vowels Permutation</li> <li>1221. Split a String in Balanced Strings</li> <li>1222. Queens That Can Attack the King</li> <li>1223. Dice Roll Simulation</li> <li>1224. Maximum Equal Frequency</li> <li>1225. Report Contiguous Dates</li> <li>1226. The Dining Philosophers</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1228. Missing Number In Arithmetic Progression</li> <li>1229. Meeting Scheduler</li> <li>123. Best Time to Buy and Sell Stock III</li> <li>1230. Toss Strange Coins</li> <li>1231. Divide Chocolate</li> <li>1232. Check If It Is a Straight Line</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1234. Replace the Substring for Balanced String</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1236. Web Crawler</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1240. Tiling a Rectangle with the Fewest Squares</li> <li>1241. Number of Comments per Post</li> <li>1242. Web Crawler Multithreaded</li> <li>1243. Array Transformation</li> <li>1244. Design A Leaderboard</li> <li>1245. Tree Diameter</li> <li>1246. Palindrome Removal</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1248. Count Number of Nice Subarrays</li> <li>1249. Minimum Remove to Make Valid Parentheses</li> <li>125. Valid Palindrome</li> <li>1250. Check If It Is a Good Array</li> <li>1251. Average Selling Price</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1254. Number of Closed Islands</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1256. Encode Number</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>1259. Handshakes That Don't Cross</li> <li>126. Word Ladder II</li> <li>1260. Shift 2D Grid</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1264. Page Recommendations</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1266. Minimum Time Visiting All Points</li> <li>1267. Count Servers that Communicate</li> <li>1268. Search Suggestions System</li> <li>1269. Number of Ways to Stay in the Same Place After Some Steps</li> <li>127. Word Ladder</li> <li>1270. All People Report to the Given Manager</li> <li>1271. Hexspeak</li> <li>1272. Remove Interval</li> <li>1273. Delete Tree Nodes</li> <li>1274. Number of Ships in a Rectangle</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1276. Number of Burgers with No Waste of Ingredients</li> <li>1277. Count Square Submatrices with All Ones</li> <li>1278. Palindrome Partitioning III</li> <li>1279. Traffic Light Controlled Intersection</li> <li>128. Longest Consecutive Sequence</li> <li>1280. Students and Examinations</li> <li>1281. Subtract the Product and Sum of Digits of an Integer</li> <li>1282. Group the People Given the Group Size They Belong To</li> <li>1283. Find the Smallest Divisor Given a Threshold</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1285. Find the Start and End Number of Continuous Ranges</li> <li>1286. Iterator for Combination</li> <li>1287. Element Appearing More Than 25% In Sorted Array</li> <li>1288. Remove Covered Intervals</li> <li>1289. Minimum Falling Path Sum II</li> <li>129. Sum Root to Leaf Numbers</li> <li>1290. Convert Binary Number in a Linked List to Integer</li> <li>1291. Sequential Digits</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>1294. Weather Type in Each Country</li> <li>1295. Find Numbers with Even Number of Digits</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>1299. Replace Elements with Greatest Element on Right Side</li> <li>13. Roman to Integer</li> <li>130. Surrounded Regions</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1301. Number of Paths with Max Score</li> <li>1302. Deepest Leaves Sum</li> <li>1303. Find the Team Size</li> <li>1304. Find N Unique Integers Sum up to Zero</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1306. Jump Game III</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1308. Running Total for Different Genders</li> <li>1309. Decrypt String from Alphabet to Integer Mapping</li> <li>131. Palindrome Partitioning</li> <li>1310. XOR Queries of a Subarray</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1312. Minimum Insertion Steps to Make a String Palindrome</li> <li>1313. Decompress Run-Length Encoded List</li> <li>1314. Matrix Block Sum</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1316. Distinct Echo Substrings</li> <li>1317. Convert Integer to the Sum of Two No-Zero Integers</li> <li>1318. Minimum Flips to Make a OR b Equal to c</li> <li>1319. Number of Operations to Make Network Connected</li> <li>132. Palindrome Partitioning II</li> <li>1320. Minimum Distance to Type a Word Using Two Fingers</li> <li>1321. Restaurant Growth</li> <li>1322. Ads Performance</li> <li>1323. Maximum 69 Number</li> <li>1324. Print Words Vertically</li> <li>1325. Delete Leaves With a Given Value</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1327. List the Products Ordered in a Period</li> <li>1328. Break a Palindrome</li> <li>1329. Sort the Matrix Diagonally</li> <li>133. Clone Graph</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1331. Rank Transform of an Array</li> <li>1332. Remove Palindromic Subsequences</li> <li>1333. Filter Restaurants by Vegan-Friendly, Price and Distance</li> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1335. Minimum Difficulty of a Job Schedule</li> <li>1336. Number of Transactions per Visit</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>134. Gas Station</li> <li>1340. Jump Game V</li> <li>1341. Movie Rating</li> <li>1342. Number of Steps to Reduce a Number to Zero</li> <li>1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</li> <li>1344. Angle Between Hands of a Clock</li> <li>1345. Jump Game IV</li> <li>1346. Check If N and Its Double Exist</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1348. Tweet Counts Per Frequency</li> <li>1349. Maximum Students Taking Exam</li> <li>135. Candy</li> <li>1350. Students With Invalid Departments</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1352. Product of the Last K Numbers</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1354. Construct Target Array With Multiple Sums</li> <li>1355. Activity Participants</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1357. Apply Discount Every n Orders</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>136. Single Number</li> <li>1360. Number of Days Between Two Dates</li> <li>1361. Validate Binary Tree Nodes</li> <li>1362. Closest Divisors</li> <li>1363. Largest Multiple of Three</li> <li>1364. Number of Trusted Contacts of a Customer</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1367. Linked List in Binary Tree</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1369. Get the Second Most Recent Activity</li> <li>137. Single Number II</li> <li>1370. Increasing Decreasing String</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1374. Generate a String With Characters That Have Odd Counts</li> <li>1375. Number of Times Binary String Is Prefix-Aligned</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1378. Replace Employee ID With The Unique Identifier</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>138. Copy List with Random Pointer</li> <li>1380. Lucky Numbers in a Matrix</li> <li>1381. Design a Stack With Increment Operation</li> <li>1382. Balance a Binary Search Tree</li> <li>1383. Maximum Performance of a Team</li> <li>1384. Total Sales Amount by Year</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1386. Cinema Seat Allocation</li> <li>1387. Sort Integers by The Power Value</li> <li>1388. Pizza With 3n Slices</li> <li>1389. Create Target Array in the Given Order</li> <li>139. Word Break</li> <li>1390. Four Divisors</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1392. Longest Happy Prefix</li> <li>1393. Capital Gain/Loss</li> <li>1394. Find Lucky Integer in an Array</li> <li>1395. Count Number of Teams</li> <li>1396. Design Underground System</li> <li>1397. Find All Good Strings</li> <li>1398. Customers Who Bought Products A and B but Not C</li> <li>1399. Count Largest Group</li> <li>14. Longest Common Prefix</li> <li>140. Word Break II</li> <li>1400. Construct K Palindrome Strings</li> <li>1401. Circle and Rectangle Overlapping</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1404. Number of Steps to Reduce a Number in Binary Representation to One</li> <li>1405. Longest Happy String</li> <li>1406. Stone Game III</li> <li>1407. Top Travellers</li> <li>1408. String Matching in an Array</li> <li>1409. Queries on a Permutation With Key</li> <li>141. Linked List Cycle</li> <li>1410. HTML Entity Parser</li> <li>1411. Number of Ways to Paint N \u00d7 3 Grid</li> <li>1412. Find the Quiet Students in All Exams</li> <li>1413. Minimum Value to Get Positive Step by Step Sum</li> <li>1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K</li> <li>1415. The k-th Lexicographical String of All Happy Strings of Length n</li> <li>1416. Restore The Array</li> <li>1417. Reformat The String</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1419. Minimum Number of Frogs Croaking</li> <li>142. Linked List Cycle II</li> <li>1420. Build Array Where You Can Find The Maximum Exactly K Comparisons</li> <li>1421. NPV Queries</li> <li>1422. Maximum Score After Splitting a String</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1424. Diagonal Traverse II</li> <li>1425. Constrained Subsequence Sum</li> <li>1426. Counting Elements</li> <li>1427. Perform String Shifts</li> <li>1428. Leftmost Column with at Least a One</li> <li>1429. First Unique Number</li> <li>143. Reorder List</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>1431. Kids With the Greatest Number of Candies</li> <li>1432. Max Difference You Can Get From Changing an Integer</li> <li>1433. Check If a String Can Break Another String</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1435. Create a Session Bar Chart</li> <li>1436. Destination City</li> <li>1437. Check If All 1's Are at Least Length K Places Away</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>144. Binary Tree Preorder Traversal</li> <li>1440. Evaluate Boolean Expression</li> <li>1441. Build an Array With Stack Operations</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1445. Apples &amp; Oranges</li> <li>1446. Consecutive Characters</li> <li>1447. Simplified Fractions</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>1449. Form Largest Integer With Digits That Add up to Target</li> <li>145. Binary Tree Postorder Traversal</li> <li>1450. Number of Students Doing Homework at a Given Time</li> <li>1451. Rearrange Words in a Sentence</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>1454. Active Users</li> <li>1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence</li> <li>1456. Maximum Number of Vowels in a Substring of Given Length</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1458. Max Dot Product of Two Subsequences</li> <li>1459. Rectangles Area</li> <li>146. LRU Cache</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1462. Course Schedule IV</li> <li>1463. Cherry Pickup II</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1468. Calculate Salaries</li> <li>1469. Find All The Lonely Nodes</li> <li>147. Insertion Sort List</li> <li>1470. Shuffle the Array</li> <li>1471. The k Strongest Values in an Array</li> <li>1472. Design Browser History</li> <li>1473. Paint House III</li> <li>1474. Delete N Nodes After M Nodes of a Linked List</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>1476. Subrectangle Queries</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1478. Allocate Mailboxes</li> <li>1479. Sales by Day of the Week</li> <li>148. Sort List</li> <li>1480. Running Sum of 1d Array</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1484. Group Sold Products By The Date</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1486. XOR Operation in an Array</li> <li>1487. Making File Names Unique</li> <li>1488. Avoid Flood in The City</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>149. Max Points on a Line</li> <li>1490. Clone N-ary Tree</li> <li>1491. Average Salary Excluding the Minimum and Maximum Salary</li> <li>1492. The kth Factor of n</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1494. Parallel Courses II</li> <li>1495. Friendly Movies Streamed Last Month</li> <li>1496. Path Crossing</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>1499. Max Value of Equation</li> <li>15. 3Sum</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1500. Design a File Sharing System</li> <li>1501. Countries You Can Safely Invest In</li> <li>1502. Can Make Arithmetic Progression From Sequence</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1504. Count Submatrices With All Ones</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1506. Find Root of N-Ary Tree</li> <li>1507. Reformat Date</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>151. Reverse Words in a String</li> <li>1510. Stone Game IV</li> <li>1511. Customer Order Frequency</li> <li>1512. Number of Good Pairs</li> <li>1513. Number of Substrings With Only 1s</li> <li>1514. Path with Maximum Probability</li> <li>1515. Best Position for a Service Centre</li> <li>1516. Move Sub-Tree of N-Ary Tree</li> <li>1517. Find Users With Valid E-Mails</li> <li>1518. Water Bottles</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>152. Maximum Product Subarray</li> <li>1520. Maximum Number of Non-Overlapping Substrings</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1522. Diameter of N-Ary Tree</li> <li>1523. Count Odd Numbers in an Interval Range</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1525. Number of Good Ways to Split a String</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1527. Patients With a Condition</li> <li>1528. Shuffle String</li> <li>1529. Minimum Suffix Flips</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>1531. String Compression II</li> <li>1532. The Most Recent Three Orders</li> <li>1533. Find the Index of the Large Integer</li> <li>1534. Count Good Triplets</li> <li>1535. Find the Winner of an Array Game</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1537. Get the Maximum Score</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>1539. Kth Missing Positive Number</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>1540. Can Convert String in K Moves</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1542. Find Longest Awesome Substring</li> <li>1543. Fix Product Name Format</li> <li>1544. Make The String Great</li> <li>1545. Find Kth Bit in Nth Binary String</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1547. Minimum Cost to Cut a Stick</li> <li>1548. The Most Similar Path in a Graph</li> <li>1549. The Most Recent Orders for Each Product</li> <li>155. Min Stack</li> <li>1550. Three Consecutive Odds</li> <li>1551. Minimum Operations to Make Array Equal</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1553. Minimum Number of Days to Eat N Oranges</li> <li>1554. Strings Differ by One Character</li> <li>1555. Bank Account Summary</li> <li>1556. Thousand Separator</li> <li>1557. Minimum Number of Vertices to Reach All Nodes</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1559. Detect Cycles in 2D Grid</li> <li>156. Binary Tree Upside Down</li> <li>1560. Most Visited Sector in  a Circular Track</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1562. Find Latest Group of Size M</li> <li>1563. Stone Game V</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1565. Unique Orders and Customers Per Month</li> <li>1566. Detect Pattern of Length M Repeated K or More Times</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>157. Read N Characters Given Read4</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1571. Warehouse Manager</li> <li>1572. Matrix Diagonal Sum</li> <li>1573. Number of Ways to Split a String</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1575. Count All Possible Routes</li> <li>1576. Replace All ?'s to Avoid Consecutive Repeating Characters</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1579. Remove Max Number of Edges to Keep Graph Fully Traversable</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1581. Customer Who Visited but Did Not Make Any Transactions</li> <li>1582. Special Positions in a Binary Matrix</li> <li>1583. Count Unhappy Friends</li> <li>1584. Min Cost to Connect All Points</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>1586. Binary Search Tree Iterator II</li> <li>1587. Bank Account Summary II</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1590. Make Sum Divisible by P</li> <li>1591. Strange Printer II</li> <li>1592. Rearrange Spaces Between Words</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1596. The Most Frequently Ordered Products for Each Customer</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1598. Crawler Log Folder</li> <li>1599. Maximum Profit of Operating a Centennial Wheel</li> <li>16. 3Sum Closest</li> <li>160. Intersection of Two Linked Lists</li> <li>1600. Throne Inheritance</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1603. Design Parking System</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1607. Sellers With No Sales</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1609. Even Odd Tree</li> <li>161. One Edit Distance</li> <li>1610. Maximum Number of Visible Points</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1613. Find the Missing IDs</li> <li>1614. Maximum Nesting Depth of the Parentheses</li> <li>1615. Maximal Network Rank</li> <li>1616. Split Two Strings to Make Palindrome</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1619. Mean of Array After Removing Some Elements</li> <li>162. Find Peak Element</li> <li>1620. Coordinate With Maximum Network Quality</li> <li>1621. Number of Sets of K Non-Overlapping Line Segments</li> <li>1622. Fancy Sequence</li> <li>1623. All Valid Triplets That Can Represent a Country</li> <li>1624. Largest Substring Between Two Equal Characters</li> <li>1626. Best Team With No Conflicts</li> <li>1627. Graph Connectivity With Threshold</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1629. Slowest Key</li> <li>163. Missing Ranges</li> <li>1630. Arithmetic Subarrays</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1633. Percentage of Users Attended a Contest</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>1635. Hopper Company Queries I</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1637. Widest Vertical Area Between Two Points Containing No Points</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>164. Maximum Gap</li> <li>1640. Check Array Formation Through Concatenation</li> <li>1641. Count Sorted Vowel Strings</li> <li>1642. Furthest Building You Can Reach</li> <li>1643. Kth Smallest Instructions</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1645. Hopper Company Queries II</li> <li>1646. Get Maximum in Generated Array</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1649. Create Sorted Array through Instructions</li> <li>165. Compare Version Numbers</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1651. Hopper Company Queries III</li> <li>1652. Defuse the Bomb</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1655. Distribute Repeating Integers</li> <li>1656. Design an Ordered Stream</li> <li>1657. Determine if Two Strings Are Close</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1659. Maximize Grid Happiness</li> <li>166. Fraction to Recurring Decimal</li> <li>1660. Correct a Binary Tree</li> <li>1661. Average Time of Process per Machine</li> <li>1662. Check If Two String Arrays are Equivalent</li> <li>1663. Smallest String With A Given Numeric Value</li> <li>1664. Ways to Make a Fair Array</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>1666. Change the Root of a Binary Tree</li> <li>1667. Fix Names in a Table</li> <li>1668. Maximum Repeating Substring</li> <li>1669. Merge In Between Linked Lists</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1670. Design Front Middle Back Queue</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1672. Richest Customer Wealth</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1675. Minimize Deviation in Array</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>1677. Product's Worth Over Invoices</li> <li>1678. Goal Parser Interpretation</li> <li>1679. Max Number of K-Sum Pairs</li> <li>168. Excel Sheet Column Title</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1681. Minimum Incompatibility</li> <li>1682. Longest Palindromic Subsequence II</li> <li>1683. Invalid Tweets</li> <li>1684. Count the Number of Consistent Strings</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1686. Stone Game VI</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1688. Count of Matches in Tournament</li> <li>1689. Partitioning Into Minimum Number Of Deci-Binary Numbers</li> <li>169. Majority Element</li> <li>1690. Stone Game VII</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1692. Count Ways to Distribute Candies</li> <li>1693. Daily Leads and Partners</li> <li>1694. Reformat Phone Number</li> <li>1695. Maximum Erasure Value</li> <li>1696. Jump Game VI</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1698. Number of Distinct Substrings in a String</li> <li>1699. Number of Calls Between Two Persons</li> <li>17. Letter Combinations of a Phone Number</li> <li>170. Two Sum III - Data structure design</li> <li>1701. Average Waiting Time</li> <li>1702. Maximum Binary String After Change</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1704. Determine if String Halves Are Alike</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1706. Where Will the Ball Fall</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1708. Largest Subarray Length K</li> <li>1709. Biggest Window Between Visits</li> <li>171. Excel Sheet Column Number</li> <li>1710. Maximum Units on a Truck</li> <li>1711. Count Good Meals</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1714. Sum Of Special Evenly-Spaced Elements In Array</li> <li>1715. Count Apples and Oranges</li> <li>1716. Calculate Money in Leetcode Bank</li> <li>1717. Maximum Score From Removing Substrings</li> <li>1718. Construct the Lexicographically Largest Valid Sequence</li> <li>1719. Number Of Ways To Reconstruct A Tree</li> <li>172. Factorial Trailing Zeroes</li> <li>1720. Decode XORed Array</li> <li>1721. Swapping Nodes in a Linked List</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> <li>1725. Number Of Rectangles That Can Form The Largest Square</li> <li>1726. Tuple with Same Product</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1728. Cat and Mouse II</li> <li>1729. Find Followers Count</li> <li>173. Binary Search Tree Iterator</li> <li>1730. Shortest Path to Get Food</li> <li>1731. The Number of Employees Which Report to Each Employee</li> <li>1732. Find the Highest Altitude</li> <li>1733. Minimum Number of People to Teach</li> <li>1734. Decode XORed Permutation</li> <li>1735. Count Ways to Make Array With Product</li> <li>1736. Latest Time by Replacing Hidden Digits</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1739. Building Boxes</li> <li>174. Dungeon Game</li> <li>1740. Find Distance in a Binary Tree</li> <li>1741. Find Total Time Spent by Each Employee</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1743. Restore the Array From Adjacent Pairs</li> <li>1744. Can You Eat Your Favorite Candy on Your Favorite Day?</li> <li>1745. Palindrome Partitioning IV</li> <li>1746. Maximum Subarray Sum After One Operation</li> <li>1747. Leetflex Banned Accounts</li> <li>1748. Sum of Unique Elements</li> <li>1749. Maximum Absolute Sum of Any Subarray</li> <li>175. Combine Two Tables</li> <li>1750. Minimum Length of String After Deleting Similar Ends</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1752. Check if Array Is Sorted and Rotated</li> <li>1753. Maximum Score From Removing Stones</li> <li>1754. Largest Merge Of Two Strings</li> <li>1755. Closest Subsequence Sum</li> <li>1756. Design Most Recently Used Queue</li> <li>1757. Recyclable and Low Fat Products</li> <li>1758. Minimum Changes To Make Alternating Binary String</li> <li>1759. Count Number of Homogenous Substrings</li> <li>176. Second Highest Salary</li> <li>1760. Minimum Limit of Balls in a Bag</li> <li>1761. Minimum Degree of a Connected Trio in a Graph</li> <li>1762. Buildings With an Ocean View</li> <li>1763. Longest Nice Substring</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>1765. Map of Highest Peak</li> <li>1766. Tree of Coprimes</li> <li>1767. Find the Subtasks That Did Not Execute</li> <li>1768. Merge Strings Alternately</li> <li>1769. Minimum Number of Operations to Move All Balls to Each Box</li> <li>177. Nth Highest Salary</li> <li>1770. Maximum Score from Performing Multiplication Operations</li> <li>1771. Maximize Palindrome Length From Subsequences</li> <li>1772. Sort Features by Popularity</li> <li>1773. Count Items Matching a Rule</li> <li>1774. Closest Dessert Cost</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1776. Car Fleet II</li> <li>1777. Product's Price for Each Store</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1779. Find Nearest Point That Has the Same X or Y Coordinate</li> <li>178. Rank Scores</li> <li>1780. Check if Number is a Sum of Powers of Three</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1782. Count Pairs Of Nodes</li> <li>1783. Grand Slam Titles</li> <li>1784. Check if Binary String Has at Most One Segment of Ones</li> <li>1785. Minimum Elements to Add to Form a Given Sum</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1788. Maximize the Beauty of the Garden</li> <li>1789. Primary Department for Each Employee</li> <li>179. Largest Number</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1791. Find Center of Star Graph</li> <li>1792. Maximum Average Pass Ratio</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1795. Rearrange Products Table</li> <li>1796. Second Largest Digit in a String</li> <li>1797. Design Authentication Manager</li> <li>1798. Maximum Number of Consecutive Values You Can Make</li> <li>1799. Maximize Score After N Operations</li> <li>18. 4Sum</li> <li>180. Consecutive Numbers</li> <li>1800. Maximum Ascending Subarray Sum</li> <li>1801. Number of Orders in the Backlog</li> <li>1802. Maximum Value at a Given Index in a Bounded Array</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1805. Number of Different Integers in a String</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1808. Maximize Number of Nice Divisors</li> <li>1809. Ad-Free Sessions</li> <li>181. Employees Earning More Than Their Managers</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1811. Find Interview Candidates</li> <li>1812. Determine Color of a Chessboard Square</li> <li>1813. Sentence Similarity III</li> <li>1814. Count Nice Pairs in an Array</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1816. Truncate Sentence</li> <li>1817. Finding the Users Active Minutes</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1819. Number of Different Subsequences GCDs</li> <li>182. Duplicate Emails</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1821. Find Customers With Positive Revenue this Year</li> <li>1822. Sign of the Product of an Array</li> <li>1823. Find the Winner of the Circular Game</li> <li>1824. Minimum Sideway Jumps</li> <li>1825. Finding MK Average</li> <li>1826. Faulty Sensor</li> <li>1827. Minimum Operations to Make the Array Increasing</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1829. Maximum XOR for Each Query</li> <li>183. Customers Who Never Order</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1831. Maximum Transaction Each Day</li> <li>1832. Check if the Sentence Is Pangram</li> <li>1833. Maximum Ice Cream Bars</li> <li>1834. Single-Threaded CPU</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1836. Remove Duplicates From an Unsorted Linked List</li> <li>1837. Sum of Digits in Base K</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1839. Longest Substring Of All Vowels in Order</li> <li>184. Department Highest Salary</li> <li>1840. Maximum Building Height</li> <li>1841. League Statistics</li> <li>1842. Next Palindrome Using Same Digits</li> <li>1843. Suspicious Bank Accounts</li> <li>1844. Replace All Digits with Characters</li> <li>1845. Seat Reservation Manager</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1847. Closest Room</li> <li>1848. Minimum Distance to the Target Element</li> <li>1849. Splitting a String Into Descending Consecutive Values</li> <li>185. Department Top Three Salaries</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>1853. Convert Date Format</li> <li>1854. Maximum Population Year</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1856. Maximum Subarray Min-Product</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1858. Longest Word With All Prefixes</li> <li>1859. Sorting the Sentence</li> <li>186. Reverse Words in a String II</li> <li>1860. Incremental Memory Leak</li> <li>1861. Rotating the Box</li> <li>1862. Sum of Floored Pairs</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1864. Minimum Number of Swaps to Make the Binary String Alternating</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1867. Orders With Maximum Quantity Above Average</li> <li>1868. Product of Two Run-Length Encoded Arrays</li> <li>1869. Longer Contiguous Segments of Ones than Zeros</li> <li>187. Repeated DNA Sequences</li> <li>1870. Minimum Speed to Arrive on Time</li> <li>1871. Jump Game VII</li> <li>1872. Stone Game VIII</li> <li>1873. Calculate Special Bonus</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1875. Group Employees of the Same Salary</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>188. Best Time to Buy and Sell Stock IV</li> <li>1880. Check if Word Equals Summation of Two Words</li> <li>1881. Maximum Value after Insertion</li> <li>1882. Process Tasks Using Servers</li> <li>1883. Minimum Skips to Arrive at Meeting On Time</li> <li>1884. Egg Drop With 2 Eggs and N Floors</li> <li>1885. Count Pairs in Two Arrays</li> <li>1886. Determine Whether Matrix Can Be Obtained By Rotation</li> <li>1887. Reduction Operations to Make the Array Elements Equal</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>189. Rotate Array</li> <li>1890. The Latest Login in 2020</li> <li>1891. Cutting Ribbons</li> <li>1892. Page Recommendations II</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1895. Largest Magic Square</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1898. Maximum Number of Removable Characters</li> <li>1899. Merge Triplets to Form Target Triplet</li> <li>19. Remove Nth Node From End of List</li> <li>190. Reverse Bits</li> <li>1900. The Earliest and Latest Rounds Where Players Compete</li> <li>1901. Find a Peak Element II</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1903. Largest Odd Number in String</li> <li>1904. The Number of Full Rounds You Have Played</li> <li>1905. Count Sub Islands</li> <li>1906. Minimum Absolute Difference Queries</li> <li>1907. Count Salary Categories</li> <li>1908. Game of Nim</li> <li>1909. Remove One Element to Make the Array Strictly Increasing</li> <li>191. Number of 1 Bits</li> <li>1910. Remove All Occurrences of a Substring</li> <li>1911. Maximum Alternating Subsequence Sum</li> <li>1912. Design Movie Rental System</li> <li>1913. Maximum Product Difference Between Two Pairs</li> <li>1914. Cyclically Rotating a Grid</li> <li>1915. Number of Wonderful Substrings</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1917. Leetcodify Friends Recommendations</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1919. Leetcodify Similar Friends</li> <li>192. Word Frequency</li> <li>1920. Build Array from Permutation</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1922. Count Good Numbers</li> <li>1923. Longest Common Subpath</li> <li>1924. Erect the Fence II</li> <li>1925. Count Square Sum Triples</li> <li>1927. Sum Game</li> <li>1928. Minimum Cost to Reach Destination in Time</li> <li>1929. Concatenation of Array</li> <li>193. Valid Phone Numbers</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1931. Painting a Grid With Three Different Colors</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1933. Check if String Is Decomposable Into Value-Equal Substrings</li> <li>1934. Confirmation Rate</li> <li>1935. Maximum Number of Words You Can Type</li> <li>1936. Add Minimum Number of Rungs</li> <li>1937. Maximum Number of Points with Cost</li> <li>1938. Maximum Genetic Difference Query</li> <li>1939. Users That Actively Request Confirmation Messages</li> <li>194. Transpose File</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>1943. Describe the Painting</li> <li>1944. Number of Visible People in a Queue</li> <li>1945. Sum of Digits of String After Convert</li> <li>1946. Largest Number After Mutating Substring</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1948. Delete Duplicate Folders in System</li> <li>1949. Strong Friendship</li> <li>195. Tenth Line</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1951. All the Pairs With the Maximum Number of Common Followers</li> <li>1952. Three Divisors</li> <li>1953. Maximum Number of Weeks for Which You Can Work</li> <li>1954. Minimum Garden Perimeter to Collect Enough Apples</li> <li>1955. Count Number of Special Subsequences</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1957. Delete Characters to Make Fancy String</li> <li>1959. Minimum Total Space Wasted With K Resizing Operations</li> <li>196. Delete Duplicate Emails</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>1961. Check If String Is a Prefix of Array</li> <li>1962. Remove Stones to Minimize the Total</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>1965. Employees With Missing Information</li> <li>1966. Binary Searchable Numbers in an Unsorted Array</li> <li>1967. Number of Strings That Appear as Substrings in Word</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>197. Rising Temperature</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>1972. First and Last Call On the Same Day</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>1975. Maximum Matrix Sum</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>1977. Number of Ways to Separate Numbers</li> <li>1978. Employees Whose Manager Left the Company</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>198. House Robber</li> <li>1980. Find Unique Binary String</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1982. Find Array Given Subset Sums</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1987. Number of Unique Good Subsequences</li> <li>1988. Find Cutoff Score for Each School</li> <li>1989. Maximum Number of People That Can Be Caught in Tag</li> <li>199. Binary Tree Right Side View</li> <li>1990. Count the Number of Experiments</li> <li>1991. Find the Middle Index in Array</li> <li>1992. Find All Groups of Farmland</li> <li>1993. Operations on Tree</li> <li>1994. The Number of Good Subsets</li> <li>1995. Count Special Quadruplets</li> <li>1996. The Number of Weak Characters in the Game</li> <li>1997. First Day Where You Have Been in All the Rooms</li> <li>1998. GCD Sort of an Array</li> <li>1999. Smallest Greater Multiple Made of Two Digits</li> <li>2. Add Two Numbers</li> <li>20. Valid Parentheses</li> <li>200. Number of Islands</li> <li>2000. Reverse Prefix of Word</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2004. The Number of Seniors and Juniors to Join the Company</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2007. Find Original Array From Doubled Array</li> <li>2008. Maximum Earnings From Taxi</li> <li>2009. Minimum Number of Operations to Make Array Continuous</li> <li>201. Bitwise AND of Numbers Range</li> <li>2010. The Number of Seniors and Juniors to Join the Company II</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2012. Sum of Beauty in the Array</li> <li>2013. Detect Squares</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2016. Maximum Difference Between Increasing Elements</li> <li>2017. Grid Game</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2019. The Score of Students Solving Math Expression</li> <li>202. Happy Number</li> <li>2020. Number of Accounts That Did Not Stream</li> <li>2021. Brightest Position on Street</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2023. Number of Pairs of Strings With Concatenation Equal to Target</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2026. Low-Quality Problems</li> <li>2027. Minimum Moves to Convert String</li> <li>2028. Find Missing Observations</li> <li>2029. Stone Game IX</li> <li>203. Remove Linked List Elements</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2032. Two Out of Three</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2034. Stock Price Fluctuation</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2036. Maximum Alternating Subarray Sum</li> <li>2037. Minimum Number of Moves to Seat Everyone</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>2039. The Time When the Network Becomes Idle</li> <li>204. Count Primes</li> <li>2040. Kth Smallest Product of Two Sorted Arrays</li> <li>2041. Accepted Candidates From the Interviews</li> <li>2042. Check if Numbers Are Ascending in a Sentence</li> <li>2043. Simple Bank System</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2047. Number of Valid Words in a Sentence</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2049. Count Nodes With the Highest Score</li> <li>205. Isomorphic Strings</li> <li>2050. Parallel Courses III</li> <li>2051. The Category of Each Member in the Store</li> <li>2052. Minimum Cost to Separate Sentence Into Rows</li> <li>2053. Kth Distinct String in an Array</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2055. Plates Between Candles</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2057. Smallest Index With Equal Value</li> <li>2058. Find the Minimum and Maximum Number of Nodes Between Critical Points</li> <li>2059. Minimum Operations to Convert Number</li> <li>206. Reverse Linked List</li> <li>2060. Check if an Original String Exists Given Two Encoded Strings</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2062. Count Vowel Substrings of a String</li> <li>2063. Vowels of All Substrings</li> <li>2064. Minimized Maximum of Products Distributed to Any Store</li> <li>2065. Maximum Path Quality of a Graph</li> <li>2066. Account Balance</li> <li>2067. Number of Equal Count Substrings</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>2069. Walking Robot Simulation II</li> <li>207. Course Schedule</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2072. The Winner University</li> <li>2073. Time Needed to Buy Tickets</li> <li>2074. Reverse Nodes in Even Length Groups</li> <li>2075. Decode the Slanted Ciphertext</li> <li>2076. Process Restricted Friend Requests</li> <li>2077. Paths in Maze That Lead to Same Room</li> <li>2078. Two Furthest Houses With Different Colors</li> <li>2079. Watering Plants</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2080. Range Frequency Queries</li> <li>2081. Sum of k-Mirror Numbers</li> <li>2082. The Number of Rich Customers</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2084. Drop Type 1 Orders for Customers With Type 0 Orders</li> <li>2085. Count Common Words With One Occurrence</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>2089. Find Target Indices After Sorting Array</li> <li>209. Minimum Size Subarray Sum</li> <li>2090. K Radius Subarray Averages</li> <li>2091. Removing Minimum and Maximum From Array</li> <li>2092. Find All People With Secret</li> <li>2093. Minimum Cost to Reach City With Discounts</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2095. Delete the Middle Node of a Linked List</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2097. Valid Arrangement of Pairs</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>21. Merge Two Sorted Lists</li> <li>210. Course Schedule II</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2101. Detonate the Maximum Bombs</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2103. Rings and Rods</li> <li>2104. Sum of Subarray Ranges</li> <li>2105. Watering Plants II</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2108. Find First Palindromic String in the Array</li> <li>2109. Adding Spaces to a String</li> <li>211. Design Add and Search Words Data Structure</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>2111. Minimum Operations to Make the Array K-Increasing</li> <li>2112. The Airport With the Most Traffic</li> <li>2113. Elements in Array After Removing and Replacing Elements</li> <li>2114. Maximum Number of Words Found in Sentences</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>2117. Abbreviating the Product of a Range</li> <li>2118. Build the Equation</li> <li>2119. A Number After a Double Reversal</li> <li>212. Word Search II</li> <li>2120. Execution of All Suffix Instructions Staying in a Grid</li> <li>2121. Intervals Between Identical Elements</li> <li>2122. Recover the Original Array</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2124. Check if All A's Appears Before All B's</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2126. Destroying Asteroids</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2129. Capitalize the Title</li> <li>213. House Robber II</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2132. Stamping the Grid</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2134. Minimum Swaps to Group All 1's Together II</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2137. Pour Water Between Buckets to Make Water Levels Equal</li> <li>2138. Divide a String Into Groups of Size k</li> <li>2139. Minimum Moves to Reach Target Score</li> <li>214. Shortest Palindrome</li> <li>2140. Solving Questions With Brainpower</li> <li>2141. Maximum Running Time of N Computers</li> <li>2142. The Number of Passengers in Each Bus I</li> <li>2143. Choose Numbers From Two Arrays in Range</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2145. Count the Hidden Sequences</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2148. Count Elements With Strictly Smaller and Greater Elements</li> <li>2149. Rearrange Array Elements by Sign</li> <li>215. Kth Largest Element in an Array</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2153. The Number of Passengers in Each Bus II</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2155. All Divisions With the Highest Score of a Binary Array</li> <li>2156. Find Substring With Given Hash Value</li> <li>2157. Groups of Strings</li> <li>2158. Amount of New Area Painted Each Day</li> <li>2159. Order Two Columns Independently</li> <li>216. Combination Sum III</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2161. Partition Array According to Given Pivot</li> <li>2162. Minimum Cost to Set Cooking Time</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>2164. Sort Even and Odd Indices Independently</li> <li>2165. Smallest Value of the Rearranged Number</li> <li>2166. Design Bitset</li> <li>2167. Minimum Time to Remove All Cars Containing Illegal Goods</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2169. Count Operations to Obtain Zero</li> <li>217. Contains Duplicate</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2172. Maximum AND Sum of Array</li> <li>2173. Longest Winning Streak</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2175. The Change in Global Rankings</li> <li>2176. Count Equal and Divisible Pairs in an Array</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2180. Count Integers With Even Digit Sum</li> <li>2181. Merge Nodes in Between Zeros</li> <li>2182. Construct String With Repeat Limit</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2185. Counting Words With a Given Prefix</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>2187. Minimum Time to Complete Trips</li> <li>2188. Minimum Time to Finish the Race</li> <li>2189. Number of Ways to Build House of Cards</li> <li>219. Contains Duplicate II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2191. Sort the Jumbled Numbers</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2194. Cells in a Range on an Excel Sheet</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2198. Number of Single Divisor Triplets</li> <li>2199. Finding the Topic of Each Post</li> <li>22. Generate Parentheses</li> <li>220. Contains Duplicate III</li> <li>2200. Find All K-Distant Indices in an Array</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2202. Maximize the Topmost Element After K Moves</li> <li>2203. Minimum Weighted Subgraph With the Required Paths</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2205. The Number of Users That Are Eligible for Discount</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>221. Maximal Square</li> <li>2210. Count Hills and Valleys in an Array</li> <li>2211. Count Collisions on a Road</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2214. Minimum Health to Beat Game</li> <li>2215. Find the Difference of Two Arrays</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>2217. Find Palindrome With Fixed Length</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2219. Maximum Sum Score of Array</li> <li>222. Count Complete Tree Nodes</li> <li>2220. Minimum Bit Flips to Convert Number</li> <li>2221. Find Triangular Sum of an Array</li> <li>2222. Number of Ways to Select Buildings</li> <li>2223. Sum of Scores of Built Strings</li> <li>2224. Minimum Number of Operations to Convert Time</li> <li>2225. Find Players With Zero or One Losses</li> <li>2226. Maximum Candies Allocated to K Children</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2228. Users With Two Purchases Within Seven Days</li> <li>2229. Check if an Array Is Consecutive</li> <li>223. Rectangle Area</li> <li>2230. The Users That Are Eligible for Discount</li> <li>2231. Largest Number After Digit Swaps by Parity</li> <li>2232. Minimize Result by Adding Parentheses to Expression</li> <li>2233. Maximum Product After K Increments</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2235. Add Two Integers</li> <li>2236. Root Equals Sum of Children</li> <li>2237. Count Positions on Street With Required Brightness</li> <li>2238. Number of Times a Driver Was a Passenger</li> <li>2239. Find Closest Number to Zero</li> <li>224. Basic Calculator</li> <li>2240. Number of Ways to Buy Pens and Pencils</li> <li>2241. Design an ATM Machine</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2243. Calculate Digit Sum of a String</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2248. Intersection of Multiple Arrays</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>225. Implement Stack using Queues</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2252. Dynamic Pivoting of a Table</li> <li>2253. Dynamic Unpivoting of a Table</li> <li>2254. Design Video Sharing Platform</li> <li>2255. Count Prefixes of a Given String</li> <li>2256. Minimum Average Difference</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2258. Escape the Spreading Fire</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>226. Invert Binary Tree</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2261. K Divisible Elements Subarrays</li> <li>2262. Total Appeal of A String</li> <li>2263. Make Array Non-decreasing or Non-increasing</li> <li>2264. Largest 3-Same-Digit Number in String</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>2266. Count Number of Texts</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2268. Minimum Number of Keypresses</li> <li>2269. Find the K-Beauty of a Number</li> <li>227. Basic Calculator II</li> <li>2270. Number of Ways to Split Array</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2272. Substring With Largest Variance</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2274. Maximum Consecutive Floors Without Special Floors</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2276. Count Integers in Intervals</li> <li>2277. Closest Node to Path in Tree</li> <li>2278. Percentage of Letter in String</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>228. Summary Ranges</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2285. Maximum Total Importance of Roads</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2287. Rearrange Characters to Make Target String</li> <li>2288. Apply Discount to Prices</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>229. Majority Element II</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2291. Maximum Profit From Trading Stocks</li> <li>2292. Products With Three or More Orders in Two Consecutive Years</li> <li>2293. Min Max Game</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2295. Replace Elements in an Array</li> <li>2296. Design a Text Editor</li> <li>2297. Jump Game VIII</li> <li>2298. Tasks Count in the Weekend</li> <li>2299. Strong Password Checker II</li> <li>23. Merge k Sorted Lists</li> <li>230. Kth Smallest Element in a BST</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2301. Match Substring After Replacement</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2303. Calculate Amount Paid in Taxes</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2305. Fair Distribution of Cookies</li> <li>2306. Naming a Company</li> <li>2307. Check for Contradictions in Equations</li> <li>2308. Arrange Table by Gender</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>231. Power of Two</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2312. Selling Pieces of Wood</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2314. The First Day of the Maximum Recorded Degree in Each City</li> <li>2315. Count Asterisks</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2317. Maximum XOR After Operations</li> <li>2318. Number of Distinct Roll Sequences</li> <li>2319. Check if Matrix Is X-Matrix</li> <li>232. Implement Queue using Stacks</li> <li>2320. Count Number of Ways to Place Houses</li> <li>2321. Maximum Score Of Spliced Array</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2324. Product Sales Analysis IV</li> <li>2325. Decode the Message</li> <li>2326. Spiral Matrix IV</li> <li>2327. Number of People Aware of a Secret</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2329. Product Sales Analysis V</li> <li>233. Number of Digit One</li> <li>2330. Valid Palindrome IV</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2336. Smallest Number in Infinite Set</li> <li>2337. Move Pieces to Obtain a String</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2339. All the Matches of the League</li> <li>234. Palindrome Linked List</li> <li>2340. Minimum Adjacent Swaps to Make a Valid Array</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2346. Compute the Rank as a Percentage</li> <li>2347. Best Poker Hand</li> <li>2348. Number of Zero-Filled Subarrays</li> <li>2349. Design a Number Container System</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2351. First Letter to Appear Twice</li> <li>2352. Equal Row and Column Pairs</li> <li>2353. Design a Food Rating System</li> <li>2354. Number of Excellent Pairs</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2356. Number of Unique Subjects Taught by Each Teacher</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2359. Find Closest Node to Given Two Nodes</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2360. Longest Cycle in a Graph</li> <li>2361. Minimum Costs Using the Train Line</li> <li>2362. Generate the Invoice</li> <li>2363. Merge Similar Items</li> <li>2364. Count Number of Bad Pairs</li> <li>2365. Task Scheduler II</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2367. Number of Arithmetic Triplets</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2369. Check if There is a Valid Partition For The Array</li> <li>237. Delete Node in a Linked List</li> <li>2370. Longest Ideal Subsequence</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2372. Calculate the Influence of Each Salesperson</li> <li>2373. Largest Local Values in a Matrix</li> <li>2374. Node With Highest Edge Score</li> <li>2375. Construct Smallest Number From DI String</li> <li>2376. Count Special Integers</li> <li>2377. Sort the Olympic Table</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2379. Minimum Recolors to Get K Consecutive Black Blocks</li> <li>238. Product of Array Except Self</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2381. Shifting Letters II</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2383. Minimum Hours of Training to Win a Competition</li> <li>2384. Largest Palindromic Number</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2386. Find the K-Sum of an Array</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2388. Change Null Values in a Table to the Previous Value</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>239. Sliding Window Maximum</li> <li>2390. Removing Stars From a String</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2392. Build a Matrix With Conditions</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2394. Employees With Deductions</li> <li>2395. Find Subarrays With Equal Sum</li> <li>2396. Strictly Palindromic Number</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2399. Check Distances Between Same Letters</li> <li>24. Swap Nodes in Pairs</li> <li>240. Search a 2D Matrix II</li> <li>2401. Longest Nice Subarray</li> <li>2402. Meeting Rooms III</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2404. Most Frequent Even Element</li> <li>2405. Optimal Partition of String</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2408. Design SQL</li> <li>2409. Count Days Spent Together</li> <li>241. Different Ways to Add Parentheses</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2413. Smallest Even Multiple</li> <li>2414. Length of the Longest Alphabetical Continuous Substring</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2417. Closest Fair Integer</li> <li>2418. Sort the People</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>242. Valid Anagram</li> <li>2420. Find All Good Indices</li> <li>2421. Number of Good Paths</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>2424. Longest Uploaded Prefix</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2427. Number of Common Factors</li> <li>2428. Maximum Sum of an Hourglass</li> <li>2429. Minimize XOR</li> <li>243. Shortest Word Distance</li> <li>2430. Maximum Deletions on a String</li> <li>2431. Maximize Total Tastiness of Purchased Fruits</li> <li>2432. The Employee That Worked on the Longest Task</li> <li>2433. Find The Original Array of Prefix Xor</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2437. Number of Valid Clock Times</li> <li>2438. Range Product Queries of Powers</li> <li>2439. Minimize Maximum of Array</li> <li>244. Shortest Word Distance II</li> <li>2440. Create Components With Same Value</li> <li>2441. Largest Positive Integer That Exists With Its Negative</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2443. Sum of Number and Its Reverse</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2445. Number of Nodes With Value One</li> <li>2446. Determine if Two Events Have Conflict</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>245. Shortest Word Distance III</li> <li>2450. Number of Distinct Binary Strings After Applying Operations</li> <li>2451. Odd String Difference</li> <li>2452. Words Within Two Edits of Dictionary</li> <li>2453. Destroy Sequential Targets</li> <li>2454. Next Greater Element IV</li> <li>2455. Average Value of Even Numbers That Are Divisible by Three</li> <li>2456. Most Popular Video Creator</li> <li>2457. Minimum Addition to Make Integer Beautiful</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>246. Strobogrammatic Number</li> <li>2460. Apply Operations to an Array</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2462. Total Cost to Hire K Workers</li> <li>2463. Minimum Total Distance Traveled</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2465. Number of Distinct Averages</li> <li>2466. Count Ways To Build Good Strings</li> <li>2467. Most Profitable Path in a Tree</li> <li>2468. Split Message Based on Limit</li> <li>2469. Convert the Temperature</li> <li>247. Strobogrammatic Number II</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2472. Maximum Number of Non-overlapping Palindrome Substrings</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2474. Customers With Strictly Increasing Purchases</li> <li>2475. Number of Unequal Triplets in Array</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2478. Number of Beautiful Partitions</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>248. Strobogrammatic Number III</li> <li>2480. Form a Chemical Bond</li> <li>2481. Minimum Cuts to Divide a Circle</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2483. Minimum Penalty for a Shop</li> <li>2484. Count Palindromic Subsequences</li> <li>2485. Find the Pivot Integer</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2487. Remove Nodes From Linked List</li> <li>2488. Count Subarrays With Median K</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>249. Group Shifted Strings</li> <li>2490. Circular Sentence</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2494. Merge Overlapping Events in the Same Hall</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2496. Maximum Value of a String in an Array</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2498. Frog Jump II</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>25. Reverse Nodes in k-Group</li> <li>250. Count Univalue Subtrees</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2501. Longest Square Streak in an Array</li> <li>2502. Design Memory Allocator</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2504. Concatenate the Name and the Profession</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2506. Count Pairs Of Similar Strings</li> <li>2507. Smallest Value After Replacing With Sum of Prime Factors</li> <li>2508. Add Edges to Make Degrees of All Nodes Even</li> <li>2509. Cycle Length Queries in a Tree</li> <li>251. Flatten 2D Vector</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2511. Maximum Enemy Forts That Can Be Captured</li> <li>2512. Reward Top K Students</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2514. Count Anagrams</li> <li>2515. Shortest Distance to Target String in a Circular Array</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>2518. Number of Great Partitions</li> <li>2519. Count the Number of K-Big Indices</li> <li>252. Meeting Rooms</li> <li>2520. Count the Digits That Divide a Number</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2523. Closest Prime Numbers in Range</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2525. Categorize Box According to Criteria</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2527. Find Xor-Beauty of Array</li> <li>2528. Maximize the Minimum Powered City</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2532. Time to Cross a Bridge</li> <li>2533. Number of Good Binary Strings</li> <li>2534. Time Taken to Cross the Door</li> <li>2535. Difference Between Element Sum and Digit Sum of an Array</li> <li>2536. Increment Submatrices by One</li> <li>2537. Count the Number of Good Subarrays</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>2539. Count the Number of Good Subsequences</li> <li>254. Factor Combinations</li> <li>2540. Minimum Common Value</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2543. Check if Point Is Reachable</li> <li>2544. Alternating Digit Sum</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2546. Apply Bitwise Operations to Make Strings Equal</li> <li>2547. Minimum Cost to Split an Array</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2549. Count Distinct Numbers on Board</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>2550. Count Collisions of Monkeys on a Polygon</li> <li>2551. Put Marbles in Bags</li> <li>2552. Count Increasing Quadruplets</li> <li>2553. Separate the Digits in an Array</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2555. Maximize Win From Two Segments</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2559. Count Vowel Strings in Ranges</li> <li>256. Paint House</li> <li>2560. House Robber IV</li> <li>2561. Rearranging Fruits</li> <li>2562. Find the Array Concatenation Value</li> <li>2563. Count the Number of Fair Pairs</li> <li>2564. Substring XOR Queries</li> <li>2565. Subsequence With the Minimum Score</li> <li>2566. Maximum Difference by Remapping a Digit</li> <li>2567. Minimum Score by Changing Two Elements</li> <li>2568. Minimum Impossible OR</li> <li>2569. Handling Sum Queries After Update</li> <li>257. Binary Tree Paths</li> <li>2570. Merge Two 2D Arrays by Summing Values</li> <li>2571. Minimum Operations to Reduce an Integer to 0</li> <li>2572. Count the Number of Square-Free Subsets</li> <li>2573. Find the String with LCP</li> <li>2574. Left and Right Sum Differences</li> <li>2575. Find the Divisibility Array of a String</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>2578. Split With Minimum Sum</li> <li>2579. Count Total Number of Colored Cells</li> <li>258. Add Digits</li> <li>2580. Count Ways to Group Overlapping Ranges</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2582. Pass the Pillow</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>2584. Split the Array to Make Coprime Products</li> <li>2585. Number of Ways to Earn Points</li> <li>259. 3Sum Smaller</li> <li>26. Remove Duplicates from Sorted Array</li> <li>260. Single Number III</li> <li>261. Graph Valid Tree</li> <li>262. Trips and Users</li> <li>263. Ugly Number</li> <li>264. Ugly Number II</li> <li>265. Paint House II</li> <li>266. Palindrome Permutation</li> <li>267. Palindrome Permutation II</li> <li>268. Missing Number</li> <li>269. Alien Dictionary</li> <li>27. Remove Element</li> <li>270. Closest Binary Search Tree Value</li> <li>271. Encode and Decode Strings</li> <li>272. Closest Binary Search Tree Value II</li> <li>273. Integer to English Words</li> <li>274. H-Index</li> <li>275. H-Index II</li> <li>276. Paint Fence</li> <li>277. Find the Celebrity</li> <li>278. First Bad Version</li> <li>279. Perfect Squares</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>280. Wiggle Sort</li> <li>281. Zigzag Iterator</li> <li>282. Expression Add Operators</li> <li>283. Move Zeroes</li> <li>284. Peeking Iterator</li> <li>285. Inorder Successor in BST</li> <li>286. Walls and Gates</li> <li>287. Find the Duplicate Number</li> <li>288. Unique Word Abbreviation</li> <li>289. Game of Life</li> <li>29. Divide Two Integers</li> <li>290. Word Pattern</li> <li>291. Word Pattern II</li> <li>292. Nim Game</li> <li>293. Flip Game</li> <li>294. Flip Game II</li> <li>295. Find Median from Data Stream</li> <li>296. Best Meeting Point</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>299. Bulls and Cows</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>300. Longest Increasing Subsequence</li> <li>301. Remove Invalid Parentheses</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>305. Number of Islands II</li> <li>306. Additive Number</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>309. Best Time to Buy and Sell Stock with Cooldown</li> <li>31. Next Permutation</li> <li>310. Minimum Height Trees</li> <li>311. Sparse Matrix Multiplication</li> <li>312. Burst Balloons</li> <li>313. Super Ugly Number</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>315. Count of Smaller Numbers After Self</li> <li>316. Remove Duplicate Letters</li> <li>317. Shortest Distance from All Buildings</li> <li>318. Maximum Product of Word Lengths</li> <li>319. Bulb Switcher</li> <li>32. Longest Valid Parentheses</li> <li>320. Generalized Abbreviation</li> <li>321. Create Maximum Number</li> <li>322. Coin Change</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>324. Wiggle Sort II</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>326. Power of Three</li> <li>327. Count of Range Sum</li> <li>328. Odd Even Linked List</li> <li>329. Longest Increasing Path in a Matrix</li> <li>33. Search in Rotated Sorted Array</li> <li>330. Patching Array</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>332. Reconstruct Itinerary</li> <li>333. Largest BST Subtree</li> <li>334. Increasing Triplet Subsequence</li> <li>335. Self Crossing</li> <li>336. Palindrome Pairs</li> <li>337. House Robber III</li> <li>338. Counting Bits</li> <li>339. Nested List Weight Sum</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>341. Flatten Nested List Iterator</li> <li>342. Power of Four</li> <li>343. Integer Break</li> <li>344. Reverse String</li> <li>345. Reverse Vowels of a String</li> <li>346. Moving Average from Data Stream</li> <li>347. Top K Frequent Elements</li> <li>348. Design Tic-Tac-Toe</li> <li>349. Intersection of Two Arrays</li> <li>35. Search Insert Position</li> <li>350. Intersection of Two Arrays II</li> <li>351. Android Unlock Patterns</li> <li>352. Data Stream as Disjoint Intervals</li> <li>353. Design Snake Game</li> <li>354. Russian Doll Envelopes</li> <li>355. Design Twitter</li> <li>356. Line Reflection</li> <li>357. Count Numbers with Unique Digits</li> <li>358. Rearrange String k Distance Apart</li> <li>359. Logger Rate Limiter</li> <li>36. Valid Sudoku</li> <li>360. Sort Transformed Array</li> <li>361. Bomb Enemy</li> <li>362. Design Hit Counter</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>364. Nested List Weight Sum II</li> <li>365. Water and Jug Problem</li> <li>366. Find Leaves of Binary Tree</li> <li>367. Valid Perfect Square</li> <li>368. Largest Divisible Subset</li> <li>369. Plus One Linked List</li> <li>37. Sudoku Solver</li> <li>370. Range Addition</li> <li>371. Sum of Two Integers</li> <li>372. Super Pow</li> <li>373. Find K Pairs with Smallest Sums</li> <li>374. Guess Number Higher or Lower</li> <li>375. Guess Number Higher or Lower II</li> <li>376. Wiggle Subsequence</li> <li>377. Combination Sum IV</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>379. Design Phone Directory</li> <li>38. Count and Say</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>382. Linked List Random Node</li> <li>383. Ransom Note</li> <li>384. Shuffle an Array</li> <li>385. Mini Parser</li> <li>386. Lexicographical Numbers</li> <li>387. First Unique Character in a String</li> <li>388. Longest Absolute File Path</li> <li>389. Find the Difference</li> <li>39. Combination Sum</li> <li>390. Elimination Game</li> <li>391. Perfect Rectangle</li> <li>392. Is Subsequence</li> <li>393. UTF-8 Validation</li> <li>394. Decode String</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>396. Rotate Function</li> <li>397. Integer Replacement</li> <li>398. Random Pick Index</li> <li>399. Evaluate Division</li> <li>4. Median of Two Sorted Arrays</li> <li>40. Combination Sum II</li> <li>400. Nth Digit</li> <li>401. Binary Watch</li> <li>402. Remove K Digits</li> <li>403. Frog Jump</li> <li>404. Sum of Left Leaves</li> <li>405. Convert a Number to Hexadecimal</li> <li>406. Queue Reconstruction by Height</li> <li>407. Trapping Rain Water II</li> <li>408. Valid Word Abbreviation</li> <li>409. Longest Palindrome</li> <li>41. First Missing Positive</li> <li>410. Split Array Largest Sum</li> <li>411. Minimum Unique Word Abbreviation</li> <li>412. Fizz Buzz</li> <li>413. Arithmetic Slices</li> <li>414. Third Maximum Number</li> <li>415. Add Strings</li> <li>416. Partition Equal Subset Sum</li> <li>417. Pacific Atlantic Water Flow</li> <li>418. Sentence Screen Fitting</li> <li>419. Battleships in a Board</li> <li>42. Trapping Rain Water</li> <li>420. Strong Password Checker</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>422. Valid Word Square</li> <li>423. Reconstruct Original Digits from English</li> <li>424. Longest Repeating Character Replacement</li> <li>425. Word Squares</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>427. Construct Quad Tree</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>429. N-ary Tree Level Order Traversal</li> <li>43. Multiply Strings</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>432. All O`one Data Structure</li> <li>433. Minimum Genetic Mutation</li> <li>434. Number of Segments in a String</li> <li>435. Non-overlapping Intervals</li> <li>436. Find Right Interval</li> <li>437. Path Sum III</li> <li>438. Find All Anagrams in a String</li> <li>439. Ternary Expression Parser</li> <li>44. Wildcard Matching</li> <li>440. K-th Smallest in Lexicographical Order</li> <li>441. Arranging Coins</li> <li>442. Find All Duplicates in an Array</li> <li>443. String Compression</li> <li>444. Sequence Reconstruction</li> <li>445. Add Two Numbers II</li> <li>446. Arithmetic Slices II - Subsequence</li> <li>447. Number of Boomerangs</li> <li>448. Find All Numbers Disappeared in an Array</li> <li>449. Serialize and Deserialize BST</li> <li>45. Jump Game II</li> <li>450. Delete Node in a BST</li> <li>451. Sort Characters By Frequency</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>453. Minimum Moves to Equal Array Elements</li> <li>454. 4Sum II</li> <li>455. Assign Cookies</li> <li>456. 132 Pattern</li> <li>457. Circular Array Loop</li> <li>458. Poor Pigs</li> <li>459. Repeated Substring Pattern</li> <li>46. Permutations</li> <li>460. LFU Cache</li> <li>461. Hamming Distance</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>463. Island Perimeter</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>466. Count The Repetitions</li> <li>467. Unique Substrings in Wraparound String</li> <li>468. Validate IP Address</li> <li>469. Convex Polygon</li> <li>47. Permutations II</li> <li>470. Implement Rand10() Using Rand7()</li> <li>471. Encode String with Shortest Length</li> <li>472. Concatenated Words</li> <li>473. Matchsticks to Square</li> <li>474. Ones and Zeroes</li> <li>475. Heaters</li> <li>476. Number Complement</li> <li>477. Total Hamming Distance</li> <li>478. Generate Random Point in a Circle</li> <li>479. Largest Palindrome Product</li> <li>48. Rotate Image</li> <li>480. Sliding Window Median</li> <li>481. Magical String</li> <li>482. License Key Formatting</li> <li>483. Smallest Good Base</li> <li>484. Find Permutation</li> <li>485. Max Consecutive Ones</li> <li>486. Predict the Winner</li> <li>487. Max Consecutive Ones II</li> <li>488. Zuma Game</li> <li>489. Robot Room Cleaner</li> <li>49. Group Anagrams</li> <li>490. The Maze</li> <li>491. Non-decreasing Subsequences</li> <li>492. Construct the Rectangle</li> <li>493. Reverse Pairs</li> <li>494. Target Sum</li> <li>495. Teemo Attacking</li> <li>496. Next Greater Element I</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>498. Diagonal Traverse</li> <li>499. The Maze III</li> <li>5. Longest Palindromic Substring</li> <li>50. Pow(x, n)</li> <li>500. Keyboard Row</li> <li>501. Find Mode in Binary Search Tree</li> <li>502. IPO</li> <li>503. Next Greater Element II</li> <li>504. Base 7</li> <li>505. The Maze II</li> <li>506. Relative Ranks</li> <li>507. Perfect Number</li> <li>508. Most Frequent Subtree Sum</li> <li>509. Fibonacci Number</li> <li>51. N-Queens</li> <li>510. Inorder Successor in BST II</li> <li>511. Game Play Analysis I</li> <li>512. Game Play Analysis II</li> <li>513. Find Bottom Left Tree Value</li> <li>514. Freedom Trail</li> <li>515. Find Largest Value in Each Tree Row</li> <li>516. Longest Palindromic Subsequence</li> <li>517. Super Washing Machines</li> <li>518. Coin Change II</li> <li>519. Random Flip Matrix</li> <li>52. N-Queens II</li> <li>520. Detect Capital</li> <li>521. Longest Uncommon Subsequence I</li> <li>522. Longest Uncommon Subsequence II</li> <li>523. Continuous Subarray Sum</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>525. Contiguous Array</li> <li>526. Beautiful Arrangement</li> <li>527. Word Abbreviation</li> <li>528. Random Pick with Weight</li> <li>529. Minesweeper</li> <li>53. Maximum Subarray</li> <li>530. Minimum Absolute Difference in BST</li> <li>531. Lonely Pixel I</li> <li>532. K-diff Pairs in an Array</li> <li>533. Lonely Pixel II</li> <li>534. Game Play Analysis III</li> <li>535. Encode and Decode TinyURL</li> <li>536. Construct Binary Tree from String</li> <li>537. Complex Number Multiplication</li> <li>538. Convert BST to Greater Tree</li> <li>539. Minimum Time Difference</li> <li>54. Spiral Matrix</li> <li>540. Single Element in a Sorted Array</li> <li>541. Reverse String II</li> <li>542. 01 Matrix</li> <li>543. Diameter of Binary Tree</li> <li>544. Output Contest Matches</li> <li>545. Boundary of Binary Tree</li> <li>546. Remove Boxes</li> <li>547. Number of Provinces</li> <li>548. Split Array with Equal Sum</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>55. Jump Game</li> <li>550. Game Play Analysis IV</li> <li>551. Student Attendance Record I</li> <li>552. Student Attendance Record II</li> <li>553. Optimal Division</li> <li>554. Brick Wall</li> <li>555. Split Concatenated Strings</li> <li>556. Next Greater Element III</li> <li>557. Reverse Words in a String III</li> <li>558. Logical OR of Two Binary Grids Represented as Quad-Trees</li> <li>559. Maximum Depth of N-ary Tree</li> <li>56. Merge Intervals</li> <li>560. Subarray Sum Equals K</li> <li>561. Array Partition</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>563. Binary Tree Tilt</li> <li>564. Find the Closest Palindrome</li> <li>565. Array Nesting</li> <li>566. Reshape the Matrix</li> <li>567. Permutation in String</li> <li>568. Maximum Vacation Days</li> <li>569. Median Employee Salary</li> <li>57. Insert Interval</li> <li>570. Managers with at Least 5 Direct Reports</li> <li>571. Find Median Given Frequency of Numbers</li> <li>572. Subtree of Another Tree</li> <li>573. Squirrel Simulation</li> <li>574. Winning Candidate</li> <li>575. Distribute Candies</li> <li>576. Out of Boundary Paths</li> <li>577. Employee Bonus</li> <li>578. Get Highest Answer Rate Question</li> <li>579. Find Cumulative Salary of an Employee</li> <li>58. Length of Last Word</li> <li>580. Count Student Number in Departments</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>582. Kill Process</li> <li>583. Delete Operation for Two Strings</li> <li>584. Find Customer Referee</li> <li>585. Investments in 2016</li> <li>586. Customer Placing the Largest Number of Orders</li> <li>587. Erect the Fence</li> <li>588. Design In-Memory File System</li> <li>589. N-ary Tree Preorder Traversal</li> <li>59. Spiral Matrix II</li> <li>590. N-ary Tree Postorder Traversal</li> <li>591. Tag Validator</li> <li>592. Fraction Addition and Subtraction</li> <li>593. Valid Square</li> <li>594. Longest Harmonious Subsequence</li> <li>595. Big Countries</li> <li>596. Classes More Than 5 Students</li> <li>597. Friend Requests I: Overall Acceptance Rate</li> <li>598. Range Addition II</li> <li>599. Minimum Index Sum of Two Lists</li> <li>6. Zigzag Conversion</li> <li>60. Permutation Sequence</li> <li>600. Non-negative Integers without Consecutive Ones</li> <li>601. Human Traffic of Stadium</li> <li>602. Friend Requests II: Who Has the Most Friends</li> <li>603. Consecutive Available Seats</li> <li>604. Design Compressed String Iterator</li> <li>605. Can Place Flowers</li> <li>606. Construct String from Binary Tree</li> <li>607. Sales Person</li> <li>608. Tree Node</li> <li>609. Find Duplicate File in System</li> <li>61. Rotate List</li> <li>610. Triangle Judgement</li> <li>611. Valid Triangle Number</li> <li>612. Shortest Distance in a Plane</li> <li>613. Shortest Distance in a Line</li> <li>614. Second Degree Follower</li> <li>615. Average Salary: Departments VS Company</li> <li>616. Add Bold Tag in String</li> <li>617. Merge Two Binary Trees</li> <li>618. Students Report By Geography</li> <li>619. Biggest Single Number</li> <li>62. Unique Paths</li> <li>620. Not Boring Movies</li> <li>621. Task Scheduler</li> <li>622. Design Circular Queue</li> <li>623. Add One Row to Tree</li> <li>624. Maximum Distance in Arrays</li> <li>625. Minimum Factorization</li> <li>626. Exchange Seats</li> <li>627. Swap Salary</li> <li>628. Maximum Product of Three Numbers</li> <li>629. K Inverse Pairs Array</li> <li>63. Unique Paths II</li> <li>630. Course Schedule III</li> <li>631. Design Excel Sum Formula</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>633. Sum of Square Numbers</li> <li>634. Find the Derangement of An Array</li> <li>635. Design Log Storage System</li> <li>636. Exclusive Time of Functions</li> <li>637. Average of Levels in Binary Tree</li> <li>638. Shopping Offers</li> <li>639. Decode Ways II</li> <li>64. Minimum Path Sum</li> <li>640. Solve the Equation</li> <li>641. Design Circular Deque</li> <li>642. Design Search Autocomplete System</li> <li>643. Maximum Average Subarray I</li> <li>644. Maximum Average Subarray II</li> <li>645. Set Mismatch</li> <li>646. Maximum Length of Pair Chain</li> <li>647. Palindromic Substrings</li> <li>648. Replace Words</li> <li>649. Dota2 Senate</li> <li>65. Valid Number</li> <li>650. 2 Keys Keyboard</li> <li>651. 4 Keys Keyboard</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>654. Maximum Binary Tree</li> <li>655. Print Binary Tree</li> <li>656. Coin Path</li> <li>657. Robot Return to Origin</li> <li>658. Find K Closest Elements</li> <li>659. Split Array into Consecutive Subsequences</li> <li>66. Plus One</li> <li>660. Remove 9</li> <li>661. Image Smoother</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>664. Strange Printer</li> <li>665. Non-decreasing Array</li> <li>666. Path Sum IV</li> <li>667. Beautiful Arrangement II</li> <li>668. Kth Smallest Number in Multiplication Table</li> <li>669. Trim a Binary Search Tree</li> <li>67. Add Binary</li> <li>670. Maximum Swap</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>672. Bulb Switcher II</li> <li>673. Number of Longest Increasing Subsequence</li> <li>674. Longest Continuous Increasing Subsequence</li> <li>675. Cut Off Trees for Golf Event</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>678. Valid Parenthesis String</li> <li>679. 24 Game</li> <li>68. Text Justification</li> <li>680. Valid Palindrome II</li> <li>681. Next Closest Time</li> <li>682. Baseball Game</li> <li>683. K Empty Slots</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>686. Repeated String Match</li> <li>687. Longest Univalue Path</li> <li>688. Knight Probability in Chessboard</li> <li>689. Maximum Sum of 3 Non-Overlapping Subarrays</li> <li>69. Sqrt(x)</li> <li>690. Employee Importance</li> <li>691. Stickers to Spell Word</li> <li>692. Top K Frequent Words</li> <li>693. Binary Number with Alternating Bits</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>696. Count Binary Substrings</li> <li>697. Degree of an Array</li> <li>698. Partition to K Equal Sum Subsets</li> <li>699. Falling Squares</li> <li>7. Reverse Integer</li> <li>70. Climbing Stairs</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>703. Kth Largest Element in a Stream</li> <li>704. Binary Search</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>707. Design Linked List</li> <li>708. Insert into a Sorted Circular Linked List</li> <li>709. To Lower Case</li> <li>71. Simplify Path</li> <li>710. Random Pick with Blacklist</li> <li>711. Number of Distinct Islands II</li> <li>712. Minimum ASCII Delete Sum for Two Strings</li> <li>713. Subarray Product Less Than K</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>715. Range Module</li> <li>716. Max Stack</li> <li>717. 1-bit and 2-bit Characters</li> <li>718. Maximum Length of Repeated Subarray</li> <li>719. Find K-th Smallest Pair Distance</li> <li>72. Edit Distance</li> <li>720. Longest Word in Dictionary</li> <li>721. Accounts Merge</li> <li>722. Remove Comments</li> <li>723. Candy Crush</li> <li>724. Find Pivot Index</li> <li>725. Split Linked List in Parts</li> <li>726. Number of Atoms</li> <li>727. Minimum Window Subsequence</li> <li>728. Self Dividing Numbers</li> <li>729. My Calendar I</li> <li>73. Set Matrix Zeroes</li> <li>730. Count Different Palindromic Subsequences</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>733. Flood Fill</li> <li>734. Sentence Similarity</li> <li>736. Parse Lisp Expression</li> <li>737. Sentence Similarity II</li> <li>738. Monotone Increasing Digits</li> <li>739. Daily Temperatures</li> <li>74. Search a 2D Matrix</li> <li>740. Delete and Earn</li> <li>741. Cherry Pickup</li> <li>742. Closest Leaf in a Binary Tree</li> <li>743. Network Delay Time</li> <li>744. Find Smallest Letter Greater Than Target</li> <li>745. Prefix and Suffix Search</li> <li>746. Min Cost Climbing Stairs</li> <li>747. Largest Number At Least Twice of Others</li> <li>748. Shortest Completing Word</li> <li>749. Contain Virus</li> <li>75. Sort Colors</li> <li>750. Number Of Corner Rectangles</li> <li>751. IP to CIDR</li> <li>752. Open the Lock</li> <li>753. Cracking the Safe</li> <li>754. Reach a Number</li> <li>755. Pour Water</li> <li>756. Pyramid Transition Matrix</li> <li>757. Set Intersection Size At Least Two</li> <li>758. Bold Words in String</li> <li>759. Employee Free Time</li> <li>76. Minimum Window Substring</li> <li>760. Find Anagram Mappings</li> <li>761. Special Binary String</li> <li>762. Prime Number of Set Bits in Binary Representation</li> <li>763. Partition Labels</li> <li>764. Largest Plus Sign</li> <li>765. Couples Holding Hands</li> <li>766. Toeplitz Matrix</li> <li>767. Reorganize String</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>77. Combinations</li> <li>770. Basic Calculator IV</li> <li>771. Jewels and Stones</li> <li>772. Basic Calculator III</li> <li>773. Sliding Puzzle</li> <li>774. Minimize Max Distance to Gas Station</li> <li>775. Global and Local Inversions</li> <li>776. Split BST</li> <li>777. Swap Adjacent in LR String</li> <li>778. Swim in Rising Water</li> <li>779. K-th Symbol in Grammar</li> <li>78. Subsets</li> <li>780. Reaching Points</li> <li>781. Rabbits in Forest</li> <li>782. Transform to Chessboard</li> <li>783. Minimum Distance Between BST Nodes</li> <li>784. Letter Case Permutation</li> <li>785. Is Graph Bipartite?</li> <li>786. K-th Smallest Prime Fraction</li> <li>787. Cheapest Flights Within K Stops</li> <li>788. Rotated Digits</li> <li>789. Escape The Ghosts</li> <li>79. Word Search</li> <li>790. Domino and Tromino Tiling</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>793. Preimage Size of Factorial Zeroes Function</li> <li>794. Valid Tic-Tac-Toe State</li> <li>795. Number of Subarrays with Bounded Maximum</li> <li>796. Rotate String</li> <li>797. All Paths From Source to Target</li> <li>798. Smallest Rotation with Highest Score</li> <li>799. Champagne Tower</li> <li>8. String to Integer (atoi)</li> <li>80. Remove Duplicates from Sorted Array II</li> <li>800. Similar RGB Color</li> <li>801. Minimum Swaps To Make Sequences Increasing</li> <li>802. Find Eventual Safe States</li> <li>803. Bricks Falling When Hit</li> <li>804. Unique Morse Code Words</li> <li>805. Split Array With Same Average</li> <li>806. Number of Lines To Write String</li> <li>807. Max Increase to Keep City Skyline</li> <li>808. Soup Servings</li> <li>809. Expressive Words</li> <li>81. Search in Rotated Sorted Array II</li> <li>810. Chalkboard XOR Game</li> <li>811. Subdomain Visit Count</li> <li>812. Largest Triangle Area</li> <li>813. Largest Sum of Averages</li> <li>814. Binary Tree Pruning</li> <li>815. Bus Routes</li> <li>816. Ambiguous Coordinates</li> <li>817. Linked List Components</li> <li>818. Race Car</li> <li>819. Most Common Word</li> <li>82. Remove Duplicates from Sorted List II</li> <li>820. Short Encoding of Words</li> <li>821. Shortest Distance to a Character</li> <li>822. Card Flipping Game</li> <li>823. Binary Trees With Factors</li> <li>824. Goat Latin</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>827. Making A Large Island</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>829. Consecutive Numbers Sum</li> <li>83. Remove Duplicates from Sorted List</li> <li>830. Positions of Large Groups</li> <li>831. Masking Personal Information</li> <li>832. Flipping an Image</li> <li>833. Find And Replace in String</li> <li>834. Sum of Distances in Tree</li> <li>835. Image Overlap</li> <li>836. Rectangle Overlap</li> <li>837. New 21 Game</li> <li>838. Push Dominoes</li> <li>839. Similar String Groups</li> <li>84. Largest Rectangle in Histogram</li> <li>840. Magic Squares In Grid</li> <li>841. Keys and Rooms</li> <li>842. Split Array into Fibonacci Sequence</li> <li>843. Guess the Word</li> <li>844. Backspace String Compare</li> <li>845. Longest Mountain in Array</li> <li>846. Hand of Straights</li> <li>847. Shortest Path Visiting All Nodes</li> <li>848. Shifting Letters</li> <li>849. Maximize Distance to Closest Person</li> <li>85. Maximal Rectangle</li> <li>850. Rectangle Area II</li> <li>851. Loud and Rich</li> <li>852. Peak Index in a Mountain Array</li> <li>853. Car Fleet</li> <li>854. K-Similar Strings</li> <li>855. Exam Room</li> <li>856. Score of Parentheses</li> <li>857. Minimum Cost to Hire K Workers</li> <li>858. Mirror Reflection</li> <li>859. Buddy Strings</li> <li>86. Partition List</li> <li>860. Lemonade Change</li> <li>861. Score After Flipping Matrix</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>864. Shortest Path to Get All Keys</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>866. Prime Palindrome</li> <li>867. Transpose Matrix</li> <li>868. Binary Gap</li> <li>869. Reordered Power of 2</li> <li>87. Scramble String</li> <li>870. Advantage Shuffle</li> <li>871. Minimum Number of Refueling Stops</li> <li>872. Leaf-Similar Trees</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>874. Walking Robot Simulation</li> <li>875. Koko Eating Bananas</li> <li>876. Middle of the Linked List</li> <li>877. Stone Game</li> <li>878. Nth Magical Number</li> <li>879. Profitable Schemes</li> <li>88. Merge Sorted Array</li> <li>880. Decoded String at Index</li> <li>881. Boats to Save People</li> <li>882. Reachable Nodes In Subdivided Graph</li> <li>883. Projection Area of 3D Shapes</li> <li>884. Uncommon Words from Two Sentences</li> <li>885. Spiral Matrix III</li> <li>886. Possible Bipartition</li> <li>887. Super Egg Drop</li> <li>888. Fair Candy Swap</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>89. Gray Code</li> <li>890. Find and Replace Pattern</li> <li>891. Sum of Subsequence Widths</li> <li>892. Surface Area of 3D Shapes</li> <li>893. Groups of Special-Equivalent Strings</li> <li>894. All Possible Full Binary Trees</li> <li>895. Maximum Frequency Stack</li> <li>896. Monotonic Array</li> <li>897. Increasing Order Search Tree</li> <li>898. Bitwise ORs of Subarrays</li> <li>899. Orderly Queue</li> <li>9. Palindrome Number</li> <li>90. Subsets II</li> <li>900. RLE Iterator</li> <li>901. Online Stock Span</li> <li>902. Numbers At Most N Given Digit Set</li> <li>903. Valid Permutations for DI Sequence</li> <li>904. Fruit Into Baskets</li> <li>905. Sort Array By Parity</li> <li>906. Super Palindromes</li> <li>907. Sum of Subarray Minimums</li> <li>908. Smallest Range I</li> <li>909. Snakes and Ladders</li> <li>91. Decode Ways</li> <li>910. Smallest Range II</li> <li>911. Online Election</li> <li>912. Sort an Array</li> <li>913. Cat and Mouse</li> <li>914. X of a Kind in a Deck of Cards</li> <li>915. Partition Array into Disjoint Intervals</li> <li>916. Word Subsets</li> <li>917. Reverse Only Letters</li> <li>918. Maximum Sum Circular Subarray</li> <li>919. Complete Binary Tree Inserter</li> <li>92. Reverse Linked List II</li> <li>920. Number of Music Playlists</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>924. Minimize Malware Spread</li> <li>925. Long Pressed Name</li> <li>926. Flip String to Monotone Increasing</li> <li>927. Three Equal Parts</li> <li>928. Minimize Malware Spread II</li> <li>929. Unique Email Addresses</li> <li>93. Restore IP Addresses</li> <li>930. Binary Subarrays With Sum</li> <li>931. Minimum Falling Path Sum</li> <li>932. Beautiful Array</li> <li>933. Number of Recent Calls</li> <li>934. Shortest Bridge</li> <li>935. Knight Dialer</li> <li>936. Stamping The Sequence</li> <li>937. Reorder Data in Log Files</li> <li>938. Range Sum of BST</li> <li>939. Minimum Area Rectangle</li> <li>94. Binary Tree Inorder Traversal</li> <li>940. Distinct Subsequences II</li> <li>941. Valid Mountain Array</li> <li>942. DI String Match</li> <li>943. Find the Shortest Superstring</li> <li>944. Delete Columns to Make Sorted</li> <li>945. Minimum Increment to Make Array Unique</li> <li>946. Validate Stack Sequences</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>948. Bag of Tokens</li> <li>949. Largest Time for Given Digits</li> <li>95. Unique Binary Search Trees II</li> <li>950. Reveal Cards In Increasing Order</li> <li>951. Flip Equivalent Binary Trees</li> <li>952. Largest Component Size by Common Factor</li> <li>953. Verifying an Alien Dictionary</li> <li>954. Array of Doubled Pairs</li> <li>955. Delete Columns to Make Sorted II</li> <li>956. Tallest Billboard</li> <li>957. Prison Cells After N Days</li> <li>958. Check Completeness of a Binary Tree</li> <li>959. Regions Cut By Slashes</li> <li>96. Unique Binary Search Trees</li> <li>960. Delete Columns to Make Sorted III</li> <li>961. N-Repeated Element in Size 2N Array</li> <li>962. Maximum Width Ramp</li> <li>963. Minimum Area Rectangle II</li> <li>964. Least Operators to Express Number</li> <li>965. Univalued Binary Tree</li> <li>966. Vowel Spellchecker</li> <li>967. Numbers With Same Consecutive Differences</li> <li>968. Binary Tree Cameras</li> <li>969. Pancake Sorting</li> <li>97. Interleaving String</li> <li>970. Powerful Integers</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>972. Equal Rational Numbers</li> <li>973. K Closest Points to Origin</li> <li>974. Subarray Sums Divisible by K</li> <li>975. Odd Even Jump</li> <li>976. Largest Perimeter Triangle</li> <li>977. Squares of a Sorted Array</li> <li>978. Longest Turbulent Subarray</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>981. Time Based Key-Value Store</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>983. Minimum Cost For Tickets</li> <li>984. String Without AAA or BBB</li> <li>985. Sum of Even Numbers After Queries</li> <li>986. Interval List Intersections</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>989. Add to Array-Form of Integer</li> <li>99. Recover Binary Search Tree</li> <li>990. Satisfiability of Equality Equations</li> <li>991. Broken Calculator</li> <li>992. Subarrays with K Different Integers</li> <li>993. Cousins in Binary Tree</li> <li>994. Rotting Oranges</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> <li>996. Number of Squareful Arrays</li> <li>997. Find the Town Judge</li> <li>998. Maximum Binary Tree II</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"useful/","title":"Cheat Sheet","text":""},{"location":"useful/#module-operation","title":"Module Operation","text":"<ul> <li>2400</li> </ul>"},{"location":"useful/#exponential","title":"Exponential","text":"<pre><code>unsigned long long int expo(unsigned long long int x, int y, int p) {\nunsigned long long int res = 1;\nx %= p;\nwhile (y &gt; 0) {\nif (y &amp; 1)\nres = (res * x) % p;\ny &gt;&gt;= 1;\nx = (x * x) % p;\n}\nreturn res;\n}\n</code></pre>"},{"location":"useful/#inverse","title":"Inverse","text":"<pre><code>int inverse(int n, int p) {\nreturn expo(n, p-2, p);\n}\n</code></pre>"},{"location":"useful/#number-of-combination","title":"Number of Combination","text":"<pre><code>int ncr(int n, int k) {\nif (n &lt;= 1) return 1;\nif (n - k &lt; k) k = n - k;\nunsigned long long int res = 1;\nfor (int i = 1; i &lt;= k; i++) {\nres = (res * (n - i + 1)) % mod;\nres = (res * inverse(i,mod)) % mod;  // (res / i) % mod;\n}\nreturn res;\n}\n</code></pre>"},{"location":"leetcode/1-two-sum/","title":"1. Two Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/10-regular-expression-matching/","title":"10. Regular Expression Matching","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Recursion","Unsolved"]},{"location":"leetcode/100-same-tree/","title":"100. Same Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1000-minimum-cost-to-merge-stones/","title":"1000. Minimum Cost to Merge Stones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1001-grid-illumination/","title":"1001. Grid Illumination","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1002-find-common-characters/","title":"1002. Find Common Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/1003-check-if-word-is-valid-after-substitutions/","title":"1003. Check If Word Is Valid After Substitutions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1004-max-consecutive-ones-iii/","title":"1004. Max Consecutive Ones III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/1005-maximize-sum-of-array-after-k-negations/","title":"1005. Maximize Sum Of Array After K Negations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1006-clumsy-factorial/","title":"1006. Clumsy Factorial","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Stack","Simulation","Unsolved"]},{"location":"leetcode/1007-minimum-domino-rotations-for-equal-row/","title":"1007. Minimum Domino Rotations For Equal Row","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1008-construct-binary-search-tree-from-preorder-traversal/","title":"1008. Construct Binary Search Tree from Preorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Tree","Binary Search Tree","Monotonic Stack","Binary Tree","Unsolved"]},{"location":"leetcode/1009-complement-of-base-10-integer/","title":"1009. Complement of Base 10 Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/101-symmetric-tree/","title":"101. Symmetric Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1010-pairs-of-songs-with-total-durations-divisible-by-60/","title":"1010. Pairs of Songs With Total Durations Divisible by 60","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/1011-capacity-to-ship-packages-within-d-days/","title":"1011. Capacity To Ship Packages Within D Days","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1012-numbers-with-repeated-digits/","title":"1012. Numbers With Repeated Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/1013-partition-array-into-three-parts-with-equal-sum/","title":"1013. Partition Array Into Three Parts With Equal Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1014-best-sightseeing-pair/","title":"1014. Best Sightseeing Pair","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1015-smallest-integer-divisible-by-k/","title":"1015. Smallest Integer Divisible by K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Unsolved"]},{"location":"leetcode/1016-binary-string-with-substrings-representing-1-to-n/","title":"1016. Binary String With Substrings Representing 1 To N","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1017-convert-to-base-2/","title":"1017. Convert to Base -2","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1018-binary-prefix-divisible-by-5/","title":"1018. Binary Prefix Divisible By 5","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1019-next-greater-node-in-linked-list/","title":"1019. Next Greater Node In Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/102-binary-tree-level-order-traversal/","title":"102. Binary Tree Level Order Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1020-number-of-enclaves/","title":"1020. Number of Enclaves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/1021-remove-outermost-parentheses/","title":"1021. Remove Outermost Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1022-sum-of-root-to-leaf-binary-numbers/","title":"1022. Sum of Root To Leaf Binary Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1023-camelcase-matching/","title":"1023. Camelcase Matching","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Trie","String Matching","Unsolved"]},{"location":"leetcode/1024-video-stitching/","title":"1024. Video Stitching","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1025-divisor-game/","title":"1025. Divisor Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Brainteaser","Game Theory","Unsolved"]},{"location":"leetcode/1026-maximum-difference-between-node-and-ancestor/","title":"1026. Maximum Difference Between Node and Ancestor","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1027-longest-arithmetic-subsequence/","title":"1027. Longest Arithmetic Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/1028-recover-a-tree-from-preorder-traversal/","title":"1028. Recover a Tree From Preorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1029-two-city-scheduling/","title":"1029. Two City Scheduling","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/103-binary-tree-zigzag-level-order-traversal/","title":"103. Binary Tree Zigzag Level Order Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1030-matrix-cells-in-distance-order/","title":"1030. Matrix Cells in Distance Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Sorting","Matrix","Unsolved"]},{"location":"leetcode/1031-maximum-sum-of-two-non-overlapping-subarrays/","title":"1031. Maximum Sum of Two Non-Overlapping Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sliding Window","Unsolved"]},{"location":"leetcode/1032-stream-of-characters/","title":"1032. Stream of Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Design","Trie","Data Stream","Unsolved"]},{"location":"leetcode/1033-moving-stones-until-consecutive/","title":"1033. Moving Stones Until Consecutive","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Brainteaser","Unsolved"]},{"location":"leetcode/1034-coloring-a-border/","title":"1034. Coloring A Border","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1035-uncrossed-lines/","title":"1035. Uncrossed Lines","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1036-escape-a-large-maze/","title":"1036. Escape a Large Maze","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1037-valid-boomerang/","title":"1037. Valid Boomerang","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/1038-binary-search-tree-to-greater-sum-tree/","title":"1038. Binary Search Tree to Greater Sum Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1039-minimum-score-triangulation-of-polygon/","title":"1039. Minimum Score Triangulation of Polygon","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/104-maximum-depth-of-binary-tree/","title":"104. Maximum Depth of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1040-moving-stones-until-consecutive-ii/","title":"1040. Moving Stones Until Consecutive II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/1041-robot-bounded-in-circle/","title":"1041. Robot Bounded In Circle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/1042-flower-planting-with-no-adjacent/","title":"1042. Flower Planting With No Adjacent","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/1043-partition-array-for-maximum-sum/","title":"1043. Partition Array for Maximum Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1044-longest-duplicate-substring/","title":"1044. Longest Duplicate Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Binary Search","Sliding Window","Rolling Hash","Suffix Array","Hash Function","Unsolved"]},{"location":"leetcode/1045-customers-who-bought-all-products/","title":"1045. Customers Who Bought All Products","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1046-last-stone-weight/","title":"1046. Last Stone Weight","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1047-remove-all-adjacent-duplicates-in-string/","title":"1047. Remove All Adjacent Duplicates In String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1048-longest-string-chain/","title":"1048. Longest String Chain","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1049-last-stone-weight-ii/","title":"1049. Last Stone Weight II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/105-construct-binary-tree-from-preorder-and-inorder-traversal/","title":"105. Construct Binary Tree from Preorder and Inorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Divide and Conquer","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1050-actors-and-directors-who-cooperated-at-least-three-times/","title":"1050. Actors and Directors Who Cooperated At Least Three Times","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1051-height-checker/","title":"1051. Height Checker","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Counting Sort","Unsolved"]},{"location":"leetcode/1052-grumpy-bookstore-owner/","title":"1052. Grumpy Bookstore Owner","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/1053-previous-permutation-with-one-swap/","title":"1053. Previous Permutation With One Swap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1054-distant-barcodes/","title":"1054. Distant Barcodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Heap (Priority Queue)","Counting","Unsolved"]},{"location":"leetcode/1055-shortest-way-to-form-string/","title":"1055. Shortest Way to Form String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/1056-confusing-number/","title":"1056. Confusing Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1057-campus-bikes/","title":"1057. Campus Bikes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1058-minimize-rounding-error-to-meet-target/","title":"1058. Minimize Rounding Error to Meet Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Greedy","Unsolved"]},{"location":"leetcode/1059-all-paths-from-source-lead-to-destination/","title":"1059. All Paths from Source Lead to Destination","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Unsolved"]},{"location":"leetcode/106-construct-binary-tree-from-inorder-and-postorder-traversal/","title":"106. Construct Binary Tree from Inorder and Postorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Divide and Conquer","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1060-missing-element-in-sorted-array/","title":"1060. Missing Element in Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1061-lexicographically-smallest-equivalent-string/","title":"1061. Lexicographically Smallest Equivalent String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Union Find","Unsolved"]},{"location":"leetcode/1062-longest-repeating-substring/","title":"1062. Longest Repeating Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Binary Search","Dynamic Programming","Rolling Hash","Suffix Array","Hash Function","Unsolved"]},{"location":"leetcode/1063-number-of-valid-subarrays/","title":"1063. Number of Valid Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1064-fixed-point/","title":"1064. Fixed Point","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1065-index-pairs-of-a-string/","title":"1065. Index Pairs of a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Trie","Sorting","Unsolved"]},{"location":"leetcode/1066-campus-bikes-ii/","title":"1066. Campus Bikes II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1067-digit-count-in-range/","title":"1067. Digit Count in Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/1068-product-sales-analysis-i/","title":"1068. Product Sales Analysis I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1069-product-sales-analysis-ii/","title":"1069. Product Sales Analysis II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/107-binary-tree-level-order-traversal-ii/","title":"107. Binary Tree Level Order Traversal II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1070-product-sales-analysis-iii/","title":"1070. Product Sales Analysis III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1071-greatest-common-divisor-of-strings/","title":"1071. Greatest Common Divisor of Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1072-flip-columns-for-maximum-number-of-equal-rows/","title":"1072. Flip Columns For Maximum Number of Equal Rows","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/1073-adding-two-negabinary-numbers/","title":"1073. Adding Two Negabinary Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1074-number-of-submatrices-that-sum-to-target/","title":"1074. Number of Submatrices That Sum to Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/1075-project-employees-i/","title":"1075. Project Employees I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1076-project-employees-ii/","title":"1076. Project Employees II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1077-project-employees-iii/","title":"1077. Project Employees III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1078-occurrences-after-bigram/","title":"1078. Occurrences After Bigram","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1079-letter-tile-possibilities/","title":"1079. Letter Tile Possibilities","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Backtracking","Counting","Unsolved"]},{"location":"leetcode/108-convert-sorted-array-to-binary-search-tree/","title":"108. Convert Sorted Array to Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1080-insufficient-nodes-in-root-to-leaf-paths/","title":"1080. Insufficient Nodes in Root to Leaf Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1081-smallest-subsequence-of-distinct-characters/","title":"1081. Smallest Subsequence of Distinct Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/1082-sales-analysis-i/","title":"1082. Sales Analysis I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1083-sales-analysis-ii/","title":"1083. Sales Analysis II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1084-sales-analysis-iii/","title":"1084. Sales Analysis III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1085-sum-of-digits-in-the-minimum-number/","title":"1085. Sum of Digits in the Minimum Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1086-high-five/","title":"1086. High Five","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/1087-brace-expansion/","title":"1087. Brace Expansion","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Breadth-First Search","Unsolved"]},{"location":"leetcode/1088-confusing-number-ii/","title":"1088. Confusing Number II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Backtracking","Unsolved"]},{"location":"leetcode/1089-duplicate-zeros/","title":"1089. Duplicate Zeros","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/109-convert-sorted-list-to-binary-search-tree/","title":"109. Convert Sorted List to Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Divide and Conquer","Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1090-largest-values-from-labels/","title":"1090. Largest Values From Labels","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Counting","Unsolved"]},{"location":"leetcode/1091-shortest-path-in-binary-matrix/","title":"1091. Shortest Path in Binary Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1092-shortest-common-supersequence/","title":"1092. Shortest Common Supersequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1093-statistics-from-a-large-sample/","title":"1093. Statistics from a Large Sample","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Probability and Statistics","Unsolved"]},{"location":"leetcode/1094-car-pooling/","title":"1094. Car Pooling","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Simulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1095-find-in-mountain-array/","title":"1095. Find in Mountain Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Interactive","Unsolved"]},{"location":"leetcode/1096-brace-expansion-ii/","title":"1096. Brace Expansion II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Stack","Breadth-First Search","Unsolved"]},{"location":"leetcode/1097-game-play-analysis-v/","title":"1097. Game Play Analysis V","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1098-unpopular-books/","title":"1098. Unpopular Books","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1099-two-sum-less-than-k/","title":"1099. Two Sum Less Than K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/11-container-with-most-water/","title":"11. Container With Most Water","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Unsolved"]},{"location":"leetcode/110-balanced-binary-tree/","title":"110. Balanced Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1100-find-k-length-substrings-with-no-repeated-characters/","title":"1100. Find K-Length Substrings With No Repeated Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/1101-the-earliest-moment-when-everyone-become-friends/","title":"1101. The Earliest Moment When Everyone Become Friends","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Union Find","Unsolved"]},{"location":"leetcode/1102-path-with-maximum-minimum-value/","title":"1102. Path With Maximum Minimum Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/1103-distribute-candies-to-people/","title":"1103. Distribute Candies to People","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Unsolved"]},{"location":"leetcode/1104-path-in-zigzag-labelled-binary-tree/","title":"1104. Path In Zigzag Labelled Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1105-filling-bookcase-shelves/","title":"1105. Filling Bookcase Shelves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1106-parsing-a-boolean-expression/","title":"1106. Parsing A Boolean Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Recursion","Unsolved"]},{"location":"leetcode/1107-new-users-daily-count/","title":"1107. New Users Daily Count","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1108-defanging-an-ip-address/","title":"1108. Defanging an IP Address","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1109-corporate-flight-bookings/","title":"1109. Corporate Flight Bookings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/111-minimum-depth-of-binary-tree/","title":"111. Minimum Depth of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1110-delete-nodes-and-return-forest/","title":"1110. Delete Nodes And Return Forest","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1111-maximum-nesting-depth-of-two-valid-parentheses-strings/","title":"1111. Maximum Nesting Depth of Two Valid Parentheses Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1112-highest-grade-for-each-student/","title":"1112. Highest Grade For Each Student","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1113-reported-posts/","title":"1113. Reported Posts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1114-print-in-order/","title":"1114. Print in Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1115-print-foobar-alternately/","title":"1115. Print FooBar Alternately","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1116-print-zero-even-odd/","title":"1116. Print Zero Even Odd","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1117-building-h2o/","title":"1117. Building H2O","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1118-number-of-days-in-a-month/","title":"1118. Number of Days in a Month","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1119-remove-vowels-from-a-string/","title":"1119. Remove Vowels from a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/112-path-sum/","title":"112. Path Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1120-maximum-average-subtree/","title":"1120. Maximum Average Subtree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1121-divide-array-into-increasing-sequences/","title":"1121. Divide Array Into Increasing Sequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1122-relative-sort-array/","title":"1122. Relative Sort Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Counting Sort","Unsolved"]},{"location":"leetcode/1123-lowest-common-ancestor-of-deepest-leaves/","title":"1123. Lowest Common Ancestor of Deepest Leaves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1124-longest-well-performing-interval/","title":"1124. Longest Well-Performing Interval","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Stack","Monotonic Stack","Prefix Sum","Unsolved"]},{"location":"leetcode/1125-smallest-sufficient-team/","title":"1125. Smallest Sufficient Team","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1126-active-businesses/","title":"1126. Active Businesses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1127-user-purchase-platform/","title":"1127. User Purchase Platform","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1128-number-of-equivalent-domino-pairs/","title":"1128. Number of Equivalent Domino Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/1129-shortest-path-with-alternating-colors/","title":"1129. Shortest Path with Alternating Colors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/113-path-sum-ii/","title":"113. Path Sum II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1130-minimum-cost-tree-from-leaf-values/","title":"1130. Minimum Cost Tree From Leaf Values","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/1131-maximum-of-absolute-value-expression/","title":"1131. Maximum of Absolute Value Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1132-reported-posts-ii/","title":"1132. Reported Posts II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1133-largest-unique-number/","title":"1133. Largest Unique Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/1134-armstrong-number/","title":"1134. Armstrong Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1135-connecting-cities-with-minimum-cost/","title":"1135. Connecting Cities With Minimum Cost","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Union Find","Graph","Heap (Priority Queue)","Minimum Spanning Tree","Unsolved"]},{"location":"leetcode/1136-parallel-courses/","title":"1136. Parallel Courses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Topological Sort","Unsolved"]},{"location":"leetcode/1137-n-th-tribonacci-number/","title":"1137. N-th Tribonacci Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/1138-alphabet-board-path/","title":"1138. Alphabet Board Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1139-largest-1-bordered-square/","title":"1139. Largest 1-Bordered Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/114-flatten-binary-tree-to-linked-list/","title":"114. Flatten Binary Tree to Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Stack","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1140-stone-game-ii/","title":"1140. Stone Game II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/1141-user-activity-for-the-past-30-days-i/","title":"1141. User Activity for the Past 30 Days I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1142-user-activity-for-the-past-30-days-ii/","title":"1142. User Activity for the Past 30 Days II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1143-longest-common-subsequence/","title":"1143. Longest Common Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1144-decrease-elements-to-make-array-zigzag/","title":"1144. Decrease Elements To Make Array Zigzag","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1145-binary-tree-coloring-game/","title":"1145. Binary Tree Coloring Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1146-snapshot-array/","title":"1146. Snapshot Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Design","Unsolved"]},{"location":"leetcode/1147-longest-chunked-palindrome-decomposition/","title":"1147. Longest Chunked Palindrome Decomposition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Dynamic Programming","Greedy","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/1148-article-views-i/","title":"1148. Article Views I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1149-article-views-ii/","title":"1149. Article Views II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/115-distinct-subsequences/","title":"115. Distinct Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1150-check-if-a-number-is-majority-element-in-a-sorted-array/","title":"1150. Check If a Number Is Majority Element in a Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1151-minimum-swaps-to-group-all-1s-together/","title":"1151. Minimum Swaps to Group All 1's Together","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/1152-analyze-user-website-visit-pattern/","title":"1152. Analyze User Website Visit Pattern","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/1153-string-transforms-into-another-string/","title":"1153. String Transforms Into Another String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1154-day-of-the-year/","title":"1154. Day of the Year","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1155-number-of-dice-rolls-with-target-sum/","title":"1155. Number of Dice Rolls With Target Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/1156-swap-for-longest-repeated-character-substring/","title":"1156. Swap For Longest Repeated Character Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sliding Window","Unsolved"]},{"location":"leetcode/1157-online-majority-element-in-subarray/","title":"1157. Online Majority Element In Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Design","Binary Indexed Tree","Segment Tree","Unsolved"]},{"location":"leetcode/1158-market-analysis-i/","title":"1158. Market Analysis I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1159-market-analysis-ii/","title":"1159. Market Analysis II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/116-populating-next-right-pointers-in-each-node/","title":"116. Populating Next Right Pointers in Each Node","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1160-find-words-that-can-be-formed-by-characters/","title":"1160. Find Words That Can Be Formed by Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/1161-maximum-level-sum-of-a-binary-tree/","title":"1161. Maximum Level Sum of a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1162-as-far-from-land-as-possible/","title":"1162. As Far from Land as Possible","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1163-last-substring-in-lexicographical-order/","title":"1163. Last Substring in Lexicographical Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1164-product-price-at-a-given-date/","title":"1164. Product Price at a Given Date","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1165-single-row-keyboard/","title":"1165. Single-Row Keyboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1166-design-file-system/","title":"1166. Design File System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/1167-minimum-cost-to-connect-sticks/","title":"1167. Minimum Cost to Connect Sticks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1168-optimize-water-distribution-in-a-village/","title":"1168. Optimize Water Distribution in a Village","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Union Find","Graph","Minimum Spanning Tree","Unsolved"]},{"location":"leetcode/1169-invalid-transactions/","title":"1169. Invalid Transactions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/117-populating-next-right-pointers-in-each-node-ii/","title":"117. Populating Next Right Pointers in Each Node II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1170-compare-strings-by-frequency-of-the-smallest-character/","title":"1170. Compare Strings by Frequency of the Smallest Character","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1171-remove-zero-sum-consecutive-nodes-from-linked-list/","title":"1171. Remove Zero Sum Consecutive Nodes from Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Unsolved"]},{"location":"leetcode/1172-dinner-plate-stacks/","title":"1172. Dinner Plate Stacks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Stack","Design","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1173-immediate-food-delivery-i/","title":"1173. Immediate Food Delivery I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1174-immediate-food-delivery-ii/","title":"1174. Immediate Food Delivery II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1175-prime-arrangements/","title":"1175. Prime Arrangements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1176-diet-plan-performance/","title":"1176. Diet Plan Performance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/1177-can-make-palindrome-from-substring/","title":"1177. Can Make Palindrome from Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1178-number-of-valid-words-for-each-puzzle/","title":"1178. Number of Valid Words for Each Puzzle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Bit Manipulation","Trie","Unsolved"]},{"location":"leetcode/1179-reformat-department-table/","title":"1179. Reformat Department Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/118-pascals-triangle/","title":"118. Pascal's Triangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1180-count-substrings-with-only-one-distinct-letter/","title":"1180. Count Substrings with Only One Distinct Letter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1181-before-and-after-puzzle/","title":"1181. Before and After Puzzle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/1182-shortest-distance-to-target-color/","title":"1182. Shortest Distance to Target Color","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/1183-maximum-number-of-ones/","title":"1183. Maximum Number of Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1184-distance-between-bus-stops/","title":"1184. Distance Between Bus Stops","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1185-day-of-the-week/","title":"1185. Day of the Week","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1186-maximum-subarray-sum-with-one-deletion/","title":"1186. Maximum Subarray Sum with One Deletion","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1187-make-array-strictly-increasing/","title":"1187. Make Array Strictly Increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/1188-design-bounded-blocking-queue/","title":"1188. Design Bounded Blocking Queue","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1189-maximum-number-of-balloons/","title":"1189. Maximum Number of Balloons","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/119-pascals-triangle-ii/","title":"119. Pascal's Triangle II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1190-reverse-substrings-between-each-pair-of-parentheses/","title":"1190. Reverse Substrings Between Each Pair of Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1191-k-concatenation-maximum-sum/","title":"1191. K-Concatenation Maximum Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1192-critical-connections-in-a-network/","title":"1192. Critical Connections in a Network","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Biconnected Component","Unsolved"]},{"location":"leetcode/1193-monthly-transactions-i/","title":"1193. Monthly Transactions I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1194-tournament-winners/","title":"1194. Tournament Winners","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1195-fizz-buzz-multithreaded/","title":"1195. Fizz Buzz Multithreaded","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1196-how-many-apples-can-you-put-into-the-basket/","title":"1196. How Many Apples Can You Put into the Basket","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1197-minimum-knight-moves/","title":"1197. Minimum Knight Moves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Breadth-First Search","Unsolved"]},{"location":"leetcode/1198-find-smallest-common-element-in-all-rows/","title":"1198. Find Smallest Common Element in All Rows","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Matrix","Counting","Unsolved"]},{"location":"leetcode/1199-minimum-time-to-build-blocks/","title":"1199. Minimum Time to Build Blocks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/12-integer-to-roman/","title":"12. Integer to Roman","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Unsolved"]},{"location":"leetcode/120-triangle/","title":"120. Triangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1200-minimum-absolute-difference/","title":"1200. Minimum Absolute Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1201-ugly-number-iii/","title":"1201. Ugly Number III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Number Theory","Unsolved"]},{"location":"leetcode/1202-smallest-string-with-swaps/","title":"1202. Smallest String With Swaps","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Depth-First Search","Breadth-First Search","Union Find","Unsolved"]},{"location":"leetcode/1203-sort-items-by-groups-respecting-dependencies/","title":"1203. Sort Items by Groups Respecting Dependencies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/1204-last-person-to-fit-in-the-bus/","title":"1204. Last Person to Fit in the Bus","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1205-monthly-transactions-ii/","title":"1205. Monthly Transactions II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1206-design-skiplist/","title":"1206. Design Skiplist","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Design","Unsolved"]},{"location":"leetcode/1207-unique-number-of-occurrences/","title":"1207. Unique Number of Occurrences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1208-get-equal-substrings-within-budget/","title":"1208. Get Equal Substrings Within Budget","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/1209-remove-all-adjacent-duplicates-in-string-ii/","title":"1209. Remove All Adjacent Duplicates in String II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/121-best-time-to-buy-and-sell-stock/","title":"121. Best Time to Buy and Sell Stock","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1210-minimum-moves-to-reach-target-with-rotations/","title":"1210. Minimum Moves to Reach Target with Rotations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1211-queries-quality-and-percentage/","title":"1211. Queries Quality and Percentage","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1212-team-scores-in-football-tournament/","title":"1212. Team Scores in Football Tournament","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1213-intersection-of-three-sorted-arrays/","title":"1213. Intersection of Three Sorted Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Counting","Unsolved"]},{"location":"leetcode/1214-two-sum-bsts/","title":"1214. Two Sum BSTs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","Binary Search","Stack","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1215-stepping-numbers/","title":"1215. Stepping Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Breadth-First Search","Unsolved"]},{"location":"leetcode/1216-valid-palindrome-iii/","title":"1216. Valid Palindrome III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1217-minimum-cost-to-move-chips-to-the-same-position/","title":"1217. Minimum Cost to Move Chips to The Same Position","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Unsolved"]},{"location":"leetcode/1218-longest-arithmetic-subsequence-of-given-difference/","title":"1218. Longest Arithmetic Subsequence of Given Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Dynamic Programming","Unsolved"]},{"location":"leetcode/1219-path-with-maximum-gold/","title":"1219. Path with Maximum Gold","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Matrix","Unsolved"]},{"location":"leetcode/122-best-time-to-buy-and-sell-stock-ii/","title":"122. Best Time to Buy and Sell Stock II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1220-count-vowels-permutation/","title":"1220. Count Vowels Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/1221-split-a-string-in-balanced-strings/","title":"1221. Split a String in Balanced Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Counting","Unsolved"]},{"location":"leetcode/1222-queens-that-can-attack-the-king/","title":"1222. Queens That Can Attack the King","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/1223-dice-roll-simulation/","title":"1223. Dice Roll Simulation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1224-maximum-equal-frequency/","title":"1224. Maximum Equal Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1225-report-contiguous-dates/","title":"1225. Report Contiguous Dates","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1226-the-dining-philosophers/","title":"1226. The Dining Philosophers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/1227-airplane-seat-assignment-probability/","title":"1227. Airplane Seat Assignment Probability","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Brainteaser","Probability and Statistics","Unsolved"]},{"location":"leetcode/1228-missing-number-in-arithmetic-progression/","title":"1228. Missing Number In Arithmetic Progression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1229-meeting-scheduler/","title":"1229. Meeting Scheduler","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/123-best-time-to-buy-and-sell-stock-iii/","title":"123. Best Time to Buy and Sell Stock III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1230-toss-strange-coins/","title":"1230. Toss Strange Coins","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Probability and Statistics","Unsolved"]},{"location":"leetcode/1231-divide-chocolate/","title":"1231. Divide Chocolate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1232-check-if-it-is-a-straight-line/","title":"1232. Check If It Is a Straight Line","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/1233-remove-sub-folders-from-the-filesystem/","title":"1233. Remove Sub-Folders from the Filesystem","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Trie","Unsolved"]},{"location":"leetcode/1234-replace-the-substring-for-balanced-string/","title":"1234. Replace the Substring for Balanced String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sliding Window","Unsolved"]},{"location":"leetcode/1235-maximum-profit-in-job-scheduling/","title":"1235. Maximum Profit in Job Scheduling","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/1236-web-crawler/","title":"1236. Web Crawler","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Depth-First Search","Breadth-First Search","Interactive","Unsolved"]},{"location":"leetcode/1237-find-positive-integer-solution-for-a-given-equation/","title":"1237. Find Positive Integer Solution for a Given Equation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Two Pointers","Binary Search","Interactive","Unsolved"]},{"location":"leetcode/1238-circular-permutation-in-binary-representation/","title":"1238. Circular Permutation in Binary Representation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/1239-maximum-length-of-a-concatenated-string-with-unique-characters/","title":"1239. Maximum Length of a Concatenated String with Unique Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/124-binary-tree-maximum-path-sum/","title":"124. Binary Tree Maximum Path Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1240-tiling-a-rectangle-with-the-fewest-squares/","title":"1240. Tiling a Rectangle with the Fewest Squares","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/1241-number-of-comments-per-post/","title":"1241. Number of Comments per Post","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1242-web-crawler-multithreaded/","title":"1242. Web Crawler Multithreaded","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Concurrency","Unsolved"]},{"location":"leetcode/1243-array-transformation/","title":"1243. Array Transformation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/1244-design-a-leaderboard/","title":"1244. Design A Leaderboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Sorting","Unsolved"]},{"location":"leetcode/1245-tree-diameter/","title":"1245. Tree Diameter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/1246-palindrome-removal/","title":"1246. Palindrome Removal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1247-minimum-swaps-to-make-strings-equal/","title":"1247. Minimum Swaps to Make Strings Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Greedy","Unsolved"]},{"location":"leetcode/1248-count-number-of-nice-subarrays/","title":"1248. Count Number of Nice Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Sliding Window","Unsolved"]},{"location":"leetcode/1249-minimum-remove-to-make-valid-parentheses/","title":"1249. Minimum Remove to Make Valid Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/125-valid-palindrome/","title":"125. Valid Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1250-check-if-it-is-a-good-array/","title":"1250. Check If It Is a Good Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Number Theory","Unsolved"]},{"location":"leetcode/1251-average-selling-price/","title":"1251. Average Selling Price","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1252-cells-with-odd-values-in-a-matrix/","title":"1252. Cells with Odd Values in a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Simulation","Unsolved"]},{"location":"leetcode/1253-reconstruct-a-2-row-binary-matrix/","title":"1253. Reconstruct a 2-Row Binary Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Unsolved"]},{"location":"leetcode/1254-number-of-closed-islands/","title":"1254. Number of Closed Islands","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/1255-maximum-score-words-formed-by-letters/","title":"1255. Maximum Score Words Formed by Letters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1256-encode-number/","title":"1256. Encode Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Bit Manipulation","Unsolved"]},{"location":"leetcode/1257-smallest-common-region/","title":"1257. Smallest Common Region","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1258-synonymous-sentences/","title":"1258. Synonymous Sentences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Backtracking","Union Find","Unsolved"]},{"location":"leetcode/1259-handshakes-that-dont-cross/","title":"1259. Handshakes That Don't Cross","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/126-word-ladder-ii/","title":"126. Word Ladder II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Backtracking","Breadth-First Search","Unsolved"]},{"location":"leetcode/1260-shift-2d-grid/","title":"1260. Shift 2D Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/1261-find-elements-in-a-contaminated-binary-tree/","title":"1261. Find Elements in a Contaminated Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Design","Binary Tree","Unsolved"]},{"location":"leetcode/1262-greatest-sum-divisible-by-three/","title":"1262. Greatest Sum Divisible by Three","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1263-minimum-moves-to-move-a-box-to-their-target-location/","title":"1263. Minimum Moves to Move a Box to Their Target Location","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/1264-page-recommendations/","title":"1264. Page Recommendations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1265-print-immutable-linked-list-in-reverse/","title":"1265. Print Immutable Linked List in Reverse","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Stack","Recursion","Unsolved"]},{"location":"leetcode/1266-minimum-time-visiting-all-points/","title":"1266. Minimum Time Visiting All Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/1267-count-servers-that-communicate/","title":"1267. Count Servers that Communicate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Counting","Unsolved"]},{"location":"leetcode/1268-search-suggestions-system/","title":"1268. Search Suggestions System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Trie","Unsolved"]},{"location":"leetcode/1269-number-of-ways-to-stay-in-the-same-place-after-some-steps/","title":"1269. Number of Ways to Stay in the Same Place After Some Steps","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/127-word-ladder/","title":"127. Word Ladder","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Breadth-First Search","Unsolved"]},{"location":"leetcode/1270-all-people-report-to-the-given-manager/","title":"1270. All People Report to the Given Manager","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1271-hexspeak/","title":"1271. Hexspeak","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1272-remove-interval/","title":"1272. Remove Interval","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1273-delete-tree-nodes/","title":"1273. Delete Tree Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1274-number-of-ships-in-a-rectangle/","title":"1274. Number of Ships in a Rectangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Interactive","Unsolved"]},{"location":"leetcode/1275-find-winner-on-a-tic-tac-toe-game/","title":"1275. Find Winner on a Tic Tac Toe Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Simulation","Unsolved"]},{"location":"leetcode/1276-number-of-burgers-with-no-waste-of-ingredients/","title":"1276. Number of Burgers with No Waste of Ingredients","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1277-count-square-submatrices-with-all-ones/","title":"1277. Count Square Submatrices with All Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/1278-palindrome-partitioning-iii/","title":"1278. Palindrome Partitioning III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1279-traffic-light-controlled-intersection/","title":"1279. Traffic Light Controlled Intersection","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Concurrency","Unsolved"]},{"location":"leetcode/128-longest-consecutive-sequence/","title":"128. Longest Consecutive Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Union Find","Unsolved"]},{"location":"leetcode/1280-students-and-examinations/","title":"1280. Students and Examinations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1281-subtract-the-product-and-sum-of-digits-of-an-integer/","title":"1281. Subtract the Product and Sum of Digits of an Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1282-group-the-people-given-the-group-size-they-belong-to/","title":"1282. Group the People Given the Group Size They Belong To","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1283-find-the-smallest-divisor-given-a-threshold/","title":"1283. Find the Smallest Divisor Given a Threshold","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1284-minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix/","title":"1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1285-find-the-start-and-end-number-of-continuous-ranges/","title":"1285. Find the Start and End Number of Continuous Ranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1286-iterator-for-combination/","title":"1286. Iterator for Combination","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Design","Iterator","Unsolved"]},{"location":"leetcode/1287-element-appearing-more-than-25-in-sorted-array/","title":"1287. Element Appearing More Than 25% In Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1288-remove-covered-intervals/","title":"1288. Remove Covered Intervals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1289-minimum-falling-path-sum-ii/","title":"1289. Minimum Falling Path Sum II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/129-sum-root-to-leaf-numbers/","title":"129. Sum Root to Leaf Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1290-convert-binary-number-in-a-linked-list-to-integer/","title":"1290. Convert Binary Number in a Linked List to Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Math","Unsolved"]},{"location":"leetcode/1291-sequential-digits/","title":"1291. Sequential Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Enumeration","Unsolved"]},{"location":"leetcode/1292-maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/","title":"1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/1293-shortest-path-in-a-grid-with-obstacles-elimination/","title":"1293. Shortest Path in a Grid with Obstacles Elimination","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1294-weather-type-in-each-country/","title":"1294. Weather Type in Each Country","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1295-find-numbers-with-even-number-of-digits/","title":"1295. Find Numbers with Even Number of Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1296-divide-array-in-sets-of-k-consecutive-numbers/","title":"1296. Divide Array in Sets of K Consecutive Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1297-maximum-number-of-occurrences-of-a-substring/","title":"1297. Maximum Number of Occurrences of a Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/1298-maximum-candies-you-can-get-from-boxes/","title":"1298. Maximum Candies You Can Get from Boxes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/1299-replace-elements-with-greatest-element-on-right-side/","title":"1299. Replace Elements with Greatest Element on Right Side","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/13-roman-to-integer/","title":"13. Roman to Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Unsolved"]},{"location":"leetcode/130-surrounded-regions/","title":"130. Surrounded Regions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/1300-sum-of-mutated-array-closest-to-target/","title":"1300. Sum of Mutated Array Closest to Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1301-number-of-paths-with-max-score/","title":"1301. Number of Paths with Max Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/1302-deepest-leaves-sum/","title":"1302. Deepest Leaves Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1303-find-the-team-size/","title":"1303. Find the Team Size","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1304-find-n-unique-integers-sum-up-to-zero/","title":"1304. Find N Unique Integers Sum up to Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1305-all-elements-in-two-binary-search-trees/","title":"1305. All Elements in Two Binary Search Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Sorting","Binary Tree","Unsolved"]},{"location":"leetcode/1306-jump-game-iii/","title":"1306. Jump Game III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1307-verbal-arithmetic-puzzle/","title":"1307. Verbal Arithmetic Puzzle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Backtracking","Unsolved"]},{"location":"leetcode/1308-running-total-for-different-genders/","title":"1308. Running Total for Different Genders","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1309-decrypt-string-from-alphabet-to-integer-mapping/","title":"1309. Decrypt String from Alphabet to Integer Mapping","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/131-palindrome-partitioning/","title":"131. Palindrome Partitioning","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/1310-xor-queries-of-a-subarray/","title":"1310. XOR Queries of a Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1311-get-watched-videos-by-your-friends/","title":"1311. Get Watched Videos by Your Friends","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Breadth-First Search","Graph","Sorting","Unsolved"]},{"location":"leetcode/1312-minimum-insertion-steps-to-make-a-string-palindrome/","title":"1312. Minimum Insertion Steps to Make a String Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1313-decompress-run-length-encoded-list/","title":"1313. Decompress Run-Length Encoded List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1314-matrix-block-sum/","title":"1314. Matrix Block Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/1315-sum-of-nodes-with-even-valued-grandparent/","title":"1315. Sum of Nodes with Even-Valued Grandparent","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1316-distinct-echo-substrings/","title":"1316. Distinct Echo Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Trie","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/1317-convert-integer-to-the-sum-of-two-no-zero-integers/","title":"1317. Convert Integer to the Sum of Two No-Zero Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1318-minimum-flips-to-make-a-or-b-equal-to-c/","title":"1318. Minimum Flips to Make a OR b Equal to c","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/1319-number-of-operations-to-make-network-connected/","title":"1319. Number of Operations to Make Network Connected","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/132-palindrome-partitioning-ii/","title":"132. Palindrome Partitioning II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1320-minimum-distance-to-type-a-word-using-two-fingers/","title":"1320. Minimum Distance to Type a Word Using Two Fingers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1321-restaurant-growth/","title":"1321. Restaurant Growth","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1322-ads-performance/","title":"1322. Ads Performance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1323-maximum-69-number/","title":"1323. Maximum 69 Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/1324-print-words-vertically/","title":"1324. Print Words Vertically","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Simulation","Unsolved"]},{"location":"leetcode/1325-delete-leaves-with-a-given-value/","title":"1325. Delete Leaves With a Given Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1326-minimum-number-of-taps-to-open-to-water-a-garden/","title":"1326. Minimum Number of Taps to Open to Water a Garden","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1327-list-the-products-ordered-in-a-period/","title":"1327. List the Products Ordered in a Period","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1328-break-a-palindrome/","title":"1328. Break a Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1329-sort-the-matrix-diagonally/","title":"1329. Sort the Matrix Diagonally","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Matrix","Unsolved"]},{"location":"leetcode/133-clone-graph/","title":"133. Clone Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/1330-reverse-subarray-to-maximize-array-value/","title":"1330. Reverse Subarray To Maximize Array Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Unsolved"]},{"location":"leetcode/1331-rank-transform-of-an-array/","title":"1331. Rank Transform of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/1332-remove-palindromic-subsequences/","title":"1332. Remove Palindromic Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1333-filter-restaurants-by-vegan-friendly-price-and-distance/","title":"1333. Filter Restaurants by Vegan-Friendly, Price and Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1334-find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/","title":"1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Graph","Shortest Path","Unsolved"]},{"location":"leetcode/1335-minimum-difficulty-of-a-job-schedule/","title":"1335. Minimum Difficulty of a Job Schedule","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1336-number-of-transactions-per-visit/","title":"1336. Number of Transactions per Visit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1337-the-k-weakest-rows-in-a-matrix/","title":"1337. The K Weakest Rows in a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/1338-reduce-array-size-to-the-half/","title":"1338. Reduce Array Size to The Half","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1339-maximum-product-of-splitted-binary-tree/","title":"1339. Maximum Product of Splitted Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/134-gas-station/","title":"134. Gas Station","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1340-jump-game-v/","title":"1340. Jump Game V","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/1341-movie-rating/","title":"1341. Movie Rating","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1342-number-of-steps-to-reduce-a-number-to-zero/","title":"1342. Number of Steps to Reduce a Number to Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/1343-number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/","title":"1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/1344-angle-between-hands-of-a-clock/","title":"1344. Angle Between Hands of a Clock","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1345-jump-game-iv/","title":"1345. Jump Game IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Breadth-First Search","Unsolved"]},{"location":"leetcode/1346-check-if-n-and-its-double-exist/","title":"1346. Check If N and Its Double Exist","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1347-minimum-number-of-steps-to-make-two-strings-anagram/","title":"1347. Minimum Number of Steps to Make Two Strings Anagram","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/1348-tweet-counts-per-frequency/","title":"1348. Tweet Counts Per Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Binary Search","Design","Sorting","Ordered Set","Unsolved"]},{"location":"leetcode/1349-maximum-students-taking-exam/","title":"1349. Maximum Students Taking Exam","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Matrix","Bitmask","Unsolved"]},{"location":"leetcode/135-candy/","title":"135. Candy","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1350-students-with-invalid-departments/","title":"1350. Students With Invalid Departments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1351-count-negative-numbers-in-a-sorted-matrix/","title":"1351. Count Negative Numbers in a Sorted Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Unsolved"]},{"location":"leetcode/1352-product-of-the-last-k-numbers/","title":"1352. Product of the Last K Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Design","Queue","Data Stream","Unsolved"]},{"location":"leetcode/1353-maximum-number-of-events-that-can-be-attended/","title":"1353. Maximum Number of Events That Can Be Attended","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1354-construct-target-array-with-multiple-sums/","title":"1354. Construct Target Array With Multiple Sums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1355-activity-participants/","title":"1355. Activity Participants","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1356-sort-integers-by-the-number-of-1-bits/","title":"1356. Sort Integers by The Number of 1 Bits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Sorting","Counting","Unsolved"]},{"location":"leetcode/1357-apply-discount-every-n-orders/","title":"1357. Apply Discount Every n Orders","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Unsolved"]},{"location":"leetcode/1358-number-of-substrings-containing-all-three-characters/","title":"1358. Number of Substrings Containing All Three Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/1359-count-all-valid-pickup-and-delivery-options/","title":"1359. Count All Valid Pickup and Delivery Options","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/136-single-number/","title":"136. Single Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/1360-number-of-days-between-two-dates/","title":"1360. Number of Days Between Two Dates","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1361-validate-binary-tree-nodes/","title":"1361. Validate Binary Tree Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Union Find","Graph","Binary Tree","Unsolved"]},{"location":"leetcode/1362-closest-divisors/","title":"1362. Closest Divisors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1363-largest-multiple-of-three/","title":"1363. Largest Multiple of Three","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1364-number-of-trusted-contacts-of-a-customer/","title":"1364. Number of Trusted Contacts of a Customer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1365-how-many-numbers-are-smaller-than-the-current-number/","title":"1365. How Many Numbers Are Smaller Than the Current Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Counting","Unsolved"]},{"location":"leetcode/1366-rank-teams-by-votes/","title":"1366. Rank Teams by Votes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Counting","Unsolved"]},{"location":"leetcode/1367-linked-list-in-binary-tree/","title":"1367. Linked List in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1368-minimum-cost-to-make-at-least-one-valid-path-in-a-grid/","title":"1368. Minimum Cost to Make at Least One Valid Path in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Graph","Heap (Priority Queue)","Matrix","Shortest Path","Unsolved"]},{"location":"leetcode/1369-get-the-second-most-recent-activity/","title":"1369. Get the Second Most Recent Activity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/137-single-number-ii/","title":"137. Single Number II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/1370-increasing-decreasing-string/","title":"1370. Increasing Decreasing String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/1371-find-the-longest-substring-containing-vowels-in-even-counts/","title":"1371. Find the Longest Substring Containing Vowels in Even Counts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1372-longest-zigzag-path-in-a-binary-tree/","title":"1372. Longest ZigZag Path in a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1373-maximum-sum-bst-in-binary-tree/","title":"1373. Maximum Sum BST in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1374-generate-a-string-with-characters-that-have-odd-counts/","title":"1374. Generate a String With Characters That Have Odd Counts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1375-number-of-times-binary-string-is-prefix-aligned/","title":"1375. Number of Times Binary String Is Prefix-Aligned","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1376-time-needed-to-inform-all-employees/","title":"1376. Time Needed to Inform All Employees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1377-frog-position-after-t-seconds/","title":"1377. Frog Position After T Seconds","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/1378-replace-employee-id-with-the-unique-identifier/","title":"1378. Replace Employee ID With The Unique Identifier","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1379-find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/","title":"1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/138-copy-list-with-random-pointer/","title":"138. Copy List with Random Pointer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Unsolved"]},{"location":"leetcode/1380-lucky-numbers-in-a-matrix/","title":"1380. Lucky Numbers in a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/1381-design-a-stack-with-increment-operation/","title":"1381. Design a Stack With Increment Operation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Design","Unsolved"]},{"location":"leetcode/1382-balance-a-binary-search-tree/","title":"1382. Balance a Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Divide and Conquer","Greedy","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1383-maximum-performance-of-a-team/","title":"1383. Maximum Performance of a Team","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1384-total-sales-amount-by-year/","title":"1384. Total Sales Amount by Year","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1385-find-the-distance-value-between-two-arrays/","title":"1385. Find the Distance Value Between Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1386-cinema-seat-allocation/","title":"1386. Cinema Seat Allocation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Bit Manipulation","Unsolved"]},{"location":"leetcode/1387-sort-integers-by-the-power-value/","title":"1387. Sort Integers by The Power Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Memoization","Sorting","Unsolved"]},{"location":"leetcode/1388-pizza-with-3n-slices/","title":"1388. Pizza With 3n Slices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1389-create-target-array-in-the-given-order/","title":"1389. Create Target Array in the Given Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/139-word-break/","title":"139. Word Break","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Dynamic Programming","Trie","Memoization","Unsolved"]},{"location":"leetcode/1390-four-divisors/","title":"1390. Four Divisors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1391-check-if-there-is-a-valid-path-in-a-grid/","title":"1391. Check if There is a Valid Path in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/1392-longest-happy-prefix/","title":"1392. Longest Happy Prefix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Rolling Hash","String Matching","Hash Function","Unsolved"]},{"location":"leetcode/1393-capital-gainloss/","title":"1393. Capital Gain/Loss","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1394-find-lucky-integer-in-an-array/","title":"1394. Find Lucky Integer in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/1395-count-number-of-teams/","title":"1395. Count Number of Teams","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Binary Indexed Tree","Unsolved"]},{"location":"leetcode/1396-design-underground-system/","title":"1396. Design Underground System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Unsolved"]},{"location":"leetcode/1397-find-all-good-strings/","title":"1397. Find All Good Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","String Matching","Unsolved"]},{"location":"leetcode/1398-customers-who-bought-products-a-and-b-but-not-c/","title":"1398. Customers Who Bought Products A and B but Not C","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1399-count-largest-group/","title":"1399. Count Largest Group","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Unsolved"]},{"location":"leetcode/14-longest-common-prefix/","title":"14. Longest Common Prefix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Trie","Unsolved"]},{"location":"leetcode/140-word-break-ii/","title":"140. Word Break II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Dynamic Programming","Backtracking","Trie","Memoization","Unsolved"]},{"location":"leetcode/1400-construct-k-palindrome-strings/","title":"1400. Construct K Palindrome Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Counting","Unsolved"]},{"location":"leetcode/1401-circle-and-rectangle-overlapping/","title":"1401. Circle and Rectangle Overlapping","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Unsolved"]},{"location":"leetcode/1402-reducing-dishes/","title":"1402. Reducing Dishes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1403-minimum-subsequence-in-non-increasing-order/","title":"1403. Minimum Subsequence in Non-Increasing Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1404-number-of-steps-to-reduce-a-number-in-binary-representation-to-one/","title":"1404. Number of Steps to Reduce a Number in Binary Representation to One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Bit Manipulation","Unsolved"]},{"location":"leetcode/1405-longest-happy-string/","title":"1405. Longest Happy String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1406-stone-game-iii/","title":"1406. Stone Game III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/1407-top-travellers/","title":"1407. Top Travellers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1408-string-matching-in-an-array/","title":"1408. String Matching in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","String Matching","Unsolved"]},{"location":"leetcode/1409-queries-on-a-permutation-with-key/","title":"1409. Queries on a Permutation With Key","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Indexed Tree","Simulation","Unsolved"]},{"location":"leetcode/141-linked-list-cycle/","title":"141. Linked List Cycle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/1410-html-entity-parser/","title":"1410. HTML Entity Parser","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1411-number-of-ways-to-paint-n-3-grid/","title":"1411. Number of Ways to Paint N \u00d7 3 Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/1412-find-the-quiet-students-in-all-exams/","title":"1412. Find the Quiet Students in All Exams","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1413-minimum-value-to-get-positive-step-by-step-sum/","title":"1413. Minimum Value to Get Positive Step by Step Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/1414-find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/","title":"1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/1415-the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/","title":"1415. The k-th Lexicographical String of All Happy Strings of Length n","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Unsolved"]},{"location":"leetcode/1416-restore-the-array/","title":"1416. Restore The Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1417-reformat-the-string/","title":"1417. Reformat The String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1418-display-table-of-food-orders-in-a-restaurant/","title":"1418. Display Table of Food Orders in a Restaurant","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Ordered Set","Unsolved"]},{"location":"leetcode/1419-minimum-number-of-frogs-croaking/","title":"1419. Minimum Number of Frogs Croaking","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Counting","Unsolved"]},{"location":"leetcode/142-linked-list-cycle-ii/","title":"142. Linked List Cycle II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/1420-build-array-where-you-can-find-the-maximum-exactly-k-comparisons/","title":"1420. Build Array Where You Can Find The Maximum Exactly K Comparisons","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/1421-npv-queries/","title":"1421. NPV Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1422-maximum-score-after-splitting-a-string/","title":"1422. Maximum Score After Splitting a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1423-maximum-points-you-can-obtain-from-cards/","title":"1423. Maximum Points You Can Obtain from Cards","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/1424-diagonal-traverse-ii/","title":"1424. Diagonal Traverse II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1425-constrained-subsequence-sum/","title":"1425. Constrained Subsequence Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Queue","Sliding Window","Heap (Priority Queue)","Monotonic Queue","Unsolved"]},{"location":"leetcode/1426-counting-elements/","title":"1426. Counting Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1427-perform-string-shifts/","title":"1427. Perform String Shifts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Unsolved"]},{"location":"leetcode/1428-leftmost-column-with-at-least-a-one/","title":"1428. Leftmost Column with at Least a One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Interactive","Unsolved"]},{"location":"leetcode/1429-first-unique-number/","title":"1429. First Unique Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Queue","Data Stream","Unsolved"]},{"location":"leetcode/143-reorder-list/","title":"143. Reorder List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Stack","Recursion","Unsolved"]},{"location":"leetcode/1430-check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/","title":"1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1431-kids-with-the-greatest-number-of-candies/","title":"1431. Kids With the Greatest Number of Candies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1432-max-difference-you-can-get-from-changing-an-integer/","title":"1432. Max Difference You Can Get From Changing an Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/1433-check-if-a-string-can-break-another-string/","title":"1433. Check If a String Can Break Another String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1434-number-of-ways-to-wear-different-hats-to-each-other/","title":"1434. Number of Ways to Wear Different Hats to Each Other","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1435-create-a-session-bar-chart/","title":"1435. Create a Session Bar Chart","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1436-destination-city/","title":"1436. Destination City","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1437-check-if-all-1s-are-at-least-length-k-places-away/","title":"1437. Check If All 1's Are at Least Length K Places Away","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/","title":"1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Sliding Window","Heap (Priority Queue)","Ordered Set","Monotonic Queue","Unsolved"]},{"location":"leetcode/1439-find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows/","title":"1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/144-binary-tree-preorder-traversal/","title":"144. Binary Tree Preorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1440-evaluate-boolean-expression/","title":"1440. Evaluate Boolean Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1441-build-an-array-with-stack-operations/","title":"1441. Build an Array With Stack Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Simulation","Unsolved"]},{"location":"leetcode/1442-count-triplets-that-can-form-two-arrays-of-equal-xor/","title":"1442. Count Triplets That Can Form Two Arrays of Equal XOR","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1443-minimum-time-to-collect-all-apples-in-a-tree/","title":"1443. Minimum Time to Collect All Apples in a Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1444-number-of-ways-of-cutting-a-pizza/","title":"1444. Number of Ways of Cutting a Pizza","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Memoization","Matrix","Unsolved"]},{"location":"leetcode/1445-apples-oranges/","title":"1445. Apples &amp; Oranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1446-consecutive-characters/","title":"1446. Consecutive Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1447-simplified-fractions/","title":"1447. Simplified Fractions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Number Theory","Unsolved"]},{"location":"leetcode/1448-count-good-nodes-in-binary-tree/","title":"1448. Count Good Nodes in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1449-form-largest-integer-with-digits-that-add-up-to-target/","title":"1449. Form Largest Integer With Digits That Add up to Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/145-binary-tree-postorder-traversal/","title":"145. Binary Tree Postorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1450-number-of-students-doing-homework-at-a-given-time/","title":"1450. Number of Students Doing Homework at a Given Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1451-rearrange-words-in-a-sentence/","title":"1451. Rearrange Words in a Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sorting","Unsolved"]},{"location":"leetcode/1452-people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list/","title":"1452. People Whose List of Favorite Companies Is Not a Subset of Another List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/1453-maximum-number-of-darts-inside-of-a-circular-dartboard/","title":"1453. Maximum Number of Darts Inside of a Circular Dartboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/1454-active-users/","title":"1454. Active Users","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1455-check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence/","title":"1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","String Matching","Unsolved"]},{"location":"leetcode/1456-maximum-number-of-vowels-in-a-substring-of-given-length/","title":"1456. Maximum Number of Vowels in a Substring of Given Length","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sliding Window","Unsolved"]},{"location":"leetcode/1457-pseudo-palindromic-paths-in-a-binary-tree/","title":"1457. Pseudo-Palindromic Paths in a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1458-max-dot-product-of-two-subsequences/","title":"1458. Max Dot Product of Two Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1459-rectangles-area/","title":"1459. Rectangles Area","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/146-lru-cache/","title":"146. LRU Cache","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Design","Doubly-Linked List","Unsolved"]},{"location":"leetcode/1460-make-two-arrays-equal-by-reversing-subarrays/","title":"1460. Make Two Arrays Equal by Reversing Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/1461-check-if-a-string-contains-all-binary-codes-of-size-k/","title":"1461. Check If a String Contains All Binary Codes of Size K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/1462-course-schedule-iv/","title":"1462. Course Schedule IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/1463-cherry-pickup-ii/","title":"1463. Cherry Pickup II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/1464-maximum-product-of-two-elements-in-an-array/","title":"1464. Maximum Product of Two Elements in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1465-maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/","title":"1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1466-reorder-routes-to-make-all-paths-lead-to-the-city-zero/","title":"1466. Reorder Routes to Make All Paths Lead to the City Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/1467-probability-of-a-two-boxes-having-the-same-number-of-distinct-balls/","title":"1467. Probability of a Two Boxes Having The Same Number of Distinct Balls","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Backtracking","Combinatorics","Probability and Statistics","Unsolved"]},{"location":"leetcode/1468-calculate-salaries/","title":"1468. Calculate Salaries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1469-find-all-the-lonely-nodes/","title":"1469. Find All The Lonely Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/147-insertion-sort-list/","title":"147. Insertion Sort List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Sorting","Unsolved"]},{"location":"leetcode/1470-shuffle-the-array/","title":"1470. Shuffle the Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1471-the-k-strongest-values-in-an-array/","title":"1471. The k Strongest Values in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/1472-design-browser-history/","title":"1472. Design Browser History","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Stack","Design","Doubly-Linked List","Data Stream","Unsolved"]},{"location":"leetcode/1473-paint-house-iii/","title":"1473. Paint House III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1474-delete-n-nodes-after-m-nodes-of-a-linked-list/","title":"1474. Delete N Nodes After M Nodes of a Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/1475-final-prices-with-a-special-discount-in-a-shop/","title":"1475. Final Prices With a Special Discount in a Shop","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1476-subrectangle-queries/","title":"1476. Subrectangle Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Matrix","Unsolved"]},{"location":"leetcode/1477-find-two-non-overlapping-sub-arrays-each-with-target-sum/","title":"1477. Find Two Non-overlapping Sub-arrays Each With Target Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Dynamic Programming","Sliding Window","Unsolved"]},{"location":"leetcode/1478-allocate-mailboxes/","title":"1478. Allocate Mailboxes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/1479-sales-by-day-of-the-week/","title":"1479. Sales by Day of the Week","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/148-sort-list/","title":"148. Sort List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Divide and Conquer","Sorting","Merge Sort","Unsolved"]},{"location":"leetcode/1480-running-sum-of-1d-array/","title":"1480. Running Sum of 1d Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/1481-least-number-of-unique-integers-after-k-removals/","title":"1481. Least Number of Unique Integers after K Removals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Counting","Unsolved"]},{"location":"leetcode/1482-minimum-number-of-days-to-make-m-bouquets/","title":"1482. Minimum Number of Days to Make m Bouquets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1483-kth-ancestor-of-a-tree-node/","title":"1483. Kth Ancestor of a Tree Node","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Dynamic Programming","Tree","Depth-First Search","Breadth-First Search","Design","Unsolved"]},{"location":"leetcode/1484-group-sold-products-by-the-date/","title":"1484. Group Sold Products By The Date","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1485-clone-binary-tree-with-random-pointer/","title":"1485. Clone Binary Tree With Random Pointer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1486-xor-operation-in-an-array/","title":"1486. XOR Operation in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/1487-making-file-names-unique/","title":"1487. Making File Names Unique","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/1488-avoid-flood-in-the-city/","title":"1488. Avoid Flood in The City","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1489-find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/","title":"1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Union Find","Graph","Sorting","Minimum Spanning Tree","Strongly Connected Component","Unsolved"]},{"location":"leetcode/149-max-points-on-a-line/","title":"149. Max Points on a Line","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Geometry","Unsolved"]},{"location":"leetcode/1490-clone-n-ary-tree/","title":"1490. Clone N-ary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1491-average-salary-excluding-the-minimum-and-maximum-salary/","title":"1491. Average Salary Excluding the Minimum and Maximum Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1492-the-kth-factor-of-n/","title":"1492. The kth Factor of n","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1493-longest-subarray-of-1s-after-deleting-one-element/","title":"1493. Longest Subarray of 1's After Deleting One Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sliding Window","Unsolved"]},{"location":"leetcode/1494-parallel-courses-ii/","title":"1494. Parallel Courses II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Graph","Bitmask","Unsolved"]},{"location":"leetcode/1495-friendly-movies-streamed-last-month/","title":"1495. Friendly Movies Streamed Last Month","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1496-path-crossing/","title":"1496. Path Crossing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1497-check-if-array-pairs-are-divisible-by-k/","title":"1497. Check If Array Pairs Are Divisible by k","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/1498-number-of-subsequences-that-satisfy-the-given-sum-condition/","title":"1498. Number of Subsequences That Satisfy the Given Sum Condition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1499-max-value-of-equation/","title":"1499. Max Value of Equation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Sliding Window","Heap (Priority Queue)","Monotonic Queue","Unsolved"]},{"location":"leetcode/15-3sum/","title":"15. 3Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/150-evaluate-reverse-polish-notation/","title":"150. Evaluate Reverse Polish Notation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Stack","Unsolved"]},{"location":"leetcode/1500-design-a-file-sharing-system/","title":"1500. Design a File Sharing System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Heap (Priority Queue)","Data Stream","Unsolved"]},{"location":"leetcode/1501-countries-you-can-safely-invest-in/","title":"1501. Countries You Can Safely Invest In","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1502-can-make-arithmetic-progression-from-sequence/","title":"1502. Can Make Arithmetic Progression From Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1503-last-moment-before-all-ants-fall-out-of-a-plank/","title":"1503. Last Moment Before All Ants Fall Out of a Plank","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Brainteaser","Simulation","Unsolved"]},{"location":"leetcode/1504-count-submatrices-with-all-ones/","title":"1504. Count Submatrices With All Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Matrix","Monotonic Stack","Unsolved"]},{"location":"leetcode/1505-minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/","title":"1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Binary Indexed Tree","Segment Tree","Unsolved"]},{"location":"leetcode/1506-find-root-of-n-ary-tree/","title":"1506. Find Root of N-Ary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Bit Manipulation","Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/1507-reformat-date/","title":"1507. Reformat Date","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1508-range-sum-of-sorted-subarray-sums/","title":"1508. Range Sum of Sorted Subarray Sums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1509-minimum-difference-between-largest-and-smallest-value-in-three-moves/","title":"1509. Minimum Difference Between Largest and Smallest Value in Three Moves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/151-reverse-words-in-a-string/","title":"151. Reverse Words in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1510-stone-game-iv/","title":"1510. Stone Game IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/1511-customer-order-frequency/","title":"1511. Customer Order Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1512-number-of-good-pairs/","title":"1512. Number of Good Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Counting","Unsolved"]},{"location":"leetcode/1513-number-of-substrings-with-only-1s/","title":"1513. Number of Substrings With Only 1s","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1514-path-with-maximum-probability/","title":"1514. Path with Maximum Probability","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/1515-best-position-for-a-service-centre/","title":"1515. Best Position for a Service Centre","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Randomized","Unsolved"]},{"location":"leetcode/1516-move-sub-tree-of-n-ary-tree/","title":"1516. Move Sub-Tree of N-Ary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/1517-find-users-with-valid-e-mails/","title":"1517. Find Users With Valid E-Mails","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1518-water-bottles/","title":"1518. Water Bottles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Unsolved"]},{"location":"leetcode/1519-number-of-nodes-in-the-sub-tree-with-the-same-label/","title":"1519. Number of Nodes in the Sub-Tree With the Same Label","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Counting","Unsolved"]},{"location":"leetcode/152-maximum-product-subarray/","title":"152. Maximum Product Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1520-maximum-number-of-non-overlapping-substrings/","title":"1520. Maximum Number of Non-Overlapping Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1521-find-a-value-of-a-mysterious-function-closest-to-target/","title":"1521. Find a Value of a Mysterious Function Closest to Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Bit Manipulation","Segment Tree","Unsolved"]},{"location":"leetcode/1522-diameter-of-n-ary-tree/","title":"1522. Diameter of N-Ary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/1523-count-odd-numbers-in-an-interval-range/","title":"1523. Count Odd Numbers in an Interval Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1524-number-of-sub-arrays-with-odd-sum/","title":"1524. Number of Sub-arrays With Odd Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/1525-number-of-good-ways-to-split-a-string/","title":"1525. Number of Good Ways to Split a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Bit Manipulation","Unsolved"]},{"location":"leetcode/1526-minimum-number-of-increments-on-subarrays-to-form-a-target-array/","title":"1526. Minimum Number of Increments on Subarrays to Form a Target Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/1527-patients-with-a-condition/","title":"1527. Patients With a Condition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1528-shuffle-string/","title":"1528. Shuffle String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/1529-minimum-suffix-flips/","title":"1529. Minimum Suffix Flips","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/153-find-minimum-in-rotated-sorted-array/","title":"153. Find Minimum in Rotated Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1530-number-of-good-leaf-nodes-pairs/","title":"1530. Number of Good Leaf Nodes Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1531-string-compression-ii/","title":"1531. String Compression II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1532-the-most-recent-three-orders/","title":"1532. The Most Recent Three Orders","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1533-find-the-index-of-the-large-integer/","title":"1533. Find the Index of the Large Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Interactive","Unsolved"]},{"location":"leetcode/1534-count-good-triplets/","title":"1534. Count Good Triplets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Enumeration","Unsolved"]},{"location":"leetcode/1535-find-the-winner-of-an-array-game/","title":"1535. Find the Winner of an Array Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/1536-minimum-swaps-to-arrange-a-binary-grid/","title":"1536. Minimum Swaps to Arrange a Binary Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Unsolved"]},{"location":"leetcode/1537-get-the-maximum-score/","title":"1537. Get the Maximum Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1538-guess-the-majority-in-a-hidden-array/","title":"1538. Guess the Majority in a Hidden Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Interactive","Unsolved"]},{"location":"leetcode/1539-kth-missing-positive-number/","title":"1539. Kth Missing Positive Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/154-find-minimum-in-rotated-sorted-array-ii/","title":"154. Find Minimum in Rotated Sorted Array II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1540-can-convert-string-in-k-moves/","title":"1540. Can Convert String in K Moves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1541-minimum-insertions-to-balance-a-parentheses-string/","title":"1541. Minimum Insertions to Balance a Parentheses String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Unsolved"]},{"location":"leetcode/1542-find-longest-awesome-substring/","title":"1542. Find Longest Awesome Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Unsolved"]},{"location":"leetcode/1543-fix-product-name-format/","title":"1543. Fix Product Name Format","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1544-make-the-string-great/","title":"1544. Make The String Great","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1545-find-kth-bit-in-nth-binary-string/","title":"1545. Find Kth Bit in Nth Binary String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Recursion","Unsolved"]},{"location":"leetcode/1546-maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/","title":"1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Prefix Sum","Unsolved"]},{"location":"leetcode/1547-minimum-cost-to-cut-a-stick/","title":"1547. Minimum Cost to Cut a Stick","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1548-the-most-similar-path-in-a-graph/","title":"1548. The Most Similar Path in a Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Graph","Unsolved"]},{"location":"leetcode/1549-the-most-recent-orders-for-each-product/","title":"1549. The Most Recent Orders for Each Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/155-min-stack/","title":"155. Min Stack","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Design","Unsolved"]},{"location":"leetcode/1550-three-consecutive-odds/","title":"1550. Three Consecutive Odds","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1551-minimum-operations-to-make-array-equal/","title":"1551. Minimum Operations to Make Array Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1552-magnetic-force-between-two-balls/","title":"1552. Magnetic Force Between Two Balls","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1553-minimum-number-of-days-to-eat-n-oranges/","title":"1553. Minimum Number of Days to Eat N Oranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/1554-strings-differ-by-one-character/","title":"1554. Strings Differ by One Character","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/1555-bank-account-summary/","title":"1555. Bank Account Summary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1556-thousand-separator/","title":"1556. Thousand Separator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1557-minimum-number-of-vertices-to-reach-all-nodes/","title":"1557. Minimum Number of Vertices to Reach All Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Unsolved"]},{"location":"leetcode/1558-minimum-numbers-of-function-calls-to-make-target-array/","title":"1558. Minimum Numbers of Function Calls to Make Target Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Bit Manipulation","Unsolved"]},{"location":"leetcode/1559-detect-cycles-in-2d-grid/","title":"1559. Detect Cycles in 2D Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/156-binary-tree-upside-down/","title":"156. Binary Tree Upside Down","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1560-most-visited-sector-in-a-circular-track/","title":"1560. Most Visited Sector in  a Circular Track","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/1561-maximum-number-of-coins-you-can-get/","title":"1561. Maximum Number of Coins You Can Get","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Sorting","Game Theory","Unsolved"]},{"location":"leetcode/1562-find-latest-group-of-size-m/","title":"1562. Find Latest Group of Size M","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Simulation","Unsolved"]},{"location":"leetcode/1563-stone-game-v/","title":"1563. Stone Game V","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/1564-put-boxes-into-the-warehouse-i/","title":"1564. Put Boxes Into the Warehouse I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1565-unique-orders-and-customers-per-month/","title":"1565. Unique Orders and Customers Per Month","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1566-detect-pattern-of-length-m-repeated-k-or-more-times/","title":"1566. Detect Pattern of Length M Repeated K or More Times","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Enumeration","Unsolved"]},{"location":"leetcode/1567-maximum-length-of-subarray-with-positive-product/","title":"1567. Maximum Length of Subarray With Positive Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1568-minimum-number-of-days-to-disconnect-island/","title":"1568. Minimum Number of Days to Disconnect Island","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Strongly Connected Component","Unsolved"]},{"location":"leetcode/1569-number-of-ways-to-reorder-array-to-get-same-bst/","title":"1569. Number of Ways to Reorder Array to Get Same BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Divide and Conquer","Dynamic Programming","Tree","Union Find","Binary Search Tree","Memoization","Combinatorics","Binary Tree","Unsolved"]},{"location":"leetcode/157-read-n-characters-given-read4/","title":"157. Read N Characters Given Read4","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Interactive","Unsolved"]},{"location":"leetcode/1570-dot-product-of-two-sparse-vectors/","title":"1570. Dot Product of Two Sparse Vectors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Design","Unsolved"]},{"location":"leetcode/1571-warehouse-manager/","title":"1571. Warehouse Manager","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1572-matrix-diagonal-sum/","title":"1572. Matrix Diagonal Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/1573-number-of-ways-to-split-a-string/","title":"1573. Number of Ways to Split a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1574-shortest-subarray-to-be-removed-to-make-array-sorted/","title":"1574. Shortest Subarray to be Removed to Make Array Sorted","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1575-count-all-possible-routes/","title":"1575. Count All Possible Routes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/1576-replace-all-s-to-avoid-consecutive-repeating-characters/","title":"1576. Replace All ?'s to Avoid Consecutive Repeating Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1577-number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/","title":"1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Two Pointers","Unsolved"]},{"location":"leetcode/1578-minimum-time-to-make-rope-colorful/","title":"1578. Minimum Time to Make Rope Colorful","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1579-remove-max-number-of-edges-to-keep-graph-fully-traversable/","title":"1579. Remove Max Number of Edges to Keep Graph Fully Traversable","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Union Find","Graph","Unsolved"]},{"location":"leetcode/158-read-n-characters-given-read4-ii-call-multiple-times/","title":"158. Read N Characters Given read4 II - Call Multiple Times","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Interactive","Unsolved"]},{"location":"leetcode/1580-put-boxes-into-the-warehouse-ii/","title":"1580. Put Boxes Into the Warehouse II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1581-customer-who-visited-but-did-not-make-any-transactions/","title":"1581. Customer Who Visited but Did Not Make Any Transactions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1582-special-positions-in-a-binary-matrix/","title":"1582. Special Positions in a Binary Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/1583-count-unhappy-friends/","title":"1583. Count Unhappy Friends","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/1584-min-cost-to-connect-all-points/","title":"1584. Min Cost to Connect All Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Union Find","Graph","Minimum Spanning Tree","Unsolved"]},{"location":"leetcode/1585-check-if-string-is-transformable-with-substring-sort-operations/","title":"1585. Check If String Is Transformable With Substring Sort Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1586-binary-search-tree-iterator-ii/","title":"1586. Binary Search Tree Iterator II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Design","Binary Search Tree","Binary Tree","Iterator","Unsolved"]},{"location":"leetcode/1587-bank-account-summary-ii/","title":"1587. Bank Account Summary II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1588-sum-of-all-odd-length-subarrays/","title":"1588. Sum of All Odd Length Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Prefix Sum","Unsolved"]},{"location":"leetcode/1589-maximum-sum-obtained-of-any-permutation/","title":"1589. Maximum Sum Obtained of Any Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/159-longest-substring-with-at-most-two-distinct-characters/","title":"159. Longest Substring with At Most Two Distinct Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/1590-make-sum-divisible-by-p/","title":"1590. Make Sum Divisible by P","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/1591-strange-printer-ii/","title":"1591. Strange Printer II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Topological Sort","Matrix","Unsolved"]},{"location":"leetcode/1592-rearrange-spaces-between-words/","title":"1592. Rearrange Spaces Between Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1593-split-a-string-into-the-max-number-of-unique-substrings/","title":"1593. Split a String Into the Max Number of Unique Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Backtracking","Unsolved"]},{"location":"leetcode/1594-maximum-non-negative-product-in-a-matrix/","title":"1594. Maximum Non Negative Product in a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/1595-minimum-cost-to-connect-two-groups-of-points/","title":"1595. Minimum Cost to Connect Two Groups of Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Matrix","Bitmask","Unsolved"]},{"location":"leetcode/1596-the-most-frequently-ordered-products-for-each-customer/","title":"1596. The Most Frequently Ordered Products for Each Customer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1597-build-binary-expression-tree-from-infix-expression/","title":"1597. Build Binary Expression Tree From Infix Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1598-crawler-log-folder/","title":"1598. Crawler Log Folder","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Stack","Unsolved"]},{"location":"leetcode/1599-maximum-profit-of-operating-a-centennial-wheel/","title":"1599. Maximum Profit of Operating a Centennial Wheel","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/16-3sum-closest/","title":"16. 3Sum Closest","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/160-intersection-of-two-linked-lists/","title":"160. Intersection of Two Linked Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/1600-throne-inheritance/","title":"1600. Throne Inheritance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Design","Unsolved"]},{"location":"leetcode/1601-maximum-number-of-achievable-transfer-requests/","title":"1601. Maximum Number of Achievable Transfer Requests","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Bit Manipulation","Enumeration","Unsolved"]},{"location":"leetcode/1602-find-nearest-right-node-in-binary-tree/","title":"1602. Find Nearest Right Node in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1603-design-parking-system/","title":"1603. Design Parking System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Simulation","Counting","Unsolved"]},{"location":"leetcode/1604-alert-using-same-key-card-three-or-more-times-in-a-one-hour-period/","title":"1604. Alert Using Same Key-Card Three or More Times in a One Hour Period","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/1605-find-valid-matrix-given-row-and-column-sums/","title":"1605. Find Valid Matrix Given Row and Column Sums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Unsolved"]},{"location":"leetcode/1606-find-servers-that-handled-most-number-of-requests/","title":"1606. Find Servers That Handled Most Number of Requests","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/1607-sellers-with-no-sales/","title":"1607. Sellers With No Sales","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1608-special-array-with-x-elements-greater-than-or-equal-x/","title":"1608. Special Array With X Elements Greater Than or Equal X","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1609-even-odd-tree/","title":"1609. Even Odd Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/161-one-edit-distance/","title":"161. One Edit Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1610-maximum-number-of-visible-points/","title":"1610. Maximum Number of Visible Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Sliding Window","Sorting","Unsolved"]},{"location":"leetcode/1611-minimum-one-bit-operations-to-make-integers-zero/","title":"1611. Minimum One Bit Operations to Make Integers Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Memoization","Unsolved"]},{"location":"leetcode/1612-check-if-two-expression-trees-are-equivalent/","title":"1612. Check If Two Expression Trees are Equivalent","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1613-find-the-missing-ids/","title":"1613. Find the Missing IDs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1614-maximum-nesting-depth-of-the-parentheses/","title":"1614. Maximum Nesting Depth of the Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/1615-maximal-network-rank/","title":"1615. Maximal Network Rank","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Unsolved"]},{"location":"leetcode/1616-split-two-strings-to-make-palindrome/","title":"1616. Split Two Strings to Make Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1617-count-subtrees-with-max-distance-between-cities/","title":"1617. Count Subtrees With Max Distance Between Cities","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Tree","Enumeration","Bitmask","Unsolved"]},{"location":"leetcode/1618-maximum-font-to-fit-a-sentence-in-a-screen/","title":"1618. Maximum Font to Fit a Sentence in a Screen","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Binary Search","Interactive","Unsolved"]},{"location":"leetcode/1619-mean-of-array-after-removing-some-elements/","title":"1619. Mean of Array After Removing Some Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/162-find-peak-element/","title":"162. Find Peak Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1620-coordinate-with-maximum-network-quality/","title":"1620. Coordinate With Maximum Network Quality","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Enumeration","Unsolved"]},{"location":"leetcode/1621-number-of-sets-of-k-non-overlapping-line-segments/","title":"1621. Number of Sets of K Non-Overlapping Line Segments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/1622-fancy-sequence/","title":"1622. Fancy Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Design","Segment Tree","Unsolved"]},{"location":"leetcode/1623-all-valid-triplets-that-can-represent-a-country/","title":"1623. All Valid Triplets That Can Represent a Country","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1624-largest-substring-between-two-equal-characters/","title":"1624. Largest Substring Between Two Equal Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1625-lexicographically-smallest-string-after-applying-operations/","title":"1625. Lexicographically Smallest String After Applying Operations","text":"C++ <p>\\(Time: O(N^2)\\)</p> <p>\\(Space: O(N)\\)</p> <pre><code>class Solution {\npublic:\nstring findLexSmallestString(string s, int a, int b) {\nint n = s.size();\nvector&lt;int&gt; v(n); // s - '0'\nvector&lt;int&gt; m; // min \nfor (int i = 0; i &lt; n; i++)\nv[i] = s[i]-'0';\nm = v;\nint r = 0; // rotate: O(lcm(b, n) / b) &lt; O(n)\ndo {\nif (b % 2)\nadd(v, 0, a); // n / 2\nadd(v, 1, a);     // n / 2\nm = min(m,v);     // n\nrotate(v, b);     // 2n\nr = (r + b) % n;\n} while (r);\nstring ans;\nfor (int i = 0; i &lt; n; i++)\nans += m[i] + '0';\nreturn ans;\n}\n// add a to interval index many times to let s[i] minimize\nvoid add(vector&lt;int&gt; &amp;s, int i, int a) {\nint diff = 10 - s[i]; // 1,3,7,9\nif (a % 2 == 0)       // 2,4,6,8\ndiff += (s[i] % 2);\nif (a == 5)           // 5\ndiff = (s[i] &gt;= 5) ? 5 : 0;\nfor (; i &lt; s.size(); i+=2)\ns[i] = (s[i] + diff) % 10;\n}\nvoid rotate(vector&lt;int&gt; &amp;s, int b) {\nreverse(s.begin(), s.end());\nreverse(s.begin(), s.begin()+b);\nreverse(s.begin()+b, s.end());\n}\n};\n</code></pre>","tags":["String","Breadth-First Search"]},{"location":"leetcode/1626-best-team-with-no-conflicts/","title":"1626. Best Team With No Conflicts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/1627-graph-connectivity-with-threshold/","title":"1627. Graph Connectivity With Threshold","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Union Find","Unsolved"]},{"location":"leetcode/1628-design-an-expression-tree-with-evaluate-function/","title":"1628. Design an Expression Tree With Evaluate Function","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Stack","Tree","Design","Binary Tree","Unsolved"]},{"location":"leetcode/1629-slowest-key/","title":"1629. Slowest Key","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/163-missing-ranges/","title":"163. Missing Ranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1630-arithmetic-subarrays/","title":"1630. Arithmetic Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1631-path-with-minimum-effort/","title":"1631. Path With Minimum Effort","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Depth-First Search","Breadth-First Search","Union Find","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/1632-rank-transform-of-a-matrix/","title":"1632. Rank Transform of a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Union Find","Graph","Topological Sort","Matrix","Unsolved"]},{"location":"leetcode/1633-percentage-of-users-attended-a-contest/","title":"1633. Percentage of Users Attended a Contest","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1634-add-two-polynomials-represented-as-linked-lists/","title":"1634. Add Two Polynomials Represented as Linked Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Math","Two Pointers","Unsolved"]},{"location":"leetcode/1635-hopper-company-queries-i/","title":"1635. Hopper Company Queries I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1636-sort-array-by-increasing-frequency/","title":"1636. Sort Array by Increasing Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/1637-widest-vertical-area-between-two-points-containing-no-points/","title":"1637. Widest Vertical Area Between Two Points Containing No Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1638-count-substrings-that-differ-by-one-character/","title":"1638. Count Substrings That Differ by One Character","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1639-number-of-ways-to-form-a-target-string-given-a-dictionary/","title":"1639. Number of Ways to Form a Target String Given a Dictionary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/164-maximum-gap/","title":"164. Maximum Gap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Bucket Sort","Radix Sort","Unsolved"]},{"location":"leetcode/1640-check-array-formation-through-concatenation/","title":"1640. Check Array Formation Through Concatenation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1641-count-sorted-vowel-strings/","title":"1641. Count Sorted Vowel Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/1642-furthest-building-you-can-reach/","title":"1642. Furthest Building You Can Reach","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1643-kth-smallest-instructions/","title":"1643. Kth Smallest Instructions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/1644-lowest-common-ancestor-of-a-binary-tree-ii/","title":"1644. Lowest Common Ancestor of a Binary Tree II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1645-hopper-company-queries-ii/","title":"1645. Hopper Company Queries II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1646-get-maximum-in-generated-array/","title":"1646. Get Maximum in Generated Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Simulation","Unsolved"]},{"location":"leetcode/1647-minimum-deletions-to-make-character-frequencies-unique/","title":"1647. Minimum Deletions to Make Character Frequencies Unique","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1648-sell-diminishing-valued-colored-balls/","title":"1648. Sell Diminishing-Valued Colored Balls","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Binary Search","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1649-create-sorted-array-through-instructions/","title":"1649. Create Sorted Array through Instructions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/165-compare-version-numbers/","title":"165. Compare Version Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1650-lowest-common-ancestor-of-a-binary-tree-iii/","title":"1650. Lowest Common Ancestor of a Binary Tree III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1651-hopper-company-queries-iii/","title":"1651. Hopper Company Queries III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1652-defuse-the-bomb/","title":"1652. Defuse the Bomb","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1653-minimum-deletions-to-make-string-balanced/","title":"1653. Minimum Deletions to Make String Balanced","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Stack","Unsolved"]},{"location":"leetcode/1654-minimum-jumps-to-reach-home/","title":"1654. Minimum Jumps to Reach Home","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Breadth-First Search","Unsolved"]},{"location":"leetcode/1655-distribute-repeating-integers/","title":"1655. Distribute Repeating Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1656-design-an-ordered-stream/","title":"1656. Design an Ordered Stream","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Data Stream","Unsolved"]},{"location":"leetcode/1657-determine-if-two-strings-are-close/","title":"1657. Determine if Two Strings Are Close","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/1658-minimum-operations-to-reduce-x-to-zero/","title":"1658. Minimum Operations to Reduce X to Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/1659-maximize-grid-happiness/","title":"1659. Maximize Grid Happiness","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Memoization","Bitmask","Unsolved"]},{"location":"leetcode/166-fraction-to-recurring-decimal/","title":"166. Fraction to Recurring Decimal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Unsolved"]},{"location":"leetcode/1660-correct-a-binary-tree/","title":"1660. Correct a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1661-average-time-of-process-per-machine/","title":"1661. Average Time of Process per Machine","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1662-check-if-two-string-arrays-are-equivalent/","title":"1662. Check If Two String Arrays are Equivalent","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/1663-smallest-string-with-a-given-numeric-value/","title":"1663. Smallest String With A Given Numeric Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1664-ways-to-make-a-fair-array/","title":"1664. Ways to Make a Fair Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1665-minimum-initial-energy-to-finish-tasks/","title":"1665. Minimum Initial Energy to Finish Tasks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1666-change-the-root-of-a-binary-tree/","title":"1666. Change the Root of a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1667-fix-names-in-a-table/","title":"1667. Fix Names in a Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1668-maximum-repeating-substring/","title":"1668. Maximum Repeating Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","String Matching","Unsolved"]},{"location":"leetcode/1669-merge-in-between-linked-lists/","title":"1669. Merge In Between Linked Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/167-two-sum-ii-input-array-is-sorted/","title":"167. Two Sum II - Input Array Is Sorted","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Unsolved"]},{"location":"leetcode/1670-design-front-middle-back-queue/","title":"1670. Design Front Middle Back Queue","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Design","Queue","Data Stream","Unsolved"]},{"location":"leetcode/1671-minimum-number-of-removals-to-make-mountain-array/","title":"1671. Minimum Number of Removals to Make Mountain Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1672-richest-customer-wealth/","title":"1672. Richest Customer Wealth","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/1673-find-the-most-competitive-subsequence/","title":"1673. Find the Most Competitive Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/1674-minimum-moves-to-make-array-complementary/","title":"1674. Minimum Moves to Make Array Complementary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/1675-minimize-deviation-in-array/","title":"1675. Minimize Deviation in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/1676-lowest-common-ancestor-of-a-binary-tree-iv/","title":"1676. Lowest Common Ancestor of a Binary Tree IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1677-products-worth-over-invoices/","title":"1677. Product's Worth Over Invoices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1678-goal-parser-interpretation/","title":"1678. Goal Parser Interpretation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1679-max-number-of-k-sum-pairs/","title":"1679. Max Number of K-Sum Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/168-excel-sheet-column-title/","title":"168. Excel Sheet Column Title","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1680-concatenation-of-consecutive-binary-numbers/","title":"1680. Concatenation of Consecutive Binary Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Simulation","Unsolved"]},{"location":"leetcode/1681-minimum-incompatibility/","title":"1681. Minimum Incompatibility","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1682-longest-palindromic-subsequence-ii/","title":"1682. Longest Palindromic Subsequence II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1683-invalid-tweets/","title":"1683. Invalid Tweets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1684-count-the-number-of-consistent-strings/","title":"1684. Count the Number of Consistent Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Bit Manipulation","Unsolved"]},{"location":"leetcode/1685-sum-of-absolute-differences-in-a-sorted-array/","title":"1685. Sum of Absolute Differences in a Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Prefix Sum","Unsolved"]},{"location":"leetcode/1686-stone-game-vi/","title":"1686. Stone Game VI","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Sorting","Heap (Priority Queue)","Game Theory","Unsolved"]},{"location":"leetcode/1687-delivering-boxes-from-storage-to-ports/","title":"1687. Delivering Boxes from Storage to Ports","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Segment Tree","Queue","Heap (Priority Queue)","Monotonic Queue","Unsolved"]},{"location":"leetcode/1688-count-of-matches-in-tournament/","title":"1688. Count of Matches in Tournament","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Unsolved"]},{"location":"leetcode/1689-partitioning-into-minimum-number-of-deci-binary-numbers/","title":"1689. Partitioning Into Minimum Number Of Deci-Binary Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/169-majority-element/","title":"169. Majority Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Divide and Conquer","Sorting","Counting","Unsolved"]},{"location":"leetcode/1690-stone-game-vii/","title":"1690. Stone Game VII","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/1691-maximum-height-by-stacking-cuboids/","title":"1691. Maximum Height by Stacking Cuboids","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/1692-count-ways-to-distribute-candies/","title":"1692. Count Ways to Distribute Candies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/1693-daily-leads-and-partners/","title":"1693. Daily Leads and Partners","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1694-reformat-phone-number/","title":"1694. Reformat Phone Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1695-maximum-erasure-value/","title":"1695. Maximum Erasure Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/1696-jump-game-vi/","title":"1696. Jump Game VI","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Queue","Sliding Window","Heap (Priority Queue)","Monotonic Queue","Unsolved"]},{"location":"leetcode/1697-checking-existence-of-edge-length-limited-paths/","title":"1697. Checking Existence of Edge Length Limited Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Union Find","Graph","Sorting","Unsolved"]},{"location":"leetcode/1698-number-of-distinct-substrings-in-a-string/","title":"1698. Number of Distinct Substrings in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Trie","Rolling Hash","Suffix Array","Hash Function","Unsolved"]},{"location":"leetcode/1699-number-of-calls-between-two-persons/","title":"1699. Number of Calls Between Two Persons","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/17-letter-combinations-of-a-phone-number/","title":"17. Letter Combinations of a Phone Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Backtracking","Unsolved"]},{"location":"leetcode/170-two-sum-iii-data-structure-design/","title":"170. Two Sum III - Data structure design","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Design","Data Stream","Unsolved"]},{"location":"leetcode/1700-number-of-students-unable-to-eat-lunch/","title":"1700. Number of Students Unable to Eat Lunch","text":"C++ <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint countStudents(vector&lt;int&gt;&amp; students, vector&lt;int&gt;&amp; sandwiches) {\nint count[2] = {};\nint n = students.size();\nfor (auto &amp;i : students)\ncount[i]++;\nint i;\nfor (i = 0; i &lt; n &amp;&amp; count[sandwiches[i]]; i++)\ncount[sandwiches[i]]--;\nreturn n - i;\n}\n};\n</code></pre>","tags":["Array","Stack","Queue","Simulation"]},{"location":"leetcode/1701-average-waiting-time/","title":"1701. Average Waiting Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/1702-maximum-binary-string-after-change/","title":"1702. Maximum Binary String After Change","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1703-minimum-adjacent-swaps-for-k-consecutive-ones/","title":"1703. Minimum Adjacent Swaps for K Consecutive Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/1704-determine-if-string-halves-are-alike/","title":"1704. Determine if String Halves Are Alike","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Counting","Unsolved"]},{"location":"leetcode/1705-maximum-number-of-eaten-apples/","title":"1705. Maximum Number of Eaten Apples","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1706-where-will-the-ball-fall/","title":"1706. Where Will the Ball Fall","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Depth-First Search","Matrix","Simulation","Unsolved"]},{"location":"leetcode/1707-maximum-xor-with-an-element-from-array/","title":"1707. Maximum XOR With an Element From Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Trie","Unsolved"]},{"location":"leetcode/1708-largest-subarray-length-k/","title":"1708. Largest Subarray Length K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1709-biggest-window-between-visits/","title":"1709. Biggest Window Between Visits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/171-excel-sheet-column-number/","title":"171. Excel Sheet Column Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1710-maximum-units-on-a-truck/","title":"1710. Maximum Units on a Truck","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1711-count-good-meals/","title":"1711. Count Good Meals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1712-ways-to-split-array-into-three-subarrays/","title":"1712. Ways to Split Array Into Three Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Prefix Sum","Unsolved"]},{"location":"leetcode/1713-minimum-operations-to-make-a-subsequence/","title":"1713. Minimum Operations to Make a Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Greedy","Unsolved"]},{"location":"leetcode/1714-sum-of-special-evenly-spaced-elements-in-array/","title":"1714. Sum Of Special Evenly-Spaced Elements In Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1715-count-apples-and-oranges/","title":"1715. Count Apples and Oranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1716-calculate-money-in-leetcode-bank/","title":"1716. Calculate Money in Leetcode Bank","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1717-maximum-score-from-removing-substrings/","title":"1717. Maximum Score From Removing Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Unsolved"]},{"location":"leetcode/1718-construct-the-lexicographically-largest-valid-sequence/","title":"1718. Construct the Lexicographically Largest Valid Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/1719-number-of-ways-to-reconstruct-a-tree/","title":"1719. Number Of Ways To Reconstruct A Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Graph","Unsolved"]},{"location":"leetcode/172-factorial-trailing-zeroes/","title":"172. Factorial Trailing Zeroes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1720-decode-xored-array/","title":"1720. Decode XORed Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/1721-swapping-nodes-in-a-linked-list/","title":"1721. Swapping Nodes in a Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/1722-minimize-hamming-distance-after-swap-operations/","title":"1722. Minimize Hamming Distance After Swap Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Union Find","Unsolved"]},{"location":"leetcode/1723-find-minimum-time-to-finish-all-jobs/","title":"1723. Find Minimum Time to Finish All Jobs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1724-checking-existence-of-edge-length-limited-paths-ii/","title":"1724. Checking Existence of Edge Length Limited Paths II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Union Find","Graph","Minimum Spanning Tree","Unsolved"]},{"location":"leetcode/1725-number-of-rectangles-that-can-form-the-largest-square/","title":"1725. Number Of Rectangles That Can Form The Largest Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1726-tuple-with-same-product/","title":"1726. Tuple with Same Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1727-largest-submatrix-with-rearrangements/","title":"1727. Largest Submatrix With Rearrangements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Matrix","Unsolved"]},{"location":"leetcode/1728-cat-and-mouse-ii/","title":"1728. Cat and Mouse II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Graph","Topological Sort","Memoization","Matrix","Game Theory","Unsolved"]},{"location":"leetcode/1729-find-followers-count/","title":"1729. Find Followers Count","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/173-binary-search-tree-iterator/","title":"173. Binary Search Tree Iterator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Design","Binary Search Tree","Binary Tree","Iterator","Unsolved"]},{"location":"leetcode/1730-shortest-path-to-get-food/","title":"1730. Shortest Path to Get Food","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1731-the-number-of-employees-which-report-to-each-employee/","title":"1731. The Number of Employees Which Report to Each Employee","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1732-find-the-highest-altitude/","title":"1732. Find the Highest Altitude","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/1733-minimum-number-of-people-to-teach/","title":"1733. Minimum Number of People to Teach","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1734-decode-xored-permutation/","title":"1734. Decode XORed Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/1735-count-ways-to-make-array-with-product/","title":"1735. Count Ways to Make Array With Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Combinatorics","Number Theory","Unsolved"]},{"location":"leetcode/1736-latest-time-by-replacing-hidden-digits/","title":"1736. Latest Time by Replacing Hidden Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1737-change-minimum-characters-to-satisfy-one-of-three-conditions/","title":"1737. Change Minimum Characters to Satisfy One of Three Conditions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Prefix Sum","Unsolved"]},{"location":"leetcode/1738-find-kth-largest-xor-coordinate-value/","title":"1738. Find Kth Largest XOR Coordinate Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Bit Manipulation","Heap (Priority Queue)","Matrix","Prefix Sum","Quickselect","Unsolved"]},{"location":"leetcode/1739-building-boxes/","title":"1739. Building Boxes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Greedy","Unsolved"]},{"location":"leetcode/174-dungeon-game/","title":"174. Dungeon Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/1740-find-distance-in-a-binary-tree/","title":"1740. Find Distance in a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1741-find-total-time-spent-by-each-employee/","title":"1741. Find Total Time Spent by Each Employee","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1742-maximum-number-of-balls-in-a-box/","title":"1742. Maximum Number of Balls in a Box","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Counting","Unsolved"]},{"location":"leetcode/1743-restore-the-array-from-adjacent-pairs/","title":"1743. Restore the Array From Adjacent Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1744-can-you-eat-your-favorite-candy-on-your-favorite-day/","title":"1744. Can You Eat Your Favorite Candy on Your Favorite Day?","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/1745-palindrome-partitioning-iv/","title":"1745. Palindrome Partitioning IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1746-maximum-subarray-sum-after-one-operation/","title":"1746. Maximum Subarray Sum After One Operation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1747-leetflex-banned-accounts/","title":"1747. Leetflex Banned Accounts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1748-sum-of-unique-elements/","title":"1748. Sum of Unique Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/1749-maximum-absolute-sum-of-any-subarray/","title":"1749. Maximum Absolute Sum of Any Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/175-combine-two-tables/","title":"175. Combine Two Tables","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1750-minimum-length-of-string-after-deleting-similar-ends/","title":"1750. Minimum Length of String After Deleting Similar Ends","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1751-maximum-number-of-events-that-can-be-attended-ii/","title":"1751. Maximum Number of Events That Can Be Attended II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/1752-check-if-array-is-sorted-and-rotated/","title":"1752. Check if Array Is Sorted and Rotated","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1753-maximum-score-from-removing-stones/","title":"1753. Maximum Score From Removing Stones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1754-largest-merge-of-two-strings/","title":"1754. Largest Merge Of Two Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/1755-closest-subsequence-sum/","title":"1755. Closest Subsequence Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1756-design-most-recently-used-queue/","title":"1756. Design Most Recently Used Queue","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Stack","Design","Binary Indexed Tree","Ordered Set","Unsolved"]},{"location":"leetcode/1757-recyclable-and-low-fat-products/","title":"1757. Recyclable and Low Fat Products","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1758-minimum-changes-to-make-alternating-binary-string/","title":"1758. Minimum Changes To Make Alternating Binary String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1759-count-number-of-homogenous-substrings/","title":"1759. Count Number of Homogenous Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/176-second-highest-salary/","title":"176. Second Highest Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1760-minimum-limit-of-balls-in-a-bag/","title":"1760. Minimum Limit of Balls in a Bag","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1761-minimum-degree-of-a-connected-trio-in-a-graph/","title":"1761. Minimum Degree of a Connected Trio in a Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Unsolved"]},{"location":"leetcode/1762-buildings-with-an-ocean-view/","title":"1762. Buildings With an Ocean View","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1763-longest-nice-substring/","title":"1763. Longest Nice Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Divide and Conquer","Bit Manipulation","Sliding Window","Unsolved"]},{"location":"leetcode/1764-form-array-by-concatenating-subarrays-of-another-array/","title":"1764. Form Array by Concatenating Subarrays of Another Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","String Matching","Unsolved"]},{"location":"leetcode/1765-map-of-highest-peak/","title":"1765. Map of Highest Peak","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1766-tree-of-coprimes/","title":"1766. Tree of Coprimes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/1767-find-the-subtasks-that-did-not-execute/","title":"1767. Find the Subtasks That Did Not Execute","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1768-merge-strings-alternately/","title":"1768. Merge Strings Alternately","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1769-minimum-number-of-operations-to-move-all-balls-to-each-box/","title":"1769. Minimum Number of Operations to Move All Balls to Each Box","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/177-nth-highest-salary/","title":"177. Nth Highest Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1770-maximum-score-from-performing-multiplication-operations/","title":"1770. Maximum Score from Performing Multiplication Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1771-maximize-palindrome-length-from-subsequences/","title":"1771. Maximize Palindrome Length From Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1772-sort-features-by-popularity/","title":"1772. Sort Features by Popularity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/1773-count-items-matching-a-rule/","title":"1773. Count Items Matching a Rule","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/1774-closest-dessert-cost/","title":"1774. Closest Dessert Cost","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/1775-equal-sum-arrays-with-minimum-number-of-operations/","title":"1775. Equal Sum Arrays With Minimum Number of Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Counting","Unsolved"]},{"location":"leetcode/1776-car-fleet-ii/","title":"1776. Car Fleet II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Stack","Heap (Priority Queue)","Monotonic Stack","Unsolved"]},{"location":"leetcode/1777-products-price-for-each-store/","title":"1777. Product's Price for Each Store","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1778-shortest-path-in-a-hidden-grid/","title":"1778. Shortest Path in a Hidden Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Interactive","Unsolved"]},{"location":"leetcode/1779-find-nearest-point-that-has-the-same-x-or-y-coordinate/","title":"1779. Find Nearest Point That Has the Same X or Y Coordinate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/178-rank-scores/","title":"178. Rank Scores","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1780-check-if-number-is-a-sum-of-powers-of-three/","title":"1780. Check if Number is a Sum of Powers of Three","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1781-sum-of-beauty-of-all-substrings/","title":"1781. Sum of Beauty of All Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/1782-count-pairs-of-nodes/","title":"1782. Count Pairs Of Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","Binary Search","Graph","Unsolved"]},{"location":"leetcode/1783-grand-slam-titles/","title":"1783. Grand Slam Titles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1784-check-if-binary-string-has-at-most-one-segment-of-ones/","title":"1784. Check if Binary String Has at Most One Segment of Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1785-minimum-elements-to-add-to-form-a-given-sum/","title":"1785. Minimum Elements to Add to Form a Given Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1786-number-of-restricted-paths-from-first-to-last-node/","title":"1786. Number of Restricted Paths From First to Last Node","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Graph","Topological Sort","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/1787-make-the-xor-of-all-segments-equal-to-zero/","title":"1787. Make the XOR of All Segments Equal to Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Unsolved"]},{"location":"leetcode/1788-maximize-the-beauty-of-the-garden/","title":"1788. Maximize the Beauty of the Garden","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Prefix Sum","Unsolved"]},{"location":"leetcode/1789-primary-department-for-each-employee/","title":"1789. Primary Department for Each Employee","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/179-largest-number/","title":"179. Largest Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1790-check-if-one-string-swap-can-make-strings-equal/","title":"1790. Check if One String Swap Can Make Strings Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/1791-find-center-of-star-graph/","title":"1791. Find Center of Star Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Unsolved"]},{"location":"leetcode/1792-maximum-average-pass-ratio/","title":"1792. Maximum Average Pass Ratio","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1793-maximum-score-of-a-good-subarray/","title":"1793. Maximum Score of a Good Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1794-count-pairs-of-equal-substrings-with-minimum-difference/","title":"1794. Count Pairs of Equal Substrings With Minimum Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Unsolved"]},{"location":"leetcode/1795-rearrange-products-table/","title":"1795. Rearrange Products Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1796-second-largest-digit-in-a-string/","title":"1796. Second Largest Digit in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1797-design-authentication-manager/","title":"1797. Design Authentication Manager","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Unsolved"]},{"location":"leetcode/1798-maximum-number-of-consecutive-values-you-can-make/","title":"1798. Maximum Number of Consecutive Values You Can Make","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1799-maximize-score-after-n-operations/","title":"1799. Maximize Score After N Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Backtracking","Bit Manipulation","Number Theory","Bitmask","Unsolved"]},{"location":"leetcode/18-4sum/","title":"18. 4Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/180-consecutive-numbers/","title":"180. Consecutive Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1800-maximum-ascending-subarray-sum/","title":"1800. Maximum Ascending Subarray Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1801-number-of-orders-in-the-backlog/","title":"1801. Number of Orders in the Backlog","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Simulation","Unsolved"]},{"location":"leetcode/1802-maximum-value-at-a-given-index-in-a-bounded-array/","title":"1802. Maximum Value at a Given Index in a Bounded Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Greedy","Unsolved"]},{"location":"leetcode/1803-count-pairs-with-xor-in-a-range/","title":"1803. Count Pairs With XOR in a Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Trie","Unsolved"]},{"location":"leetcode/1804-implement-trie-ii-prefix-tree/","title":"1804. Implement Trie II (Prefix Tree)","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/1805-number-of-different-integers-in-a-string/","title":"1805. Number of Different Integers in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1806-minimum-number-of-operations-to-reinitialize-a-permutation/","title":"1806. Minimum Number of Operations to Reinitialize a Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Simulation","Unsolved"]},{"location":"leetcode/1807-evaluate-the-bracket-pairs-of-a-string/","title":"1807. Evaluate the Bracket Pairs of a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/1808-maximize-number-of-nice-divisors/","title":"1808. Maximize Number of Nice Divisors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/1809-ad-free-sessions/","title":"1809. Ad-Free Sessions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/181-employees-earning-more-than-their-managers/","title":"181. Employees Earning More Than Their Managers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1810-minimum-path-cost-in-a-hidden-grid/","title":"1810. Minimum Path Cost in a Hidden Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Heap (Priority Queue)","Interactive","Unsolved"]},{"location":"leetcode/1811-find-interview-candidates/","title":"1811. Find Interview Candidates","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1812-determine-color-of-a-chessboard-square/","title":"1812. Determine Color of a Chessboard Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1813-sentence-similarity-iii/","title":"1813. Sentence Similarity III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","String","Unsolved"]},{"location":"leetcode/1814-count-nice-pairs-in-an-array/","title":"1814. Count Nice Pairs in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Counting","Unsolved"]},{"location":"leetcode/1815-maximum-number-of-groups-getting-fresh-donuts/","title":"1815. Maximum Number of Groups Getting Fresh Donuts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Memoization","Bitmask","Unsolved"]},{"location":"leetcode/1816-truncate-sentence/","title":"1816. Truncate Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/1817-finding-the-users-active-minutes/","title":"1817. Finding the Users Active Minutes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1818-minimum-absolute-sum-difference/","title":"1818. Minimum Absolute Sum Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Ordered Set","Unsolved"]},{"location":"leetcode/1819-number-of-different-subsequences-gcds/","title":"1819. Number of Different Subsequences GCDs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Counting","Number Theory","Unsolved"]},{"location":"leetcode/182-duplicate-emails/","title":"182. Duplicate Emails","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1820-maximum-number-of-accepted-invitations/","title":"1820. Maximum Number of Accepted Invitations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Matrix","Unsolved"]},{"location":"leetcode/1821-find-customers-with-positive-revenue-this-year/","title":"1821. Find Customers With Positive Revenue this Year","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1822-sign-of-the-product-of-an-array/","title":"1822. Sign of the Product of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1823-find-the-winner-of-the-circular-game/","title":"1823. Find the Winner of the Circular Game","text":"C++C++C++ <p>\\(Time: O(N*K)\\)</p> <p>\\(Space: O(N)\\)</p> <pre><code>class Solution {\npublic:\nint findTheWinner(int n, int k) {\nqueue&lt;int&gt; q;\nfor (int i = 1; i &lt;= n; i++)\nq.push(i);\nwhile(q.size() &gt; 1) {\nint x = k;\nwhile (--x &gt; 0) {\nq.push(q.front());\nq.pop();\n}\ncout &lt;&lt; q.front() &lt;&lt; endl;;\nq.pop();\n}\nreturn q.front();\n}\n};\n</code></pre> <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(N)\\)</p> <pre><code>class Solution {\npublic:\nint findTheWinner(int n, int k) {\nreturn r(n, k) + 1;\n}\nint r(int n, int k) {\nif (n == 1)\nreturn 0;\nreturn (r(n-1, k) + k) % n;\n}\n};\n</code></pre> <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint findTheWinner(int n, int k) {\nint ans = 0;\nfor (int i = 1; i &lt;= n; i++) {\nans = (ans + k) % i;\n}\nreturn ans + 1;\n}\n};\n</code></pre>","tags":["Array","Math","Recursion","Queue","Simulation","Unsolved"]},{"location":"leetcode/1824-minimum-sideway-jumps/","title":"1824. Minimum Sideway Jumps","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/1825-finding-mk-average/","title":"1825. Finding MK Average","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Queue","Heap (Priority Queue)","Data Stream","Ordered Set","Unsolved"]},{"location":"leetcode/1826-faulty-sensor/","title":"1826. Faulty Sensor","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/1827-minimum-operations-to-make-the-array-increasing/","title":"1827. Minimum Operations to Make the Array Increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1828-queries-on-number-of-points-inside-a-circle/","title":"1828. Queries on Number of Points Inside a Circle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/1829-maximum-xor-for-each-query/","title":"1829. Maximum XOR for Each Query","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/183-customers-who-never-order/","title":"183. Customers Who Never Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1830-minimum-number-of-operations-to-make-string-sorted/","title":"1830. Minimum Number of Operations to Make String Sorted","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Combinatorics","Unsolved"]},{"location":"leetcode/1831-maximum-transaction-each-day/","title":"1831. Maximum Transaction Each Day","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1832-check-if-the-sentence-is-pangram/","title":"1832. Check if the Sentence Is Pangram","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1833-maximum-ice-cream-bars/","title":"1833. Maximum Ice Cream Bars","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1834-single-threaded-cpu/","title":"1834. Single-Threaded CPU","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1835-find-xor-sum-of-all-pairs-bitwise-and/","title":"1835. Find XOR Sum of All Pairs Bitwise AND","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/1836-remove-duplicates-from-an-unsorted-linked-list/","title":"1836. Remove Duplicates From an Unsorted Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Unsolved"]},{"location":"leetcode/1837-sum-of-digits-in-base-k/","title":"1837. Sum of Digits in Base K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1838-frequency-of-the-most-frequent-element/","title":"1838. Frequency of the Most Frequent Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Sliding Window","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/1839-longest-substring-of-all-vowels-in-order/","title":"1839. Longest Substring Of All Vowels in Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sliding Window","Unsolved"]},{"location":"leetcode/184-department-highest-salary/","title":"184. Department Highest Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1840-maximum-building-height/","title":"1840. Maximum Building Height","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/1841-league-statistics/","title":"1841. League Statistics","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1842-next-palindrome-using-same-digits/","title":"1842. Next Palindrome Using Same Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1843-suspicious-bank-accounts/","title":"1843. Suspicious Bank Accounts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1844-replace-all-digits-with-characters/","title":"1844. Replace All Digits with Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1845-seat-reservation-manager/","title":"1845. Seat Reservation Manager","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1846-maximum-element-after-decreasing-and-rearranging/","title":"1846. Maximum Element After Decreasing and Rearranging","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1847-closest-room/","title":"1847. Closest Room","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1848-minimum-distance-to-the-target-element/","title":"1848. Minimum Distance to the Target Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/1849-splitting-a-string-into-descending-consecutive-values/","title":"1849. Splitting a String Into Descending Consecutive Values","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Unsolved"]},{"location":"leetcode/185-department-top-three-salaries/","title":"185. Department Top Three Salaries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1850-minimum-adjacent-swaps-to-reach-the-kth-smallest-number/","title":"1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/1851-minimum-interval-to-include-each-query/","title":"1851. Minimum Interval to Include Each Query","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Line Sweep","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1852-distinct-numbers-in-each-subarray/","title":"1852. Distinct Numbers in Each Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/1853-convert-date-format/","title":"1853. Convert Date Format","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1854-maximum-population-year/","title":"1854. Maximum Population Year","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Counting","Unsolved"]},{"location":"leetcode/1855-maximum-distance-between-a-pair-of-values/","title":"1855. Maximum Distance Between a Pair of Values","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Greedy","Unsolved"]},{"location":"leetcode/1856-maximum-subarray-min-product/","title":"1856. Maximum Subarray Min-Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Prefix Sum","Unsolved"]},{"location":"leetcode/1857-largest-color-value-in-a-directed-graph/","title":"1857. Largest Color Value in a Directed Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Dynamic Programming","Graph","Topological Sort","Memoization","Counting","Unsolved"]},{"location":"leetcode/1858-longest-word-with-all-prefixes/","title":"1858. Longest Word With All Prefixes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Trie","Unsolved"]},{"location":"leetcode/1859-sorting-the-sentence/","title":"1859. Sorting the Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sorting","Unsolved"]},{"location":"leetcode/186-reverse-words-in-a-string-ii/","title":"186. Reverse Words in a String II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/1860-incremental-memory-leak/","title":"1860. Incremental Memory Leak","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Simulation","Unsolved"]},{"location":"leetcode/1861-rotating-the-box/","title":"1861. Rotating the Box","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Matrix","Unsolved"]},{"location":"leetcode/1862-sum-of-floored-pairs/","title":"1862. Sum of Floored Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Binary Search","Prefix Sum","Unsolved"]},{"location":"leetcode/1863-sum-of-all-subset-xor-totals/","title":"1863. Sum of All Subset XOR Totals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Backtracking","Bit Manipulation","Combinatorics","Unsolved"]},{"location":"leetcode/1864-minimum-number-of-swaps-to-make-the-binary-string-alternating/","title":"1864. Minimum Number of Swaps to Make the Binary String Alternating","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1865-finding-pairs-with-a-certain-sum/","title":"1865. Finding Pairs With a Certain Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Unsolved"]},{"location":"leetcode/1866-number-of-ways-to-rearrange-sticks-with-k-sticks-visible/","title":"1866. Number of Ways to Rearrange Sticks With K Sticks Visible","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/1867-orders-with-maximum-quantity-above-average/","title":"1867. Orders With Maximum Quantity Above Average","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1868-product-of-two-run-length-encoded-arrays/","title":"1868. Product of Two Run-Length Encoded Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/1869-longer-contiguous-segments-of-ones-than-zeros/","title":"1869. Longer Contiguous Segments of Ones than Zeros","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/187-repeated-dna-sequences/","title":"187. Repeated DNA Sequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Sliding Window","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/1870-minimum-speed-to-arrive-on-time/","title":"1870. Minimum Speed to Arrive on Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1871-jump-game-vii/","title":"1871. Jump Game VII","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Prefix Sum","Unsolved"]},{"location":"leetcode/1872-stone-game-viii/","title":"1872. Stone Game VIII","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Prefix Sum","Game Theory","Unsolved"]},{"location":"leetcode/1873-calculate-special-bonus/","title":"1873. Calculate Special Bonus","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1874-minimize-product-sum-of-two-arrays/","title":"1874. Minimize Product Sum of Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1875-group-employees-of-the-same-salary/","title":"1875. Group Employees of the Same Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1876-substrings-of-size-three-with-distinct-characters/","title":"1876. Substrings of Size Three with Distinct Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Counting","Unsolved"]},{"location":"leetcode/1877-minimize-maximum-pair-sum-in-array/","title":"1877. Minimize Maximum Pair Sum in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1878-get-biggest-three-rhombus-sums-in-a-grid/","title":"1878. Get Biggest Three Rhombus Sums in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Heap (Priority Queue)","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/1879-minimum-xor-sum-of-two-arrays/","title":"1879. Minimum XOR Sum of Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/188-best-time-to-buy-and-sell-stock-iv/","title":"188. Best Time to Buy and Sell Stock IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1880-check-if-word-equals-summation-of-two-words/","title":"1880. Check if Word Equals Summation of Two Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1881-maximum-value-after-insertion/","title":"1881. Maximum Value after Insertion","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/1882-process-tasks-using-servers/","title":"1882. Process Tasks Using Servers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1883-minimum-skips-to-arrive-at-meeting-on-time/","title":"1883. Minimum Skips to Arrive at Meeting On Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1884-egg-drop-with-2-eggs-and-n-floors/","title":"1884. Egg Drop With 2 Eggs and N Floors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/1885-count-pairs-in-two-arrays/","title":"1885. Count Pairs in Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/1886-determine-whether-matrix-can-be-obtained-by-rotation/","title":"1886. Determine Whether Matrix Can Be Obtained By Rotation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/1887-reduction-operations-to-make-the-array-elements-equal/","title":"1887. Reduction Operations to Make the Array Elements Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1888-minimum-number-of-flips-to-make-the-binary-string-alternating/","title":"1888. Minimum Number of Flips to Make the Binary String Alternating","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Greedy","Sliding Window","Unsolved"]},{"location":"leetcode/1889-minimum-space-wasted-from-packaging/","title":"1889. Minimum Space Wasted From Packaging","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/189-rotate-array/","title":"189. Rotate Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Two Pointers","Unsolved"]},{"location":"leetcode/1890-the-latest-login-in-2020/","title":"1890. The Latest Login in 2020","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1891-cutting-ribbons/","title":"1891. Cutting Ribbons","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1892-page-recommendations-ii/","title":"1892. Page Recommendations II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1893-check-if-all-the-integers-in-a-range-are-covered/","title":"1893. Check if All the Integers in a Range Are Covered","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/1894-find-the-student-that-will-replace-the-chalk/","title":"1894. Find the Student that Will Replace the Chalk","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Simulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1895-largest-magic-square/","title":"1895. Largest Magic Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/1896-minimum-cost-to-change-the-final-value-of-expression/","title":"1896. Minimum Cost to Change the Final Value of Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Dynamic Programming","Stack","Unsolved"]},{"location":"leetcode/1897-redistribute-characters-to-make-all-strings-equal/","title":"1897. Redistribute Characters to Make All Strings Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/1898-maximum-number-of-removable-characters/","title":"1898. Maximum Number of Removable Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Binary Search","Unsolved"]},{"location":"leetcode/1899-merge-triplets-to-form-target-triplet/","title":"1899. Merge Triplets to Form Target Triplet","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/19-remove-nth-node-from-end-of-list/","title":"19. Remove Nth Node From End of List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/190-reverse-bits/","title":"190. Reverse Bits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Divide and Conquer","Bit Manipulation","Unsolved"]},{"location":"leetcode/1900-the-earliest-and-latest-rounds-where-players-compete/","title":"1900. The Earliest and Latest Rounds Where Players Compete","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/1901-find-a-peak-element-ii/","title":"1901. Find a Peak Element II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Unsolved"]},{"location":"leetcode/1902-depth-of-bst-given-insertion-order/","title":"1902. Depth of BST Given Insertion Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Search Tree","Binary Tree","Ordered Set","Unsolved"]},{"location":"leetcode/1903-largest-odd-number-in-string/","title":"1903. Largest Odd Number in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Greedy","Unsolved"]},{"location":"leetcode/1904-the-number-of-full-rounds-you-have-played/","title":"1904. The Number of Full Rounds You Have Played","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/1905-count-sub-islands/","title":"1905. Count Sub Islands","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/1906-minimum-absolute-difference-queries/","title":"1906. Minimum Absolute Difference Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/1907-count-salary-categories/","title":"1907. Count Salary Categories","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1908-game-of-nim/","title":"1908. Game of Nim","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Bit Manipulation","Brainteaser","Game Theory","Unsolved"]},{"location":"leetcode/1909-remove-one-element-to-make-the-array-strictly-increasing/","title":"1909. Remove One Element to Make the Array Strictly Increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/191-number-of-1-bits/","title":"191. Number of 1 Bits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Divide and Conquer","Bit Manipulation","Unsolved"]},{"location":"leetcode/1910-remove-all-occurrences-of-a-substring/","title":"1910. Remove All Occurrences of a Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1911-maximum-alternating-subsequence-sum/","title":"1911. Maximum Alternating Subsequence Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1912-design-movie-rental-system/","title":"1912. Design Movie Rental System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/1913-maximum-product-difference-between-two-pairs/","title":"1913. Maximum Product Difference Between Two Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/1914-cyclically-rotating-a-grid/","title":"1914. Cyclically Rotating a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/1915-number-of-wonderful-substrings/","title":"1915. Number of Wonderful Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/1916-count-ways-to-build-rooms-in-an-ant-colony/","title":"1916. Count Ways to Build Rooms in an Ant Colony","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Tree","Graph","Topological Sort","Combinatorics","Unsolved"]},{"location":"leetcode/1917-leetcodify-friends-recommendations/","title":"1917. Leetcodify Friends Recommendations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1918-kth-smallest-subarray-sum/","title":"1918. Kth Smallest Subarray Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sliding Window","Unsolved"]},{"location":"leetcode/1919-leetcodify-similar-friends/","title":"1919. Leetcodify Similar Friends","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/192-word-frequency/","title":"192. Word Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Shell","Unsolved"]},{"location":"leetcode/1920-build-array-from-permutation/","title":"1920. Build Array from Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/1921-eliminate-maximum-number-of-monsters/","title":"1921. Eliminate Maximum Number of Monsters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1922-count-good-numbers/","title":"1922. Count Good Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/1923-longest-common-subpath/","title":"1923. Longest Common Subpath","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Rolling Hash","Suffix Array","Hash Function","Unsolved"]},{"location":"leetcode/1924-erect-the-fence-ii/","title":"1924. Erect the Fence II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/1925-count-square-sum-triples/","title":"1925. Count Square Sum Triples","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/1926-nearest-exit-from-entrance-in-maze/","title":"1926. Nearest Exit from Entrance in Maze","text":"C++ <p>\\(Time: O(N*M)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint nearestExit(vector&lt;vector&lt;char&gt;&gt;&amp; maze, vector&lt;int&gt;&amp; entrance) {\nqueue&lt;pair&lt;int,int&gt;&gt; q;\nq.push({entrance[0], entrance[1]});\nint m = maze.size();\nint n = maze[0].size();\nint moves = 1;\nint dir[5] = {0, 1, 0, -1, 0};\nmaze[entrance[0]][entrance[1]] = '+';\nwhile(!q.empty()) {\nfor (int l = q.size(); l &gt; 0; l--) {\npair&lt;int,int&gt; &amp;t = q.front();\nfor (int i = 0; i &lt; 4; i++) {\nint x = t.first + dir[i];\nint y = t.second + dir[i+1];\nif (x &gt;= 0 &amp;&amp; y &gt;= 0 &amp;&amp; x &lt;= m-1 &amp;&amp; y &lt;= n-1 &amp;&amp; maze[x][y] == '.') {\nif (x == 0 || y == 0 || x == m-1 || y == n-1) {\nreturn moves;\n}\nmaze[x][y] = '+';\nq.push({x, y});\n}\n}\nq.pop();\n}\nmoves++;\n}\nreturn -1;\n}\n};\n</code></pre>","tags":["Array","Breadth-First Search","Matrix"]},{"location":"leetcode/1927-sum-game/","title":"1927. Sum Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Game Theory","Unsolved"]},{"location":"leetcode/1928-minimum-cost-to-reach-destination-in-time/","title":"1928. Minimum Cost to Reach Destination in Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Graph","Unsolved"]},{"location":"leetcode/1929-concatenation-of-array/","title":"1929. Concatenation of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/193-valid-phone-numbers/","title":"193. Valid Phone Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Shell","Unsolved"]},{"location":"leetcode/1930-unique-length-3-palindromic-subsequences/","title":"1930. Unique Length-3 Palindromic Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Prefix Sum","Unsolved"]},{"location":"leetcode/1931-painting-a-grid-with-three-different-colors/","title":"1931. Painting a Grid With Three Different Colors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/1932-merge-bsts-to-create-single-bst/","title":"1932. Merge BSTs to Create Single BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Binary Search","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1933-check-if-string-is-decomposable-into-value-equal-substrings/","title":"1933. Check if String Is Decomposable Into Value-Equal Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1934-confirmation-rate/","title":"1934. Confirmation Rate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1935-maximum-number-of-words-you-can-type/","title":"1935. Maximum Number of Words You Can Type","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/1936-add-minimum-number-of-rungs/","title":"1936. Add Minimum Number of Rungs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1937-maximum-number-of-points-with-cost/","title":"1937. Maximum Number of Points with Cost","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1938-maximum-genetic-difference-query/","title":"1938. Maximum Genetic Difference Query","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Trie","Unsolved"]},{"location":"leetcode/1939-users-that-actively-request-confirmation-messages/","title":"1939. Users That Actively Request Confirmation Messages","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/194-transpose-file/","title":"194. Transpose File","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Shell","Unsolved"]},{"location":"leetcode/1940-longest-common-subsequence-between-sorted-arrays/","title":"1940. Longest Common Subsequence Between Sorted Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/1941-check-if-all-characters-have-equal-number-of-occurrences/","title":"1941. Check if All Characters Have Equal Number of Occurrences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/1942-the-number-of-the-smallest-unoccupied-chair/","title":"1942. The Number of the Smallest Unoccupied Chair","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/1943-describe-the-painting/","title":"1943. Describe the Painting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/1944-number-of-visible-people-in-a-queue/","title":"1944. Number of Visible People in a Queue","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1945-sum-of-digits-of-string-after-convert/","title":"1945. Sum of Digits of String After Convert","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Unsolved"]},{"location":"leetcode/1946-largest-number-after-mutating-substring/","title":"1946. Largest Number After Mutating Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Greedy","Unsolved"]},{"location":"leetcode/1947-maximum-compatibility-score-sum/","title":"1947. Maximum Compatibility Score Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1948-delete-duplicate-folders-in-system/","title":"1948. Delete Duplicate Folders in System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","Hash Function","Unsolved"]},{"location":"leetcode/1949-strong-friendship/","title":"1949. Strong Friendship","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/195-tenth-line/","title":"195. Tenth Line","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Shell","Unsolved"]},{"location":"leetcode/1950-maximum-of-minimum-values-in-all-subarrays/","title":"1950. Maximum of Minimum Values in All Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/1951-all-the-pairs-with-the-maximum-number-of-common-followers/","title":"1951. All the Pairs With the Maximum Number of Common Followers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1952-three-divisors/","title":"1952. Three Divisors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/1953-maximum-number-of-weeks-for-which-you-can-work/","title":"1953. Maximum Number of Weeks for Which You Can Work","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/1954-minimum-garden-perimeter-to-collect-enough-apples/","title":"1954. Minimum Garden Perimeter to Collect Enough Apples","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/1955-count-number-of-special-subsequences/","title":"1955. Count Number of Special Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1956-minimum-time-for-k-virus-variants-to-spread/","title":"1956. Minimum Time For K Virus Variants to Spread","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Binary Search","Geometry","Enumeration","Unsolved"]},{"location":"leetcode/1957-delete-characters-to-make-fancy-string/","title":"1957. Delete Characters to Make Fancy String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1958-check-if-move-is-legal/","title":"1958. Check if Move is Legal","text":"C++ <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nbool checkMove(vector&lt;vector&lt;char&gt;&gt;&amp; board, int rMove, int cMove, char color) {\nint dir[9] = { 1, 0, -1, 0, 1, 1, -1, -1, 1 };\nfor (int d = 0; d &lt; 8; d++) {\nfor (int x = 1; ; x++) {\nint r = rMove + x * dir[d];\nint c = cMove + x * dir[d+1];\nif (r &lt; 0 || c &lt; 0 || r &gt;= 8 || c &gt;= 8 || board[r][c] == '.') {\nbreak;\n}\nif (board[r][c] == color) {\nif (x &gt; 1) {\nreturn true;\n}\nbreak;\n}\n}\n}\nreturn false;\n}\n};\n</code></pre>","tags":["Array","Matrix","Enumeration"]},{"location":"leetcode/1959-minimum-total-space-wasted-with-k-resizing-operations/","title":"1959. Minimum Total Space Wasted With K Resizing Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/196-delete-duplicate-emails/","title":"196. Delete Duplicate Emails","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1960-maximum-product-of-the-length-of-two-palindromic-substrings/","title":"1960. Maximum Product of the Length of Two Palindromic Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/1961-check-if-string-is-a-prefix-of-array/","title":"1961. Check If String Is a Prefix of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/1962-remove-stones-to-minimize-the-total/","title":"1962. Remove Stones to Minimize the Total","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/1963-minimum-number-of-swaps-to-make-the-string-balanced/","title":"1963. Minimum Number of Swaps to Make the String Balanced","text":"C++ <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint minSwaps(string s) {\nint stack = 0;\n// count how many '[' left\nfor (auto&amp; ch : s) {\nif (ch == '[') {\nstack++;\n} else if (stack &gt; 0) {\nstack--;\n}\n}\nreturn (stack+1)/2;\n}\n};\n</code></pre>","tags":["Two Pointers","String","Stack","Greedy"]},{"location":"leetcode/1964-find-the-longest-valid-obstacle-course-at-each-position/","title":"1964. Find the Longest Valid Obstacle Course at Each Position","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Binary Indexed Tree","Unsolved"]},{"location":"leetcode/1965-employees-with-missing-information/","title":"1965. Employees With Missing Information","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1966-binary-searchable-numbers-in-an-unsorted-array/","title":"1966. Binary Searchable Numbers in an Unsorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/1967-number-of-strings-that-appear-as-substrings-in-word/","title":"1967. Number of Strings That Appear as Substrings in Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/1968-array-with-elements-not-equal-to-average-of-neighbors/","title":"1968. Array With Elements Not Equal to Average of Neighbors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/1969-minimum-non-zero-product-of-the-array-elements/","title":"1969. Minimum Non-Zero Product of the Array Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Recursion","Unsolved"]},{"location":"leetcode/197-rising-temperature/","title":"197. Rising Temperature","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1970-last-day-where-you-can-still-cross/","title":"1970. Last Day Where You Can Still Cross","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/1971-find-if-path-exists-in-graph/","title":"1971. Find if Path Exists in Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/1972-first-and-last-call-on-the-same-day/","title":"1972. First and Last Call On the Same Day","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1973-count-nodes-equal-to-sum-of-descendants/","title":"1973. Count Nodes Equal to Sum of Descendants","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/1974-minimum-time-to-type-word-using-special-typewriter/","title":"1974. Minimum Time to Type Word Using Special Typewriter","text":"C++C++ <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint minTimeToType(string word) {\nint distance = word[0] - 'a';\nint count = min(distance, 26 - distance) + 1;\nfor (int i = 0; i &lt; word.size()-1; i++) {\ndistance = abs(word[i+1] - word[i]);\ncount += min(distance, 26 - distance) + 1;\n}\nreturn count;\n}\n};\n</code></pre> <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint minTimeToType(string word) {\nint point = 'a';\nint count = 0;\nfor (auto ch : word) {\ncount += min(abs(point-ch), 26 - abs(point-ch)) + 1;\npoint = ch;\n}\nreturn count;\n}\n};\n</code></pre>","tags":["String","Greedy"]},{"location":"leetcode/1975-maximum-matrix-sum/","title":"1975. Maximum Matrix Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Unsolved"]},{"location":"leetcode/1976-number-of-ways-to-arrive-at-destination/","title":"1976. Number of Ways to Arrive at Destination","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Graph","Topological Sort","Shortest Path","Unsolved"]},{"location":"leetcode/1977-number-of-ways-to-separate-numbers/","title":"1977. Number of Ways to Separate Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Suffix Array","Unsolved"]},{"location":"leetcode/1978-employees-whose-manager-left-the-company/","title":"1978. Employees Whose Manager Left the Company","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1979-find-greatest-common-divisor-of-array/","title":"1979. Find Greatest Common Divisor of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Number Theory","Unsolved"]},{"location":"leetcode/198-house-robber/","title":"198. House Robber","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1980-find-unique-binary-string/","title":"1980. Find Unique Binary String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Backtracking","Unsolved"]},{"location":"leetcode/1981-minimize-the-difference-between-target-and-chosen-elements/","title":"1981. Minimize the Difference Between Target and Chosen Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/1982-find-array-given-subset-sums/","title":"1982. Find Array Given Subset Sums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Unsolved"]},{"location":"leetcode/1983-widest-pair-of-indices-with-equal-range-sum/","title":"1983. Widest Pair of Indices With Equal Range Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/1984-minimum-difference-between-highest-and-lowest-of-k-scores/","title":"1984. Minimum Difference Between Highest and Lowest of K Scores","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Sorting","Unsolved"]},{"location":"leetcode/1985-find-the-kth-largest-integer-in-the-array/","title":"1985. Find the Kth Largest Integer in the Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Divide and Conquer","Sorting","Heap (Priority Queue)","Quickselect","Unsolved"]},{"location":"leetcode/1986-minimum-number-of-work-sessions-to-finish-the-tasks/","title":"1986. Minimum Number of Work Sessions to Finish the Tasks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1987-number-of-unique-good-subsequences/","title":"1987. Number of Unique Good Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/1988-find-cutoff-score-for-each-school/","title":"1988. Find Cutoff Score for Each School","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1989-maximum-number-of-people-that-can-be-caught-in-tag/","title":"1989. Maximum Number of People That Can Be Caught in Tag","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/199-binary-tree-right-side-view/","title":"199. Binary Tree Right Side View","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/1990-count-the-number-of-experiments/","title":"1990. Count the Number of Experiments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/1991-find-the-middle-index-in-array/","title":"1991. Find the Middle Index in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/1992-find-all-groups-of-farmland/","title":"1992. Find All Groups of Farmland","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/1993-operations-on-tree/","title":"1993. Operations on Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Design","Unsolved"]},{"location":"leetcode/1994-the-number-of-good-subsets/","title":"1994. The Number of Good Subsets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/1995-count-special-quadruplets/","title":"1995. Count Special Quadruplets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Enumeration","Unsolved"]},{"location":"leetcode/1996-the-number-of-weak-characters-in-the-game/","title":"1996. The Number of Weak Characters in the Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Greedy","Sorting","Monotonic Stack","Unsolved"]},{"location":"leetcode/1997-first-day-where-you-have-been-in-all-the-rooms/","title":"1997. First Day Where You Have Been in All the Rooms","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/1998-gcd-sort-of-an-array/","title":"1998. GCD Sort of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Union Find","Sorting","Unsolved"]},{"location":"leetcode/1999-smallest-greater-multiple-made-of-two-digits/","title":"1999. Smallest Greater Multiple Made of Two Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/2-add-two-numbers/","title":"2. Add Two Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Math","Recursion","Unsolved"]},{"location":"leetcode/20-valid-parentheses/","title":"20. Valid Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/200-number-of-islands/","title":"200. Number of Islands","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/2000-reverse-prefix-of-word/","title":"2000. Reverse Prefix of Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/2001-number-of-pairs-of-interchangeable-rectangles/","title":"2001. Number of Pairs of Interchangeable Rectangles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Counting","Number Theory","Unsolved"]},{"location":"leetcode/2002-maximum-product-of-the-length-of-two-palindromic-subsequences/","title":"2002. Maximum Product of the Length of Two Palindromic Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/2003-smallest-missing-genetic-value-in-each-subtree/","title":"2003. Smallest Missing Genetic Value in Each Subtree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Union Find","Unsolved"]},{"location":"leetcode/2004-the-number-of-seniors-and-juniors-to-join-the-company/","title":"2004. The Number of Seniors and Juniors to Join the Company","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2005-subtree-removal-game-with-fibonacci-tree/","title":"2005. Subtree Removal Game with Fibonacci Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Tree","Binary Tree","Game Theory","Unsolved"]},{"location":"leetcode/2006-count-number-of-pairs-with-absolute-difference-k/","title":"2006. Count Number of Pairs With Absolute Difference K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2007-find-original-array-from-doubled-array/","title":"2007. Find Original Array From Doubled Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2008-maximum-earnings-from-taxi/","title":"2008. Maximum Earnings From Taxi","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/2009-minimum-number-of-operations-to-make-array-continuous/","title":"2009. Minimum Number of Operations to Make Array Continuous","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/201-bitwise-and-of-numbers-range/","title":"201. Bitwise AND of Numbers Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/2010-the-number-of-seniors-and-juniors-to-join-the-company-ii/","title":"2010. The Number of Seniors and Juniors to Join the Company II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2011-final-value-of-variable-after-performing-operations/","title":"2011. Final Value of Variable After Performing Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Simulation","Unsolved"]},{"location":"leetcode/2012-sum-of-beauty-in-the-array/","title":"2012. Sum of Beauty in the Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2013-detect-squares/","title":"2013. Detect Squares","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Counting","Unsolved"]},{"location":"leetcode/2014-longest-subsequence-repeated-k-times/","title":"2014. Longest Subsequence Repeated k Times","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Greedy","Counting","Enumeration","Unsolved"]},{"location":"leetcode/2015-average-height-of-buildings-in-each-segment/","title":"2015. Average Height of Buildings in Each Segment","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2016-maximum-difference-between-increasing-elements/","title":"2016. Maximum Difference Between Increasing Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2017-grid-game/","title":"2017. Grid Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/2018-check-if-word-can-be-placed-in-crossword/","title":"2018. Check if Word Can Be Placed In Crossword","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Enumeration","Unsolved"]},{"location":"leetcode/2019-the-score-of-students-solving-math-expression/","title":"2019. The Score of Students Solving Math Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Dynamic Programming","Stack","Memoization","Unsolved"]},{"location":"leetcode/202-happy-number/","title":"202. Happy Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Two Pointers","Unsolved"]},{"location":"leetcode/2020-number-of-accounts-that-did-not-stream/","title":"2020. Number of Accounts That Did Not Stream","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2021-brightest-position-on-street/","title":"2021. Brightest Position on Street","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Ordered Set","Unsolved"]},{"location":"leetcode/2022-convert-1d-array-into-2d-array/","title":"2022. Convert 1D Array Into 2D Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/2023-number-of-pairs-of-strings-with-concatenation-equal-to-target/","title":"2023. Number of Pairs of Strings With Concatenation Equal to Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2024-maximize-the-confusion-of-an-exam/","title":"2024. Maximize the Confusion of an Exam","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/2025-maximum-number-of-ways-to-partition-an-array/","title":"2025. Maximum Number of Ways to Partition an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Enumeration","Prefix Sum","Unsolved"]},{"location":"leetcode/2026-low-quality-problems/","title":"2026. Low-Quality Problems","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2027-minimum-moves-to-convert-string/","title":"2027. Minimum Moves to Convert String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/2028-find-missing-observations/","title":"2028. Find Missing Observations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Simulation","Unsolved"]},{"location":"leetcode/2029-stone-game-ix/","title":"2029. Stone Game IX","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Counting","Game Theory","Unsolved"]},{"location":"leetcode/203-remove-linked-list-elements/","title":"203. Remove Linked List Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Recursion","Unsolved"]},{"location":"leetcode/2030-smallest-k-length-subsequence-with-occurrences-of-a-letter/","title":"2030. Smallest K-Length Subsequence With Occurrences of a Letter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/2031-count-subarrays-with-more-ones-than-zeros/","title":"2031. Count Subarrays With More Ones Than Zeros","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/2032-two-out-of-three/","title":"2032. Two Out of Three","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/2033-minimum-operations-to-make-a-uni-value-grid/","title":"2033. Minimum Operations to Make a Uni-Value Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Matrix","Unsolved"]},{"location":"leetcode/2034-stock-price-fluctuation/","title":"2034. Stock Price Fluctuation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Heap (Priority Queue)","Data Stream","Ordered Set","Unsolved"]},{"location":"leetcode/2035-partition-array-into-two-arrays-to-minimize-sum-difference/","title":"2035. Partition Array Into Two Arrays to Minimize Sum Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Dynamic Programming","Bit Manipulation","Ordered Set","Bitmask","Unsolved"]},{"location":"leetcode/2036-maximum-alternating-subarray-sum/","title":"2036. Maximum Alternating Subarray Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2037-minimum-number-of-moves-to-seat-everyone/","title":"2037. Minimum Number of Moves to Seat Everyone","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2038-remove-colored-pieces-if-both-neighbors-are-the-same-color/","title":"2038. Remove Colored Pieces if Both Neighbors are the Same Color","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Greedy","Game Theory","Unsolved"]},{"location":"leetcode/2039-the-time-when-the-network-becomes-idle/","title":"2039. The Time When the Network Becomes Idle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/204-count-primes/","title":"204. Count Primes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Enumeration","Number Theory","Unsolved"]},{"location":"leetcode/2040-kth-smallest-product-of-two-sorted-arrays/","title":"2040. Kth Smallest Product of Two Sorted Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2041-accepted-candidates-from-the-interviews/","title":"2041. Accepted Candidates From the Interviews","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2042-check-if-numbers-are-ascending-in-a-sentence/","title":"2042. Check if Numbers Are Ascending in a Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2043-simple-bank-system/","title":"2043. Simple Bank System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Simulation","Unsolved"]},{"location":"leetcode/2044-count-number-of-maximum-bitwise-or-subsets/","title":"2044. Count Number of Maximum Bitwise-OR Subsets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/2045-second-minimum-time-to-reach-destination/","title":"2045. Second Minimum Time to Reach Destination","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Breadth-First Search","Graph","Shortest Path","Unsolved"]},{"location":"leetcode/2046-sort-linked-list-already-sorted-using-absolute-values/","title":"2046. Sort Linked List Already Sorted Using Absolute Values","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/2047-number-of-valid-words-in-a-sentence/","title":"2047. Number of Valid Words in a Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2048-next-greater-numerically-balanced-number/","title":"2048. Next Greater Numerically Balanced Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Backtracking","Enumeration","Unsolved"]},{"location":"leetcode/2049-count-nodes-with-the-highest-score/","title":"2049. Count Nodes With the Highest Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/205-isomorphic-strings/","title":"205. Isomorphic Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/2050-parallel-courses-iii/","title":"2050. Parallel Courses III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2051-the-category-of-each-member-in-the-store/","title":"2051. The Category of Each Member in the Store","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2052-minimum-cost-to-separate-sentence-into-rows/","title":"2052. Minimum Cost to Separate Sentence Into Rows","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2053-kth-distinct-string-in-an-array/","title":"2053. Kth Distinct String in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2054-two-best-non-overlapping-events/","title":"2054. Two Best Non-Overlapping Events","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2055-plates-between-candles/","title":"2055. Plates Between Candles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Binary Search","Prefix Sum","Unsolved"]},{"location":"leetcode/2056-number-of-valid-move-combinations-on-chessboard/","title":"2056. Number of Valid Move Combinations On Chessboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Backtracking","Simulation","Unsolved"]},{"location":"leetcode/2057-smallest-index-with-equal-value/","title":"2057. Smallest Index With Equal Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2058-find-the-minimum-and-maximum-number-of-nodes-between-critical-points/","title":"2058. Find the Minimum and Maximum Number of Nodes Between Critical Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/2059-minimum-operations-to-convert-number/","title":"2059. Minimum Operations to Convert Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Unsolved"]},{"location":"leetcode/206-reverse-linked-list/","title":"206. Reverse Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Recursion","Unsolved"]},{"location":"leetcode/2060-check-if-an-original-string-exists-given-two-encoded-strings/","title":"2060. Check if an Original String Exists Given Two Encoded Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2061-number-of-spaces-cleaning-robot-cleaned/","title":"2061. Number of Spaces Cleaning Robot Cleaned","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/2062-count-vowel-substrings-of-a-string/","title":"2062. Count Vowel Substrings of a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/2063-vowels-of-all-substrings/","title":"2063. Vowels of All Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/2064-minimized-maximum-of-products-distributed-to-any-store/","title":"2064. Minimized Maximum of Products Distributed to Any Store","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2065-maximum-path-quality-of-a-graph/","title":"2065. Maximum Path Quality of a Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Graph","Unsolved"]},{"location":"leetcode/2066-account-balance/","title":"2066. Account Balance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2067-number-of-equal-count-substrings/","title":"2067. Number of Equal Count Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Counting","Prefix Sum","Unsolved"]},{"location":"leetcode/2068-check-whether-two-strings-are-almost-equivalent/","title":"2068. Check Whether Two Strings are Almost Equivalent","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2069-walking-robot-simulation-ii/","title":"2069. Walking Robot Simulation II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Simulation","Unsolved"]},{"location":"leetcode/207-course-schedule/","title":"207. Course Schedule","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2070-most-beautiful-item-for-each-query/","title":"2070. Most Beautiful Item for Each Query","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/2071-maximum-number-of-tasks-you-can-assign/","title":"2071. Maximum Number of Tasks You Can Assign","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Queue","Sorting","Monotonic Queue","Unsolved"]},{"location":"leetcode/2072-the-winner-university/","title":"2072. The Winner University","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2073-time-needed-to-buy-tickets/","title":"2073. Time Needed to Buy Tickets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Simulation","Unsolved"]},{"location":"leetcode/2074-reverse-nodes-in-even-length-groups/","title":"2074. Reverse Nodes in Even Length Groups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/2075-decode-the-slanted-ciphertext/","title":"2075. Decode the Slanted Ciphertext","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Unsolved"]},{"location":"leetcode/2076-process-restricted-friend-requests/","title":"2076. Process Restricted Friend Requests","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Union Find","Graph","Unsolved"]},{"location":"leetcode/2077-paths-in-maze-that-lead-to-same-room/","title":"2077. Paths in Maze That Lead to Same Room","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Unsolved"]},{"location":"leetcode/2078-two-furthest-houses-with-different-colors/","title":"2078. Two Furthest Houses With Different Colors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/2079-watering-plants/","title":"2079. Watering Plants","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/208-implement-trie-prefix-tree/","title":"208. Implement Trie (Prefix Tree)","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/2080-range-frequency-queries/","title":"2080. Range Frequency Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Design","Segment Tree","Unsolved"]},{"location":"leetcode/2081-sum-of-k-mirror-numbers/","title":"2081. Sum of k-Mirror Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/2082-the-number-of-rich-customers/","title":"2082. The Number of Rich Customers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2083-substrings-that-begin-and-end-with-the-same-letter/","title":"2083. Substrings That Begin and End With the Same Letter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Counting","Prefix Sum","Unsolved"]},{"location":"leetcode/2084-drop-type-1-orders-for-customers-with-type-0-orders/","title":"2084. Drop Type 1 Orders for Customers With Type 0 Orders","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2085-count-common-words-with-one-occurrence/","title":"2085. Count Common Words With One Occurrence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2086-minimum-number-of-food-buckets-to-feed-the-hamsters/","title":"2086. Minimum Number of Food Buckets to Feed the Hamsters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/2087-minimum-cost-homecoming-of-a-robot-in-a-grid/","title":"2087. Minimum Cost Homecoming of a Robot in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Unsolved"]},{"location":"leetcode/2088-count-fertile-pyramids-in-a-land/","title":"2088. Count Fertile Pyramids in a Land","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/2089-find-target-indices-after-sorting-array/","title":"2089. Find Target Indices After Sorting Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/209-minimum-size-subarray-sum/","title":"209. Minimum Size Subarray Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/2090-k-radius-subarray-averages/","title":"2090. K Radius Subarray Averages","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/2091-removing-minimum-and-maximum-from-array/","title":"2091. Removing Minimum and Maximum From Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/2092-find-all-people-with-secret/","title":"2092. Find All People With Secret","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Sorting","Unsolved"]},{"location":"leetcode/2093-minimum-cost-to-reach-city-with-discounts/","title":"2093. Minimum Cost to Reach City With Discounts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Shortest Path","Unsolved"]},{"location":"leetcode/2094-finding-3-digit-even-numbers/","title":"2094. Finding 3-Digit Even Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Enumeration","Unsolved"]},{"location":"leetcode/2095-delete-the-middle-node-of-a-linked-list/","title":"2095. Delete the Middle Node of a Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/2096-step-by-step-directions-from-a-binary-tree-node-to-another/","title":"2096. Step-By-Step Directions From a Binary Tree Node to Another","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2097-valid-arrangement-of-pairs/","title":"2097. Valid Arrangement of Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Eulerian Circuit","Unsolved"]},{"location":"leetcode/2098-subsequence-of-size-k-with-the-largest-even-sum/","title":"2098. Subsequence of Size K With the Largest Even Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2099-find-subsequence-of-length-k-with-the-largest-sum/","title":"2099. Find Subsequence of Length K With the Largest Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/21-merge-two-sorted-lists/","title":"21. Merge Two Sorted Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Recursion","Unsolved"]},{"location":"leetcode/210-course-schedule-ii/","title":"210. Course Schedule II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2100-find-good-days-to-rob-the-bank/","title":"2100. Find Good Days to Rob the Bank","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/2101-detonate-the-maximum-bombs/","title":"2101. Detonate the Maximum Bombs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Depth-First Search","Breadth-First Search","Graph","Geometry","Unsolved"]},{"location":"leetcode/2102-sequentially-ordinal-rank-tracker/","title":"2102. Sequentially Ordinal Rank Tracker","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Heap (Priority Queue)","Data Stream","Ordered Set","Unsolved"]},{"location":"leetcode/2103-rings-and-rods/","title":"2103. Rings and Rods","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/2104-sum-of-subarray-ranges/","title":"2104. Sum of Subarray Ranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/2105-watering-plants-ii/","title":"2105. Watering Plants II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Simulation","Unsolved"]},{"location":"leetcode/2106-maximum-fruits-harvested-after-at-most-k-steps/","title":"2106. Maximum Fruits Harvested After at Most K Steps","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/2107-number-of-unique-flavors-after-sharing-k-candies/","title":"2107. Number of Unique Flavors After Sharing K Candies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/2108-find-first-palindromic-string-in-the-array/","title":"2108. Find First Palindromic String in the Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","String","Unsolved"]},{"location":"leetcode/2109-adding-spaces-to-a-string/","title":"2109. Adding Spaces to a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Simulation","Unsolved"]},{"location":"leetcode/211-design-add-and-search-words-data-structure/","title":"211. Design Add and Search Words Data Structure","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Depth-First Search","Design","Trie","Unsolved"]},{"location":"leetcode/2110-number-of-smooth-descent-periods-of-a-stock/","title":"2110. Number of Smooth Descent Periods of a Stock","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/2111-minimum-operations-to-make-the-array-k-increasing/","title":"2111. Minimum Operations to Make the Array K-Increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2112-the-airport-with-the-most-traffic/","title":"2112. The Airport With the Most Traffic","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2113-elements-in-array-after-removing-and-replacing-elements/","title":"2113. Elements in Array After Removing and Replacing Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2114-maximum-number-of-words-found-in-sentences/","title":"2114. Maximum Number of Words Found in Sentences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2115-find-all-possible-recipes-from-given-supplies/","title":"2115. Find All Possible Recipes from Given Supplies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2116-check-if-a-parentheses-string-can-be-valid/","title":"2116. Check if a Parentheses String Can Be Valid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Unsolved"]},{"location":"leetcode/2117-abbreviating-the-product-of-a-range/","title":"2117. Abbreviating the Product of a Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/2118-build-the-equation/","title":"2118. Build the Equation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2119-a-number-after-a-double-reversal/","title":"2119. A Number After a Double Reversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/212-word-search-ii/","title":"212. Word Search II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Backtracking","Trie","Matrix","Unsolved"]},{"location":"leetcode/2120-execution-of-all-suffix-instructions-staying-in-a-grid/","title":"2120. Execution of All Suffix Instructions Staying in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Unsolved"]},{"location":"leetcode/2121-intervals-between-identical-elements/","title":"2121. Intervals Between Identical Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/2122-recover-the-original-array/","title":"2122. Recover the Original Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Enumeration","Unsolved"]},{"location":"leetcode/2123-minimum-operations-to-remove-adjacent-ones-in-matrix/","title":"2123. Minimum Operations to Remove Adjacent Ones in Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Matrix","Unsolved"]},{"location":"leetcode/2124-check-if-all-as-appears-before-all-bs/","title":"2124. Check if All A's Appears Before All B's","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2125-number-of-laser-beams-in-a-bank/","title":"2125. Number of Laser Beams in a Bank","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Matrix","Unsolved"]},{"location":"leetcode/2126-destroying-asteroids/","title":"2126. Destroying Asteroids","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2127-maximum-employees-to-be-invited-to-a-meeting/","title":"2127. Maximum Employees to Be Invited to a Meeting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2128-remove-all-ones-with-row-and-column-flips/","title":"2128. Remove All Ones With Row and Column Flips","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Matrix","Unsolved"]},{"location":"leetcode/2129-capitalize-the-title/","title":"2129. Capitalize the Title","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/213-house-robber-ii/","title":"213. House Robber II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2130-maximum-twin-sum-of-a-linked-list/","title":"2130. Maximum Twin Sum of a Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Stack","Unsolved"]},{"location":"leetcode/2131-longest-palindrome-by-concatenating-two-letter-words/","title":"2131. Longest Palindrome by Concatenating Two Letter Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Greedy","Counting","Unsolved"]},{"location":"leetcode/2132-stamping-the-grid/","title":"2132. Stamping the Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/2133-check-if-every-row-and-column-contains-all-numbers/","title":"2133. Check if Every Row and Column Contains All Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/2134-minimum-swaps-to-group-all-1s-together-ii/","title":"2134. Minimum Swaps to Group All 1's Together II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/2135-count-words-obtained-after-adding-a-letter/","title":"2135. Count Words Obtained After Adding a Letter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Bit Manipulation","Sorting","Unsolved"]},{"location":"leetcode/2136-earliest-possible-day-of-full-bloom/","title":"2136. Earliest Possible Day of Full Bloom","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2137-pour-water-between-buckets-to-make-water-levels-equal/","title":"2137. Pour Water Between Buckets to Make Water Levels Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2138-divide-a-string-into-groups-of-size-k/","title":"2138. Divide a String Into Groups of Size k","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Unsolved"]},{"location":"leetcode/2139-minimum-moves-to-reach-target-score/","title":"2139. Minimum Moves to Reach Target Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/214-shortest-palindrome/","title":"214. Shortest Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Rolling Hash","String Matching","Hash Function","Unsolved"]},{"location":"leetcode/2140-solving-questions-with-brainpower/","title":"2140. Solving Questions With Brainpower","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2141-maximum-running-time-of-n-computers/","title":"2141. Maximum Running Time of N Computers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2142-the-number-of-passengers-in-each-bus-i/","title":"2142. The Number of Passengers in Each Bus I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2143-choose-numbers-from-two-arrays-in-range/","title":"2143. Choose Numbers From Two Arrays in Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2144-minimum-cost-of-buying-candies-with-discount/","title":"2144. Minimum Cost of Buying Candies With Discount","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2145-count-the-hidden-sequences/","title":"2145. Count the Hidden Sequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/2146-k-highest-ranked-items-within-a-price-range/","title":"2146. K Highest Ranked Items Within a Price Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Sorting","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/2147-number-of-ways-to-divide-a-long-corridor/","title":"2147. Number of Ways to Divide a Long Corridor","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2148-count-elements-with-strictly-smaller-and-greater-elements/","title":"2148. Count Elements With Strictly Smaller and Greater Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2149-rearrange-array-elements-by-sign/","title":"2149. Rearrange Array Elements by Sign","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Simulation","Unsolved"]},{"location":"leetcode/215-kth-largest-element-in-an-array/","title":"215. Kth Largest Element in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Sorting","Heap (Priority Queue)","Quickselect","Unsolved"]},{"location":"leetcode/2150-find-all-lonely-numbers-in-the-array/","title":"2150. Find All Lonely Numbers in the Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2151-maximum-good-people-based-on-statements/","title":"2151. Maximum Good People Based on Statements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Bit Manipulation","Enumeration","Unsolved"]},{"location":"leetcode/2152-minimum-number-of-lines-to-cover-points/","title":"2152. Minimum Number of Lines to Cover Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Dynamic Programming","Backtracking","Bit Manipulation","Geometry","Bitmask","Unsolved"]},{"location":"leetcode/2153-the-number-of-passengers-in-each-bus-ii/","title":"2153. The Number of Passengers in Each Bus II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2154-keep-multiplying-found-values-by-two/","title":"2154. Keep Multiplying Found Values by Two","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Simulation","Unsolved"]},{"location":"leetcode/2155-all-divisions-with-the-highest-score-of-a-binary-array/","title":"2155. All Divisions With the Highest Score of a Binary Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2156-find-substring-with-given-hash-value/","title":"2156. Find Substring With Given Hash Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sliding Window","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/2157-groups-of-strings/","title":"2157. Groups of Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Bit Manipulation","Union Find","Unsolved"]},{"location":"leetcode/2158-amount-of-new-area-painted-each-day/","title":"2158. Amount of New Area Painted Each Day","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/2159-order-two-columns-independently/","title":"2159. Order Two Columns Independently","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/216-combination-sum-iii/","title":"216. Combination Sum III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/2160-minimum-sum-of-four-digit-number-after-splitting-digits/","title":"2160. Minimum Sum of Four Digit Number After Splitting Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2161-partition-array-according-to-given-pivot/","title":"2161. Partition Array According to Given Pivot","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Simulation","Unsolved"]},{"location":"leetcode/2162-minimum-cost-to-set-cooking-time/","title":"2162. Minimum Cost to Set Cooking Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/2163-minimum-difference-in-sums-after-removal-of-elements/","title":"2163. Minimum Difference in Sums After Removal of Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2164-sort-even-and-odd-indices-independently/","title":"2164. Sort Even and Odd Indices Independently","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2165-smallest-value-of-the-rearranged-number/","title":"2165. Smallest Value of the Rearranged Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Sorting","Unsolved"]},{"location":"leetcode/2166-design-bitset/","title":"2166. Design Bitset","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Unsolved"]},{"location":"leetcode/2167-minimum-time-to-remove-all-cars-containing-illegal-goods/","title":"2167. Minimum Time to Remove All Cars Containing Illegal Goods","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2168-unique-substrings-with-equal-digit-frequency/","title":"2168. Unique Substrings With Equal Digit Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Rolling Hash","Counting","Hash Function","Unsolved"]},{"location":"leetcode/2169-count-operations-to-obtain-zero/","title":"2169. Count Operations to Obtain Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Unsolved"]},{"location":"leetcode/217-contains-duplicate/","title":"217. Contains Duplicate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/2170-minimum-operations-to-make-the-array-alternating/","title":"2170. Minimum Operations to Make the Array Alternating","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Counting","Unsolved"]},{"location":"leetcode/2171-removing-minimum-number-of-magic-beans/","title":"2171. Removing Minimum Number of Magic Beans","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/2172-maximum-and-sum-of-array/","title":"2172. Maximum AND Sum of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/2173-longest-winning-streak/","title":"2173. Longest Winning Streak","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2174-remove-all-ones-with-row-and-column-flips-ii/","title":"2174. Remove All Ones With Row and Column Flips II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/2175-the-change-in-global-rankings/","title":"2175. The Change in Global Rankings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2176-count-equal-and-divisible-pairs-in-an-array/","title":"2176. Count Equal and Divisible Pairs in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2177-find-three-consecutive-integers-that-sum-to-a-given-number/","title":"2177. Find Three Consecutive Integers That Sum to a Given Number","text":"C++ <p>\\(Time: O(1)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nvector&lt;long long&gt; sumOfThree(long long num) {\nif (num % 3 != 0)\nreturn {};\nlong long x = num / 3;\nreturn {x-1,x,x+1};\n}\n};\n</code></pre>","tags":["Math","Simulation"]},{"location":"leetcode/2178-maximum-split-of-positive-even-integers/","title":"2178. Maximum Split of Positive Even Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Backtracking","Greedy","Unsolved"]},{"location":"leetcode/2179-count-good-triplets-in-an-array/","title":"2179. Count Good Triplets in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/218-the-skyline-problem/","title":"218. The Skyline Problem","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Binary Indexed Tree","Segment Tree","Line Sweep","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/2180-count-integers-with-even-digit-sum/","title":"2180. Count Integers With Even Digit Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Unsolved"]},{"location":"leetcode/2181-merge-nodes-in-between-zeros/","title":"2181. Merge Nodes in Between Zeros","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Simulation","Unsolved"]},{"location":"leetcode/2182-construct-string-with-repeat-limit/","title":"2182. Construct String With Repeat Limit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Heap (Priority Queue)","Counting","Unsolved"]},{"location":"leetcode/2183-count-array-pairs-divisible-by-k/","title":"2183. Count Array Pairs Divisible by K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Number Theory","Unsolved"]},{"location":"leetcode/2184-number-of-ways-to-build-sturdy-brick-wall/","title":"2184. Number of Ways to Build Sturdy Brick Wall","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/2185-counting-words-with-a-given-prefix/","title":"2185. Counting Words With a Given Prefix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2186-minimum-number-of-steps-to-make-two-strings-anagram-ii/","title":"2186. Minimum Number of Steps to Make Two Strings Anagram II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2187-minimum-time-to-complete-trips/","title":"2187. Minimum Time to Complete Trips","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2188-minimum-time-to-finish-the-race/","title":"2188. Minimum Time to Finish the Race","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2189-number-of-ways-to-build-house-of-cards/","title":"2189. Number of Ways to Build House of Cards","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/219-contains-duplicate-ii/","title":"219. Contains Duplicate II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/2190-most-frequent-number-following-key-in-an-array/","title":"2190. Most Frequent Number Following Key In an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2191-sort-the-jumbled-numbers/","title":"2191. Sort the Jumbled Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2192-all-ancestors-of-a-node-in-a-directed-acyclic-graph/","title":"2192. All Ancestors of a Node in a Directed Acyclic Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2193-minimum-number-of-moves-to-make-palindrome/","title":"2193. Minimum Number of Moves to Make Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Greedy","Binary Indexed Tree","Unsolved"]},{"location":"leetcode/2194-cells-in-a-range-on-an-excel-sheet/","title":"2194. Cells in a Range on an Excel Sheet","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2195-append-k-integers-with-minimal-sum/","title":"2195. Append K Integers With Minimal Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2196-create-binary-tree-from-descriptions/","title":"2196. Create Binary Tree From Descriptions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2197-replace-non-coprime-numbers-in-array/","title":"2197. Replace Non-Coprime Numbers in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Stack","Number Theory","Unsolved"]},{"location":"leetcode/2198-number-of-single-divisor-triplets/","title":"2198. Number of Single Divisor Triplets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/2199-finding-the-topic-of-each-post/","title":"2199. Finding the Topic of Each Post","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/22-generate-parentheses/","title":"22. Generate Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/220-contains-duplicate-iii/","title":"220. Contains Duplicate III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Sorting","Bucket Sort","Ordered Set","Unsolved"]},{"location":"leetcode/2200-find-all-k-distant-indices-in-an-array/","title":"2200. Find All K-Distant Indices in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2201-count-artifacts-that-can-be-extracted/","title":"2201. Count Artifacts That Can Be Extracted","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Simulation","Unsolved"]},{"location":"leetcode/2202-maximize-the-topmost-element-after-k-moves/","title":"2202. Maximize the Topmost Element After K Moves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/2203-minimum-weighted-subgraph-with-the-required-paths/","title":"2203. Minimum Weighted Subgraph With the Required Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Shortest Path","Unsolved"]},{"location":"leetcode/2204-distance-to-a-cycle-in-undirected-graph/","title":"2204. Distance to a Cycle in Undirected Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/2205-the-number-of-users-that-are-eligible-for-discount/","title":"2205. The Number of Users That Are Eligible for Discount","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2206-divide-array-into-equal-pairs/","title":"2206. Divide Array Into Equal Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Bit Manipulation","Counting","Unsolved"]},{"location":"leetcode/2207-maximize-number-of-subsequences-in-a-string/","title":"2207. Maximize Number of Subsequences in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Prefix Sum","Unsolved"]},{"location":"leetcode/2208-minimum-operations-to-halve-array-sum/","title":"2208. Minimum Operations to Halve Array Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2209-minimum-white-tiles-after-covering-with-carpets/","title":"2209. Minimum White Tiles After Covering With Carpets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/221-maximal-square/","title":"221. Maximal Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/2210-count-hills-and-valleys-in-an-array/","title":"2210. Count Hills and Valleys in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2211-count-collisions-on-a-road/","title":"2211. Count Collisions on a Road","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/2212-maximum-points-in-an-archery-competition/","title":"2212. Maximum Points in an Archery Competition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Recursion","Enumeration","Unsolved"]},{"location":"leetcode/2213-longest-substring-of-one-repeating-character/","title":"2213. Longest Substring of One Repeating Character","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/2214-minimum-health-to-beat-game/","title":"2214. Minimum Health to Beat Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Prefix Sum","Unsolved"]},{"location":"leetcode/2215-find-the-difference-of-two-arrays/","title":"2215. Find the Difference of Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/2216-minimum-deletions-to-make-array-beautiful/","title":"2216. Minimum Deletions to Make Array Beautiful","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Greedy","Unsolved"]},{"location":"leetcode/2217-find-palindrome-with-fixed-length/","title":"2217. Find Palindrome With Fixed Length","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/2218-maximum-value-of-k-coins-from-piles/","title":"2218. Maximum Value of K Coins From Piles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/2219-maximum-sum-score-of-array/","title":"2219. Maximum Sum Score of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/222-count-complete-tree-nodes/","title":"222. Count Complete Tree Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2220-minimum-bit-flips-to-convert-number/","title":"2220. Minimum Bit Flips to Convert Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/2221-find-triangular-sum-of-an-array/","title":"2221. Find Triangular Sum of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Simulation","Combinatorics","Unsolved"]},{"location":"leetcode/2222-number-of-ways-to-select-buildings/","title":"2222. Number of Ways to Select Buildings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/2223-sum-of-scores-of-built-strings/","title":"2223. Sum of Scores of Built Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Binary Search","Rolling Hash","Suffix Array","String Matching","Hash Function","Unsolved"]},{"location":"leetcode/2224-minimum-number-of-operations-to-convert-time/","title":"2224. Minimum Number of Operations to Convert Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/2225-find-players-with-zero-or-one-losses/","title":"2225. Find Players With Zero or One Losses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Counting","Unsolved"]},{"location":"leetcode/2226-maximum-candies-allocated-to-k-children/","title":"2226. Maximum Candies Allocated to K Children","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2227-encrypt-and-decrypt-strings/","title":"2227. Encrypt and Decrypt Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/2228-users-with-two-purchases-within-seven-days/","title":"2228. Users With Two Purchases Within Seven Days","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2229-check-if-an-array-is-consecutive/","title":"2229. Check if an Array Is Consecutive","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/223-rectangle-area/","title":"223. Rectangle Area","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Unsolved"]},{"location":"leetcode/2230-the-users-that-are-eligible-for-discount/","title":"2230. The Users That Are Eligible for Discount","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2231-largest-number-after-digit-swaps-by-parity/","title":"2231. Largest Number After Digit Swaps by Parity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2232-minimize-result-by-adding-parentheses-to-expression/","title":"2232. Minimize Result by Adding Parentheses to Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Enumeration","Unsolved"]},{"location":"leetcode/2233-maximum-product-after-k-increments/","title":"2233. Maximum Product After K Increments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2234-maximum-total-beauty-of-the-gardens/","title":"2234. Maximum Total Beauty of the Gardens","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2235-add-two-integers/","title":"2235. Add Two Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/2236-root-equals-sum-of-children/","title":"2236. Root Equals Sum of Children","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Tree","Unsolved"]},{"location":"leetcode/2237-count-positions-on-street-with-required-brightness/","title":"2237. Count Positions on Street With Required Brightness","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/2238-number-of-times-a-driver-was-a-passenger/","title":"2238. Number of Times a Driver Was a Passenger","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2239-find-closest-number-to-zero/","title":"2239. Find Closest Number to Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/224-basic-calculator/","title":"224. Basic Calculator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Stack","Recursion","Unsolved"]},{"location":"leetcode/2240-number-of-ways-to-buy-pens-and-pencils/","title":"2240. Number of Ways to Buy Pens and Pencils","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/2241-design-an-atm-machine/","title":"2241. Design an ATM Machine","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Design","Unsolved"]},{"location":"leetcode/2242-maximum-score-of-a-node-sequence/","title":"2242. Maximum Score of a Node Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Sorting","Enumeration","Unsolved"]},{"location":"leetcode/2243-calculate-digit-sum-of-a-string/","title":"2243. Calculate Digit Sum of a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Unsolved"]},{"location":"leetcode/2244-minimum-rounds-to-complete-all-tasks/","title":"2244. Minimum Rounds to Complete All Tasks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Counting","Unsolved"]},{"location":"leetcode/2245-maximum-trailing-zeros-in-a-cornered-path/","title":"2245. Maximum Trailing Zeros in a Cornered Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/2246-longest-path-with-different-adjacent-characters/","title":"2246. Longest Path With Different Adjacent Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Tree","Depth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2247-maximum-cost-of-trip-with-k-highways/","title":"2247. Maximum Cost of Trip With K Highways","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Graph","Bitmask","Unsolved"]},{"location":"leetcode/2248-intersection-of-multiple-arrays/","title":"2248. Intersection of Multiple Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2249-count-lattice-points-inside-a-circle/","title":"2249. Count Lattice Points Inside a Circle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Geometry","Enumeration","Unsolved"]},{"location":"leetcode/225-implement-stack-using-queues/","title":"225. Implement Stack using Queues","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Design","Queue","Unsolved"]},{"location":"leetcode/2250-count-number-of-rectangles-containing-each-point/","title":"2250. Count Number of Rectangles Containing Each Point","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Binary Indexed Tree","Sorting","Unsolved"]},{"location":"leetcode/2251-number-of-flowers-in-full-bloom/","title":"2251. Number of Flowers in Full Bloom","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Sorting","Prefix Sum","Ordered Set","Unsolved"]},{"location":"leetcode/2252-dynamic-pivoting-of-a-table/","title":"2252. Dynamic Pivoting of a Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2253-dynamic-unpivoting-of-a-table/","title":"2253. Dynamic Unpivoting of a Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2254-design-video-sharing-platform/","title":"2254. Design Video Sharing Platform","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Stack","Design","Ordered Set","Unsolved"]},{"location":"leetcode/2255-count-prefixes-of-a-given-string/","title":"2255. Count Prefixes of a Given String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2256-minimum-average-difference/","title":"2256. Minimum Average Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/2257-count-unguarded-cells-in-the-grid/","title":"2257. Count Unguarded Cells in the Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/2258-escape-the-spreading-fire/","title":"2258. Escape the Spreading Fire","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/2259-remove-digit-from-number-to-maximize-result/","title":"2259. Remove Digit From Number to Maximize Result","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Enumeration","Unsolved"]},{"location":"leetcode/226-invert-binary-tree/","title":"226. Invert Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2260-minimum-consecutive-cards-to-pick-up/","title":"2260. Minimum Consecutive Cards to Pick Up","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/2261-k-divisible-elements-subarrays/","title":"2261. K Divisible Elements Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Trie","Rolling Hash","Hash Function","Enumeration","Unsolved"]},{"location":"leetcode/2262-total-appeal-of-a-string/","title":"2262. Total Appeal of A String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2263-make-array-non-decreasing-or-non-increasing/","title":"2263. Make Array Non-decreasing or Non-increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/2264-largest-3-same-digit-number-in-string/","title":"2264. Largest 3-Same-Digit Number in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2265-count-nodes-equal-to-average-of-subtree/","title":"2265. Count Nodes Equal to Average of Subtree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2266-count-number-of-texts/","title":"2266. Count Number of Texts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2267-check-if-there-is-a-valid-parentheses-string-path/","title":"2267.  Check if There Is a Valid Parentheses String Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/2268-minimum-number-of-keypresses/","title":"2268. Minimum Number of Keypresses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Greedy","Sorting","Counting","Unsolved"]},{"location":"leetcode/2269-find-the-k-beauty-of-a-number/","title":"2269. Find the K-Beauty of a Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Sliding Window","Unsolved"]},{"location":"leetcode/227-basic-calculator-ii/","title":"227. Basic Calculator II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Stack","Unsolved"]},{"location":"leetcode/2270-number-of-ways-to-split-array/","title":"2270. Number of Ways to Split Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/2271-maximum-white-tiles-covered-by-a-carpet/","title":"2271. Maximum White Tiles Covered by a Carpet","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/2272-substring-with-largest-variance/","title":"2272. Substring With Largest Variance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2273-find-resultant-array-after-removing-anagrams/","title":"2273. Find Resultant Array After Removing Anagrams","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/2274-maximum-consecutive-floors-without-special-floors/","title":"2274. Maximum Consecutive Floors Without Special Floors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2275-largest-combination-with-bitwise-and-greater-than-zero/","title":"2275. Largest Combination With Bitwise AND Greater Than Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Bit Manipulation","Counting","Unsolved"]},{"location":"leetcode/2276-count-integers-in-intervals/","title":"2276. Count Integers in Intervals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/2277-closest-node-to-path-in-tree/","title":"2277. Closest Node to Path in Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/2278-percentage-of-letter-in-string/","title":"2278. Percentage of Letter in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2279-maximum-bags-with-full-capacity-of-rocks/","title":"2279. Maximum Bags With Full Capacity of Rocks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/228-summary-ranges/","title":"228. Summary Ranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2280-minimum-lines-to-represent-a-line-chart/","title":"2280. Minimum Lines to Represent a Line Chart","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Sorting","Number Theory","Unsolved"]},{"location":"leetcode/2281-sum-of-total-strength-of-wizards/","title":"2281. Sum of Total Strength of Wizards","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Prefix Sum","Unsolved"]},{"location":"leetcode/2282-number-of-people-that-can-be-seen-in-a-grid/","title":"2282. Number of People That Can Be Seen in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Matrix","Monotonic Stack","Unsolved"]},{"location":"leetcode/2283-check-if-number-has-equal-digit-count-and-digit-value/","title":"2283. Check if Number Has Equal Digit Count and Digit Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2284-sender-with-largest-word-count/","title":"2284. Sender With Largest Word Count","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2285-maximum-total-importance-of-roads/","title":"2285. Maximum Total Importance of Roads","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Greedy","Graph","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2286-booking-concert-tickets-in-groups/","title":"2286. Booking Concert Tickets in Groups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Design","Binary Indexed Tree","Segment Tree","Unsolved"]},{"location":"leetcode/2287-rearrange-characters-to-make-target-string/","title":"2287. Rearrange Characters to Make Target String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2288-apply-discount-to-prices/","title":"2288. Apply Discount to Prices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2289-steps-to-make-array-non-decreasing/","title":"2289. Steps to Make Array Non-decreasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/229-majority-element-ii/","title":"229. Majority Element II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Counting","Unsolved"]},{"location":"leetcode/2290-minimum-obstacle-removal-to-reach-corner/","title":"2290. Minimum Obstacle Removal to Reach Corner","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Graph","Heap (Priority Queue)","Matrix","Shortest Path","Unsolved"]},{"location":"leetcode/2291-maximum-profit-from-trading-stocks/","title":"2291. Maximum Profit From Trading Stocks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2292-products-with-three-or-more-orders-in-two-consecutive-years/","title":"2292. Products With Three or More Orders in Two Consecutive Years","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2293-min-max-game/","title":"2293. Min Max Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/2294-partition-array-such-that-maximum-difference-is-k/","title":"2294. Partition Array Such That Maximum Difference Is K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2295-replace-elements-in-an-array/","title":"2295. Replace Elements in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Simulation","Unsolved"]},{"location":"leetcode/2296-design-a-text-editor/","title":"2296. Design a Text Editor","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","String","Stack","Design","Simulation","Doubly-Linked List","Unsolved"]},{"location":"leetcode/2297-jump-game-viii/","title":"2297. Jump Game VIII","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Graph","Monotonic Stack","Shortest Path","Unsolved"]},{"location":"leetcode/2298-tasks-count-in-the-weekend/","title":"2298. Tasks Count in the Weekend","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2299-strong-password-checker-ii/","title":"2299. Strong Password Checker II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/23-merge-k-sorted-lists/","title":"23. Merge k Sorted Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Divide and Conquer","Heap (Priority Queue)","Merge Sort","Unsolved"]},{"location":"leetcode/230-kth-smallest-element-in-a-bst/","title":"230. Kth Smallest Element in a BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/2300-successful-pairs-of-spells-and-potions/","title":"2300. Successful Pairs of Spells and Potions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/2301-match-substring-after-replacement/","title":"2301. Match Substring After Replacement","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","String Matching","Unsolved"]},{"location":"leetcode/2302-count-subarrays-with-score-less-than-k/","title":"2302. Count Subarrays With Score Less Than K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/2303-calculate-amount-paid-in-taxes/","title":"2303. Calculate Amount Paid in Taxes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/2304-minimum-path-cost-in-a-grid/","title":"2304. Minimum Path Cost in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/2305-fair-distribution-of-cookies/","title":"2305. Fair Distribution of Cookies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/2306-naming-a-company/","title":"2306. Naming a Company","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Bit Manipulation","Enumeration","Unsolved"]},{"location":"leetcode/2307-check-for-contradictions-in-equations/","title":"2307. Check for Contradictions in Equations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/2308-arrange-table-by-gender/","title":"2308. Arrange Table by Gender","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2309-greatest-english-letter-in-upper-and-lower-case/","title":"2309. Greatest English Letter in Upper and Lower Case","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Enumeration","Unsolved"]},{"location":"leetcode/231-power-of-two/","title":"231. Power of Two","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Recursion","Unsolved"]},{"location":"leetcode/2310-sum-of-numbers-with-units-digit-k/","title":"2310. Sum of Numbers With Units Digit K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Greedy","Enumeration","Unsolved"]},{"location":"leetcode/2311-longest-binary-subsequence-less-than-or-equal-to-k/","title":"2311. Longest Binary Subsequence Less Than or Equal to K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Greedy","Memoization","Unsolved"]},{"location":"leetcode/2312-selling-pieces-of-wood/","title":"2312. Selling Pieces of Wood","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/2313-minimum-flips-in-binary-tree-to-get-result/","title":"2313. Minimum Flips in Binary Tree to Get Result","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2314-the-first-day-of-the-maximum-recorded-degree-in-each-city/","title":"2314. The First Day of the Maximum Recorded Degree in Each City","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2315-count-asterisks/","title":"2315. Count Asterisks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2316-count-unreachable-pairs-of-nodes-in-an-undirected-graph/","title":"2316. Count Unreachable Pairs of Nodes in an Undirected Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/2317-maximum-xor-after-operations/","title":"2317. Maximum XOR After Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/2318-number-of-distinct-roll-sequences/","title":"2318. Number of Distinct Roll Sequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/2319-check-if-matrix-is-x-matrix/","title":"2319. Check if Matrix Is X-Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/232-implement-queue-using-stacks/","title":"232. Implement Queue using Stacks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Design","Queue","Unsolved"]},{"location":"leetcode/2320-count-number-of-ways-to-place-houses/","title":"2320. Count Number of Ways to Place Houses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/2321-maximum-score-of-spliced-array/","title":"2321. Maximum Score Of Spliced Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2322-minimum-score-after-removals-on-a-tree/","title":"2322. Minimum Score After Removals on a Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/2323-find-minimum-time-to-finish-all-jobs-ii/","title":"2323. Find Minimum Time to Finish All Jobs II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2324-product-sales-analysis-iv/","title":"2324. Product Sales Analysis IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2325-decode-the-message/","title":"2325. Decode the Message","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/2326-spiral-matrix-iv/","title":"2326. Spiral Matrix IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Matrix","Simulation","Unsolved"]},{"location":"leetcode/2327-number-of-people-aware-of-a-secret/","title":"2327. Number of People Aware of a Secret","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Queue","Simulation","Unsolved"]},{"location":"leetcode/2328-number-of-increasing-paths-in-a-grid/","title":"2328. Number of Increasing Paths in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Depth-First Search","Breadth-First Search","Graph","Topological Sort","Memoization","Matrix","Unsolved"]},{"location":"leetcode/2329-product-sales-analysis-v/","title":"2329. Product Sales Analysis V","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/233-number-of-digit-one/","title":"233. Number of Digit One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Recursion","Unsolved"]},{"location":"leetcode/2330-valid-palindrome-iv/","title":"2330. Valid Palindrome IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/2331-evaluate-boolean-binary-tree/","title":"2331. Evaluate Boolean Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2332-the-latest-time-to-catch-a-bus/","title":"2332. The Latest Time to Catch a Bus","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/2333-minimum-sum-of-squared-difference/","title":"2333. Minimum Sum of Squared Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2334-subarray-with-elements-greater-than-varying-threshold/","title":"2334. Subarray With Elements Greater Than Varying Threshold","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Union Find","Monotonic Stack","Unsolved"]},{"location":"leetcode/2335-minimum-amount-of-time-to-fill-cups/","title":"2335. Minimum Amount of Time to Fill Cups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2336-smallest-number-in-infinite-set/","title":"2336. Smallest Number in Infinite Set","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2337-move-pieces-to-obtain-a-string/","title":"2337. Move Pieces to Obtain a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/2338-count-the-number-of-ideal-arrays/","title":"2338. Count the Number of Ideal Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Number Theory","Unsolved"]},{"location":"leetcode/2339-all-the-matches-of-the-league/","title":"2339. All the Matches of the League","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/234-palindrome-linked-list/","title":"234. Palindrome Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Stack","Recursion","Unsolved"]},{"location":"leetcode/2340-minimum-adjacent-swaps-to-make-a-valid-array/","title":"2340. Minimum Adjacent Swaps to Make a Valid Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/2341-maximum-number-of-pairs-in-array/","title":"2341. Maximum Number of Pairs in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2342-max-sum-of-a-pair-with-equal-sum-of-digits/","title":"2342. Max Sum of a Pair With Equal Sum of Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2343-query-kth-smallest-trimmed-number/","title":"2343. Query Kth Smallest Trimmed Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Divide and Conquer","Sorting","Heap (Priority Queue)","Radix Sort","Quickselect","Unsolved"]},{"location":"leetcode/2344-minimum-deletions-to-make-array-divisible/","title":"2344. Minimum Deletions to Make Array Divisible","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Heap (Priority Queue)","Number Theory","Unsolved"]},{"location":"leetcode/2345-finding-the-number-of-visible-mountains/","title":"2345. Finding the Number of Visible Mountains","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Sorting","Monotonic Stack","Unsolved"]},{"location":"leetcode/2346-compute-the-rank-as-a-percentage/","title":"2346. Compute the Rank as a Percentage","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2347-best-poker-hand/","title":"2347. Best Poker Hand","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2348-number-of-zero-filled-subarrays/","title":"2348. Number of Zero-Filled Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/2349-design-a-number-container-system/","title":"2349. Design a Number Container System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/235-lowest-common-ancestor-of-a-binary-search-tree/","title":"235. Lowest Common Ancestor of a Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/2350-shortest-impossible-sequence-of-rolls/","title":"2350. Shortest Impossible Sequence of Rolls","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Unsolved"]},{"location":"leetcode/2351-first-letter-to-appear-twice/","title":"2351. First Letter to Appear Twice","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2352-equal-row-and-column-pairs/","title":"2352. Equal Row and Column Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Simulation","Unsolved"]},{"location":"leetcode/2353-design-a-food-rating-system/","title":"2353. Design a Food Rating System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/2354-number-of-excellent-pairs/","title":"2354. Number of Excellent Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Bit Manipulation","Unsolved"]},{"location":"leetcode/2355-maximum-number-of-books-you-can-take/","title":"2355. Maximum Number of Books You Can Take","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/2356-number-of-unique-subjects-taught-by-each-teacher/","title":"2356. Number of Unique Subjects Taught by Each Teacher","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2357-make-array-zero-by-subtracting-equal-amounts/","title":"2357. Make Array Zero by Subtracting Equal Amounts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Heap (Priority Queue)","Simulation","Unsolved"]},{"location":"leetcode/2358-maximum-number-of-groups-entering-a-competition/","title":"2358. Maximum Number of Groups Entering a Competition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Binary Search","Greedy","Unsolved"]},{"location":"leetcode/2359-find-closest-node-to-given-two-nodes/","title":"2359. Find Closest Node to Given Two Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Unsolved"]},{"location":"leetcode/236-lowest-common-ancestor-of-a-binary-tree/","title":"236. Lowest Common Ancestor of a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2360-longest-cycle-in-a-graph/","title":"2360. Longest Cycle in a Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/2361-minimum-costs-using-the-train-line/","title":"2361. Minimum Costs Using the Train Line","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2362-generate-the-invoice/","title":"2362. Generate the Invoice","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2363-merge-similar-items/","title":"2363. Merge Similar Items","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Ordered Set","Unsolved"]},{"location":"leetcode/2364-count-number-of-bad-pairs/","title":"2364. Count Number of Bad Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/2365-task-scheduler-ii/","title":"2365. Task Scheduler II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Simulation","Unsolved"]},{"location":"leetcode/2366-minimum-replacements-to-sort-the-array/","title":"2366. Minimum Replacements to Sort the Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Unsolved"]},{"location":"leetcode/2367-number-of-arithmetic-triplets/","title":"2367. Number of Arithmetic Triplets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Enumeration","Unsolved"]},{"location":"leetcode/2368-reachable-nodes-with-restrictions/","title":"2368. Reachable Nodes With Restrictions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Tree","Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/2369-check-if-there-is-a-valid-partition-for-the-array/","title":"2369. Check if There is a Valid Partition For The Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/237-delete-node-in-a-linked-list/","title":"237. Delete Node in a Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/2370-longest-ideal-subsequence/","title":"2370. Longest Ideal Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2371-minimize-maximum-value-in-a-grid/","title":"2371. Minimize Maximum Value in a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Union Find","Graph","Topological Sort","Sorting","Matrix","Unsolved"]},{"location":"leetcode/2372-calculate-the-influence-of-each-salesperson/","title":"2372. Calculate the Influence of Each Salesperson","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2373-largest-local-values-in-a-matrix/","title":"2373. Largest Local Values in a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/2374-node-with-highest-edge-score/","title":"2374. Node With Highest Edge Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Graph","Unsolved"]},{"location":"leetcode/2375-construct-smallest-number-from-di-string/","title":"2375. Construct Smallest Number From DI String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Stack","Greedy","Unsolved"]},{"location":"leetcode/2376-count-special-integers/","title":"2376. Count Special Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/2377-sort-the-olympic-table/","title":"2377. Sort the Olympic Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2378-choose-edges-to-maximize-score-in-a-tree/","title":"2378. Choose Edges to Maximize Score in a Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/2379-minimum-recolors-to-get-k-consecutive-black-blocks/","title":"2379. Minimum Recolors to Get K Consecutive Black Blocks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Sliding Window","Unsolved"]},{"location":"leetcode/238-product-of-array-except-self/","title":"238. Product of Array Except Self","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/2380-time-needed-to-rearrange-a-binary-string/","title":"2380. Time Needed to Rearrange a Binary String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Simulation","Unsolved"]},{"location":"leetcode/2381-shifting-letters-ii/","title":"2381. Shifting Letters II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Prefix Sum","Unsolved"]},{"location":"leetcode/2382-maximum-segment-sum-after-removals/","title":"2382. Maximum Segment Sum After Removals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Union Find","Prefix Sum","Ordered Set","Unsolved"]},{"location":"leetcode/2383-minimum-hours-of-training-to-win-a-competition/","title":"2383. Minimum Hours of Training to Win a Competition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/2384-largest-palindromic-number/","title":"2384. Largest Palindromic Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Unsolved"]},{"location":"leetcode/2385-amount-of-time-for-binary-tree-to-be-infected/","title":"2385. Amount of Time for Binary Tree to Be Infected","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2386-find-the-k-sum-of-an-array/","title":"2386. Find the K-Sum of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2387-median-of-a-row-wise-sorted-matrix/","title":"2387. Median of a Row Wise Sorted Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Unsolved"]},{"location":"leetcode/2388-change-null-values-in-a-table-to-the-previous-value/","title":"2388. Change Null Values in a Table to the Previous Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2389-longest-subsequence-with-limited-sum/","title":"2389. Longest Subsequence With Limited Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/239-sliding-window-maximum/","title":"239. Sliding Window Maximum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Sliding Window","Heap (Priority Queue)","Monotonic Queue","Unsolved"]},{"location":"leetcode/2390-removing-stars-from-a-string/","title":"2390. Removing Stars From a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Simulation","Unsolved"]},{"location":"leetcode/2391-minimum-amount-of-time-to-collect-garbage/","title":"2391. Minimum Amount of Time to Collect Garbage","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Prefix Sum","Unsolved"]},{"location":"leetcode/2392-build-a-matrix-with-conditions/","title":"2392. Build a Matrix With Conditions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Topological Sort","Matrix","Unsolved"]},{"location":"leetcode/2393-count-strictly-increasing-subarrays/","title":"2393. Count Strictly Increasing Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/2394-employees-with-deductions/","title":"2394. Employees With Deductions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2395-find-subarrays-with-equal-sum/","title":"2395. Find Subarrays With Equal Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/2396-strictly-palindromic-number/","title":"2396. Strictly Palindromic Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Two Pointers","Brainteaser","Unsolved"]},{"location":"leetcode/2397-maximum-rows-covered-by-columns/","title":"2397. Maximum Rows Covered by Columns","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Bit Manipulation","Matrix","Enumeration","Unsolved"]},{"location":"leetcode/2398-maximum-number-of-robots-within-budget/","title":"2398. Maximum Number of Robots Within Budget","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Queue","Sliding Window","Heap (Priority Queue)","Prefix Sum","Unsolved"]},{"location":"leetcode/2399-check-distances-between-same-letters/","title":"2399. Check Distances Between Same Letters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/24-swap-nodes-in-pairs/","title":"24. Swap Nodes in Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Recursion","Unsolved"]},{"location":"leetcode/240-search-a-2d-matrix-ii/","title":"240. Search a 2D Matrix II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Matrix","Unsolved"]},{"location":"leetcode/2400-number-of-ways-to-reach-a-position-after-exactly-k-steps/","title":"2400. Number of Ways to Reach a Position After Exactly k Steps","text":"C++ <p>\\(Time: O(K)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nconst int mod = 1e9+7;\nint numberOfWays(int startPos, int endPos, int k) {\nint diff = abs(endPos - startPos);\nif (diff &gt; k || (k - diff) % 2)\nreturn 0;\nreturn ncr(k,(k-diff)/2);\n}\nunsigned long long int expo(unsigned long long int x, int y, int p) {\nunsigned long long int res = 1;\nx %= p;\nwhile (y &gt; 0) {\nif (y &amp; 1)\nres = (res * x) % p;\ny &gt;&gt;= 1;\nx = (x * x) % p;\n}\nreturn res;\n}\nint inverse(int n, int p) {\nreturn expo(n, p-2, p);\n}\nint ncr(int n, int k) {\nif (n &lt;= 1) return 1;\nif (n - k &lt; k) k = n - k;\nunsigned long long int res = 1;\nfor (int i = 1; i &lt;= k; i++) {\nres = (res * (n - i + 1)) % mod;\nres = (res * inverse(i,mod)) % mod;  // (res / i) % mod;\n}\nreturn res;\n}\n};\n</code></pre>","tags":["Math","Dynamic Programming","Combinatorics"]},{"location":"leetcode/2401-longest-nice-subarray/","title":"2401. Longest Nice Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Sliding Window","Unsolved"]},{"location":"leetcode/2402-meeting-rooms-iii/","title":"2402. Meeting Rooms III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2403-minimum-time-to-kill-all-monsters/","title":"2403. Minimum Time to Kill All Monsters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/2404-most-frequent-even-element/","title":"2404. Most Frequent Even Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2405-optimal-partition-of-string/","title":"2405. Optimal Partition of String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Unsolved"]},{"location":"leetcode/2406-divide-intervals-into-minimum-number-of-groups/","title":"2406. Divide Intervals Into Minimum Number of Groups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Heap (Priority Queue)","Prefix Sum","Unsolved"]},{"location":"leetcode/2407-longest-increasing-subsequence-ii/","title":"2407. Longest Increasing Subsequence II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Dynamic Programming","Binary Indexed Tree","Segment Tree","Queue","Monotonic Queue","Unsolved"]},{"location":"leetcode/2408-design-sql/","title":"2408. Design SQL","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Design","Unsolved"]},{"location":"leetcode/2409-count-days-spent-together/","title":"2409. Count Days Spent Together","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/241-different-ways-to-add-parentheses/","title":"241. Different Ways to Add Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Dynamic Programming","Recursion","Memoization","Unsolved"]},{"location":"leetcode/2410-maximum-matching-of-players-with-trainers/","title":"2410. Maximum Matching of Players With Trainers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2411-smallest-subarrays-with-maximum-bitwise-or/","title":"2411. Smallest Subarrays With Maximum Bitwise OR","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Bit Manipulation","Sliding Window","Unsolved"]},{"location":"leetcode/2412-minimum-money-required-before-transactions/","title":"2412. Minimum Money Required Before Transactions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2413-smallest-even-multiple/","title":"2413. Smallest Even Multiple","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Number Theory","Unsolved"]},{"location":"leetcode/2414-length-of-the-longest-alphabetical-continuous-substring/","title":"2414. Length of the Longest Alphabetical Continuous Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2415-reverse-odd-levels-of-binary-tree/","title":"2415. Reverse Odd Levels of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2416-sum-of-prefix-scores-of-strings/","title":"2416. Sum of Prefix Scores of Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Trie","Counting","Unsolved"]},{"location":"leetcode/2417-closest-fair-integer/","title":"2417. Closest Fair Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/2418-sort-the-people/","title":"2418. Sort the People","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/2419-longest-subarray-with-maximum-bitwise-and/","title":"2419. Longest Subarray With Maximum Bitwise AND","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Brainteaser","Unsolved"]},{"location":"leetcode/242-valid-anagram/","title":"242. Valid Anagram","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/2420-find-all-good-indices/","title":"2420. Find All Good Indices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/2421-number-of-good-paths/","title":"2421. Number of Good Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Tree","Union Find","Graph","Unsolved"]},{"location":"leetcode/2422-merge-operations-to-turn-array-into-a-palindrome/","title":"2422. Merge Operations to Turn Array Into a Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Unsolved"]},{"location":"leetcode/2423-remove-letter-to-equalize-frequency/","title":"2423. Remove Letter To Equalize Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2424-longest-uploaded-prefix/","title":"2424. Longest Uploaded Prefix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Union Find","Design","Binary Indexed Tree","Segment Tree","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/2425-bitwise-xor-of-all-pairings/","title":"2425. Bitwise XOR of All Pairings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Brainteaser","Unsolved"]},{"location":"leetcode/2426-number-of-pairs-satisfying-inequality/","title":"2426. Number of Pairs Satisfying Inequality","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/2427-number-of-common-factors/","title":"2427. Number of Common Factors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Number Theory","Unsolved"]},{"location":"leetcode/2428-maximum-sum-of-an-hourglass/","title":"2428. Maximum Sum of an Hourglass","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/2429-minimize-xor/","title":"2429. Minimize XOR","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Greedy","Bit Manipulation","Unsolved"]},{"location":"leetcode/243-shortest-word-distance/","title":"243. Shortest Word Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2430-maximum-deletions-on-a-string/","title":"2430. Maximum Deletions on a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Rolling Hash","String Matching","Hash Function","Unsolved"]},{"location":"leetcode/2431-maximize-total-tastiness-of-purchased-fruits/","title":"2431. Maximize Total Tastiness of Purchased Fruits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2432-the-employee-that-worked-on-the-longest-task/","title":"2432. The Employee That Worked on the Longest Task","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/2433-find-the-original-array-of-prefix-xor/","title":"2433. Find The Original Array of Prefix Xor","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/2434-using-a-robot-to-print-the-lexicographically-smallest-string/","title":"2434. Using a Robot to Print the Lexicographically Smallest String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Stack","Greedy","Unsolved"]},{"location":"leetcode/2435-paths-in-matrix-whose-sum-is-divisible-by-k/","title":"2435. Paths in Matrix Whose Sum Is Divisible by K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/2436-minimum-split-into-subarrays-with-gcd-greater-than-one/","title":"2436. Minimum Split Into Subarrays With GCD Greater Than One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Greedy","Number Theory","Unsolved"]},{"location":"leetcode/2437-number-of-valid-clock-times/","title":"2437. Number of Valid Clock Times","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Enumeration","Unsolved"]},{"location":"leetcode/2438-range-product-queries-of-powers/","title":"2438. Range Product Queries of Powers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Prefix Sum","Unsolved"]},{"location":"leetcode/2439-minimize-maximum-of-array/","title":"2439. Minimize Maximum of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Greedy","Prefix Sum","Unsolved"]},{"location":"leetcode/244-shortest-word-distance-ii/","title":"244. Shortest Word Distance II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","String","Design","Unsolved"]},{"location":"leetcode/2440-create-components-with-same-value/","title":"2440. Create Components With Same Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Tree","Depth-First Search","Enumeration","Unsolved"]},{"location":"leetcode/2441-largest-positive-integer-that-exists-with-its-negative/","title":"2441. Largest Positive Integer That Exists With Its Negative","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/2442-count-number-of-distinct-integers-after-reverse-operations/","title":"2442. Count Number of Distinct Integers After Reverse Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Unsolved"]},{"location":"leetcode/2443-sum-of-number-and-its-reverse/","title":"2443. Sum of Number and Its Reverse","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/2444-count-subarrays-with-fixed-bounds/","title":"2444. Count Subarrays With Fixed Bounds","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Sliding Window","Monotonic Queue","Unsolved"]},{"location":"leetcode/2445-number-of-nodes-with-value-one/","title":"2445. Number of Nodes With Value One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2446-determine-if-two-events-have-conflict/","title":"2446. Determine if Two Events Have Conflict","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2447-number-of-subarrays-with-gcd-equal-to-k/","title":"2447. Number of Subarrays With GCD Equal to K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Number Theory","Unsolved"]},{"location":"leetcode/2448-minimum-cost-to-make-array-equal/","title":"2448. Minimum Cost to Make Array Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Sorting","Prefix Sum","Unsolved"]},{"location":"leetcode/2449-minimum-number-of-operations-to-make-arrays-similar/","title":"2449. Minimum Number of Operations to Make Arrays Similar","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/245-shortest-word-distance-iii/","title":"245. Shortest Word Distance III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2450-number-of-distinct-binary-strings-after-applying-operations/","title":"2450. Number of Distinct Binary Strings After Applying Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/2451-odd-string-difference/","title":"2451. Odd String Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Unsolved"]},{"location":"leetcode/2452-words-within-two-edits-of-dictionary/","title":"2452. Words Within Two Edits of Dictionary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2453-destroy-sequential-targets/","title":"2453. Destroy Sequential Targets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Counting","Unsolved"]},{"location":"leetcode/2454-next-greater-element-iv/","title":"2454. Next Greater Element IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Stack","Sorting","Heap (Priority Queue)","Monotonic Stack","Unsolved"]},{"location":"leetcode/2455-average-value-of-even-numbers-that-are-divisible-by-three/","title":"2455. Average Value of Even Numbers That Are Divisible by Three","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/2456-most-popular-video-creator/","title":"2456. Most Popular Video Creator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2457-minimum-addition-to-make-integer-beautiful/","title":"2457. Minimum Addition to Make Integer Beautiful","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/2458-height-of-binary-tree-after-subtree-removal-queries/","title":"2458. Height of Binary Tree After Subtree Removal Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2459-sort-array-by-moving-items-to-empty-space/","title":"2459. Sort Array by Moving Items to Empty Space","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/246-strobogrammatic-number/","title":"246. Strobogrammatic Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Two Pointers","String","Unsolved"]},{"location":"leetcode/2460-apply-operations-to-an-array/","title":"2460. Apply Operations to an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/2461-maximum-sum-of-distinct-subarrays-with-length-k/","title":"2461. Maximum Sum of Distinct Subarrays With Length K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/2462-total-cost-to-hire-k-workers/","title":"2462. Total Cost to Hire K Workers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Heap (Priority Queue)","Simulation","Unsolved"]},{"location":"leetcode/2463-minimum-total-distance-traveled/","title":"2463. Minimum Total Distance Traveled","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/2464-minimum-subarrays-in-a-valid-split/","title":"2464. Minimum Subarrays in a Valid Split","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Number Theory","Unsolved"]},{"location":"leetcode/2465-number-of-distinct-averages/","title":"2465. Number of Distinct Averages","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/2466-count-ways-to-build-good-strings/","title":"2466. Count Ways To Build Good Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/2467-most-profitable-path-in-a-tree/","title":"2467. Most Profitable Path in a Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Tree","Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/2468-split-message-based-on-limit/","title":"2468. Split Message Based on Limit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Binary Search","Unsolved"]},{"location":"leetcode/2469-convert-the-temperature/","title":"2469. Convert the Temperature","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/247-strobogrammatic-number-ii/","title":"247. Strobogrammatic Number II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Recursion","Unsolved"]},{"location":"leetcode/2470-number-of-subarrays-with-lcm-equal-to-k/","title":"2470. Number of Subarrays With LCM Equal to K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Number Theory","Unsolved"]},{"location":"leetcode/2471-minimum-number-of-operations-to-sort-a-binary-tree-by-level/","title":"2471. Minimum Number of Operations to Sort a Binary Tree by Level","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2472-maximum-number-of-non-overlapping-palindrome-substrings/","title":"2472. Maximum Number of Non-overlapping Palindrome Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2473-minimum-cost-to-buy-apples/","title":"2473. Minimum Cost to Buy Apples","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/2474-customers-with-strictly-increasing-purchases/","title":"2474. Customers With Strictly Increasing Purchases","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2475-number-of-unequal-triplets-in-array/","title":"2475. Number of Unequal Triplets in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/2476-closest-nodes-queries-in-a-binary-search-tree/","title":"2476. Closest Nodes Queries in a Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2477-minimum-fuel-cost-to-report-to-the-capital/","title":"2477. Minimum Fuel Cost to Report to the Capital","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/2478-number-of-beautiful-partitions/","title":"2478. Number of Beautiful Partitions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2479-maximum-xor-of-two-non-overlapping-subtrees/","title":"2479. Maximum XOR of Two Non-Overlapping Subtrees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Graph","Trie","Unsolved"]},{"location":"leetcode/248-strobogrammatic-number-iii/","title":"248. Strobogrammatic Number III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Recursion","Unsolved"]},{"location":"leetcode/2480-form-a-chemical-bond/","title":"2480. Form a Chemical Bond","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2481-minimum-cuts-to-divide-a-circle/","title":"2481. Minimum Cuts to Divide a Circle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Unsolved"]},{"location":"leetcode/2482-difference-between-ones-and-zeros-in-row-and-column/","title":"2482. Difference Between Ones and Zeros in Row and Column","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/2483-minimum-penalty-for-a-shop/","title":"2483. Minimum Penalty for a Shop","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Prefix Sum","Unsolved"]},{"location":"leetcode/2484-count-palindromic-subsequences/","title":"2484. Count Palindromic Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/2485-find-the-pivot-integer/","title":"2485. Find the Pivot Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Prefix Sum","Unsolved"]},{"location":"leetcode/2486-append-characters-to-string-to-make-subsequence/","title":"2486. Append Characters to String to Make Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/2487-remove-nodes-from-linked-list/","title":"2487. Remove Nodes From Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Stack","Recursion","Monotonic Stack","Unsolved"]},{"location":"leetcode/2488-count-subarrays-with-median-k/","title":"2488. Count Subarrays With Median K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/2489-number-of-substrings-with-fixed-ratio/","title":"2489. Number of Substrings With Fixed Ratio","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Prefix Sum","Unsolved"]},{"location":"leetcode/249-group-shifted-strings/","title":"249. Group Shifted Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/2490-circular-sentence/","title":"2490. Circular Sentence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/2491-divide-players-into-teams-of-equal-skill/","title":"2491. Divide Players Into Teams of Equal Skill","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/2492-minimum-score-of-a-path-between-two-cities/","title":"2492. Minimum Score of a Path Between Two Cities","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/2493-divide-nodes-into-the-maximum-number-of-groups/","title":"2493. Divide Nodes Into the Maximum Number of Groups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/2494-merge-overlapping-events-in-the-same-hall/","title":"2494. Merge Overlapping Events in the Same Hall","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2495-number-of-subarrays-having-even-product/","title":"2495. Number of Subarrays Having Even Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/2496-maximum-value-of-a-string-in-an-array/","title":"2496. Maximum Value of a String in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2497-maximum-star-sum-of-a-graph/","title":"2497. Maximum Star Sum of a Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Graph","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2498-frog-jump-ii/","title":"2498. Frog Jump II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Unsolved"]},{"location":"leetcode/2499-minimum-total-cost-to-make-arrays-unequal/","title":"2499. Minimum Total Cost to Make Arrays Unequal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Counting","Unsolved"]},{"location":"leetcode/25-reverse-nodes-in-k-group/","title":"25. Reverse Nodes in k-Group","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Recursion","Unsolved"]},{"location":"leetcode/250-count-univalue-subtrees/","title":"250. Count Univalue Subtrees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2500-delete-greatest-value-in-each-row/","title":"2500. Delete Greatest Value in Each Row","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Matrix","Unsolved"]},{"location":"leetcode/2501-longest-square-streak-in-an-array/","title":"2501. Longest Square Streak in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/2502-design-memory-allocator/","title":"2502. Design Memory Allocator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Simulation","Unsolved"]},{"location":"leetcode/2503-maximum-number-of-points-from-grid-queries/","title":"2503. Maximum Number of Points From Grid Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Union Find","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2504-concatenate-the-name-and-the-profession/","title":"2504. Concatenate the Name and the Profession","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/2505-bitwise-or-of-all-subsequence-sums/","title":"2505. Bitwise OR of All Subsequence Sums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Brainteaser","Unsolved"]},{"location":"leetcode/2506-count-pairs-of-similar-strings/","title":"2506. Count Pairs Of Similar Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/2507-smallest-value-after-replacing-with-sum-of-prime-factors/","title":"2507. Smallest Value After Replacing With Sum of Prime Factors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Number Theory","Unsolved"]},{"location":"leetcode/2508-add-edges-to-make-degrees-of-all-nodes-even/","title":"2508. Add Edges to Make Degrees of All Nodes Even","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Graph","Unsolved"]},{"location":"leetcode/2509-cycle-length-queries-in-a-tree/","title":"2509. Cycle Length Queries in a Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Tree","Unsolved"]},{"location":"leetcode/251-flatten-2d-vector/","title":"251. Flatten 2D Vector","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Design","Iterator","Unsolved"]},{"location":"leetcode/2510-check-if-there-is-a-path-with-equal-number-of-0s-and-1s/","title":"2510. Check if There is a Path With Equal Number of 0's And 1's","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/2511-maximum-enemy-forts-that-can-be-captured/","title":"2511. Maximum Enemy Forts That Can Be Captured","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/2512-reward-top-k-students/","title":"2512. Reward Top K Students","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2513-minimize-the-maximum-of-two-arrays/","title":"2513. Minimize the Maximum of Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Number Theory","Unsolved"]},{"location":"leetcode/2514-count-anagrams/","title":"2514. Count Anagrams","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Combinatorics","Counting","Unsolved"]},{"location":"leetcode/2515-shortest-distance-to-target-string-in-a-circular-array/","title":"2515. Shortest Distance to Target String in a Circular Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/2516-take-k-of-each-character-from-left-and-right/","title":"2516. Take K of Each Character From Left and Right","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/2517-maximum-tastiness-of-candy-basket/","title":"2517. Maximum Tastiness of Candy Basket","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/2518-number-of-great-partitions/","title":"2518. Number of Great Partitions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2519-count-the-number-of-k-big-indices/","title":"2519. Count the Number of K-Big Indices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/252-meeting-rooms/","title":"252. Meeting Rooms","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2520-count-the-digits-that-divide-a-number/","title":"2520. Count the Digits That Divide a Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/2521-distinct-prime-factors-of-product-of-array/","title":"2521. Distinct Prime Factors of Product of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Number Theory","Unsolved"]},{"location":"leetcode/2522-partition-string-into-substrings-with-values-at-most-k/","title":"2522. Partition String Into Substrings With Values at Most K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/2523-closest-prime-numbers-in-range/","title":"2523. Closest Prime Numbers in Range","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Number Theory","Unsolved"]},{"location":"leetcode/2524-maximum-frequency-score-of-a-subarray/","title":"2524. Maximum Frequency Score of a Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Sliding Window","Unsolved"]},{"location":"leetcode/2525-categorize-box-according-to-criteria/","title":"2525. Categorize Box According to Criteria","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/2526-find-consecutive-integers-from-a-data-stream/","title":"2526. Find Consecutive Integers from a Data Stream","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Queue","Counting","Data Stream","Unsolved"]},{"location":"leetcode/2527-find-xor-beauty-of-array/","title":"2527. Find Xor-Beauty of Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/2528-maximize-the-minimum-powered-city/","title":"2528. Maximize the Minimum Powered City","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Queue","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/2529-maximum-count-of-positive-integer-and-negative-integer/","title":"2529. Maximum Count of Positive Integer and Negative Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Counting","Unsolved"]},{"location":"leetcode/253-meeting-rooms-ii/","title":"253. Meeting Rooms II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Heap (Priority Queue)","Prefix Sum","Unsolved"]},{"location":"leetcode/2530-maximal-score-after-applying-k-operations/","title":"2530. Maximal Score After Applying K Operations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2531-make-number-of-distinct-characters-equal/","title":"2531. Make Number of Distinct Characters Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/2532-time-to-cross-a-bridge/","title":"2532. Time to Cross a Bridge","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Simulation","Unsolved"]},{"location":"leetcode/2533-number-of-good-binary-strings/","title":"2533. Number of Good Binary Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/2534-time-taken-to-cross-the-door/","title":"2534. Time Taken to Cross the Door","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Simulation","Unsolved"]},{"location":"leetcode/2535-difference-between-element-sum-and-digit-sum-of-an-array/","title":"2535. Difference Between Element Sum and Digit Sum of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/2536-increment-submatrices-by-one/","title":"2536. Increment Submatrices by One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/2537-count-the-number-of-good-subarrays/","title":"2537. Count the Number of Good Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/2538-difference-between-maximum-and-minimum-price-sum/","title":"2538. Difference Between Maximum and Minimum Price Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Tree","Unsolved"]},{"location":"leetcode/2539-count-the-number-of-good-subsequences/","title":"2539. Count the Number of Good Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Combinatorics","Counting","Unsolved"]},{"location":"leetcode/254-factor-combinations/","title":"254. Factor Combinations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/2540-minimum-common-value/","title":"2540. Minimum Common Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Binary Search","Unsolved"]},{"location":"leetcode/2541-minimum-operations-to-make-array-equal-ii/","title":"2541. Minimum Operations to Make Array Equal II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Unsolved"]},{"location":"leetcode/2542-maximum-subsequence-score/","title":"2542. Maximum Subsequence Score","text":"C++ <p>\\(Time: O(Nlog(N))\\)</p> <p>\\(Space: O(N)\\)</p> <pre><code>class Solution {\npublic:\nlong long maxScore(vector&lt;int&gt;&amp; speed, vector&lt;int&gt;&amp; efficiency, int k) {\nvector&lt;pair&lt;int, int&gt;&gt; es;\nfor (int i = 0; i &lt; speed.size(); i++) {\nes.push_back({efficiency[i], speed[i]});\n}\nsort(rbegin(es), rend(es));\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; pq; // min queue\nlong long sum = 0;\nlong long res = 0;\nfor (auto&amp; [e, s] : es) {\npq.push(s);\nsum += s;\nif (pq.size() &gt; k) {\nsum -= pq.top();\npq.pop();\n}\nif (pq.size() == k) {\nres = max(res, sum*e);\n}\n}\nreturn res;\n}\n};\n</code></pre>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)"]},{"location":"leetcode/2543-check-if-point-is-reachable/","title":"2543. Check if Point Is Reachable","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Number Theory","Unsolved"]},{"location":"leetcode/2544-alternating-digit-sum/","title":"2544. Alternating Digit Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/2545-sort-the-students-by-their-kth-score/","title":"2545. Sort the Students by Their Kth Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Matrix","Unsolved"]},{"location":"leetcode/2546-apply-bitwise-operations-to-make-strings-equal/","title":"2546. Apply Bitwise Operations to Make Strings Equal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Bit Manipulation","Unsolved"]},{"location":"leetcode/2547-minimum-cost-to-split-an-array/","title":"2547. Minimum Cost to Split an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Dynamic Programming","Counting","Unsolved"]},{"location":"leetcode/2548-maximum-price-to-fill-a-bag/","title":"2548. Maximum Price to Fill a Bag","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2549-count-distinct-numbers-on-board/","title":"2549. Count Distinct Numbers on Board","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Simulation","Unsolved"]},{"location":"leetcode/255-verify-preorder-sequence-in-binary-search-tree/","title":"255. Verify Preorder Sequence in Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Binary Search Tree","Recursion","Monotonic Stack","Binary Tree","Unsolved"]},{"location":"leetcode/2550-count-collisions-of-monkeys-on-a-polygon/","title":"2550. Count Collisions of Monkeys on a Polygon","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/2551-put-marbles-in-bags/","title":"2551. Put Marbles in Bags","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/2552-count-increasing-quadruplets/","title":"2552. Count Increasing Quadruplets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Binary Indexed Tree","Enumeration","Prefix Sum","Unsolved"]},{"location":"leetcode/2553-separate-the-digits-in-an-array/","title":"2553. Separate the Digits in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/2554-maximum-number-of-integers-to-choose-from-a-range-i/","title":"2554. Maximum Number of Integers to Choose From a Range I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2555-maximize-win-from-two-segments/","title":"2555. Maximize Win From Two Segments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sliding Window","Unsolved"]},{"location":"leetcode/2556-disconnect-path-in-a-binary-matrix-by-at-most-one-flip/","title":"2556. Disconnect Path in a Binary Matrix by at Most One Flip","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/2557-maximum-number-of-integers-to-choose-from-a-range-ii/","title":"2557. Maximum Number of Integers to Choose From a Range II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2558-take-gifts-from-the-richest-pile/","title":"2558. Take Gifts From the Richest Pile","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Simulation","Unsolved"]},{"location":"leetcode/2559-count-vowel-strings-in-ranges/","title":"2559. Count Vowel Strings in Ranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Prefix Sum","Unsolved"]},{"location":"leetcode/256-paint-house/","title":"256. Paint House","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/2560-house-robber-iv/","title":"2560. House Robber IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/2561-rearranging-fruits/","title":"2561. Rearranging Fruits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Unsolved"]},{"location":"leetcode/2562-find-the-array-concatenation-value/","title":"2562. Find the Array Concatenation Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Simulation","Unsolved"]},{"location":"leetcode/2563-count-the-number-of-fair-pairs/","title":"2563. Count the Number of Fair Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/2564-substring-xor-queries/","title":"2564. Substring XOR Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Bit Manipulation","Unsolved"]},{"location":"leetcode/2565-subsequence-with-the-minimum-score/","title":"2565. Subsequence With the Minimum Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Binary Search","Unsolved"]},{"location":"leetcode/2566-maximum-difference-by-remapping-a-digit/","title":"2566. Maximum Difference by Remapping a Digit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2567-minimum-score-by-changing-two-elements/","title":"2567. Minimum Score by Changing Two Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2568-minimum-impossible-or/","title":"2568. Minimum Impossible OR","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2569-handling-sum-queries-after-update/","title":"2569. Handling Sum Queries After Update","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/257-binary-tree-paths/","title":"257. Binary Tree Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/2570-merge-two-2d-arrays-by-summing-values/","title":"2570. Merge Two 2D Arrays by Summing Values","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2571-minimum-operations-to-reduce-an-integer-to-0/","title":"2571. Minimum Operations to Reduce an Integer to 0","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2572-count-the-number-of-square-free-subsets/","title":"2572. Count the Number of Square-Free Subsets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2573-find-the-string-with-lcp/","title":"2573. Find the String with LCP","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Unsolved"]},{"location":"leetcode/2574-left-and-right-sum-differences/","title":"2574. Left and Right Sum Differences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/2575-find-the-divisibility-array-of-a-string/","title":"2575. Find the Divisibility Array of a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Unsolved"]},{"location":"leetcode/2576-find-the-maximum-number-of-marked-indices/","title":"2576. Find the Maximum Number of Marked Indices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2577-minimum-time-to-visit-a-cell-in-a-grid/","title":"2577. Minimum Time to Visit a Cell In a Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Graph","Heap (Priority Queue)","Matrix","Shortest Path","Unsolved"]},{"location":"leetcode/2578-split-with-minimum-sum/","title":"2578. Split With Minimum Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Sorting","Unsolved"]},{"location":"leetcode/2579-count-total-number-of-colored-cells/","title":"2579. Count Total Number of Colored Cells","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/258-add-digits/","title":"258. Add Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Number Theory","Unsolved"]},{"location":"leetcode/2580-count-ways-to-group-overlapping-ranges/","title":"2580. Count Ways to Group Overlapping Ranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/2581-count-number-of-possible-root-nodes/","title":"2581. Count Number of Possible Root Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Dynamic Programming","Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/2582-pass-the-pillow/","title":"2582. Pass the Pillow","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Simulation","Unsolved"]},{"location":"leetcode/2583-kth-largest-sum-in-a-binary-tree/","title":"2583. Kth Largest Sum in a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Tree","Breadth-First Search","Unsolved"]},{"location":"leetcode/2584-split-the-array-to-make-coprime-products/","title":"2584. Split the Array to Make Coprime Products","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Number Theory","Unsolved"]},{"location":"leetcode/2585-number-of-ways-to-earn-points/","title":"2585. Number of Ways to Earn Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/259-3sum-smaller/","title":"259. 3Sum Smaller","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/26-remove-duplicates-from-sorted-array/","title":"26. Remove Duplicates from Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/260-single-number-iii/","title":"260. Single Number III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/261-graph-valid-tree/","title":"261. Graph Valid Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/262-trips-and-users/","title":"262. Trips and Users","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/263-ugly-number/","title":"263. Ugly Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/264-ugly-number-ii/","title":"264. Ugly Number II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Dynamic Programming","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/265-paint-house-ii/","title":"265. Paint House II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/266-palindrome-permutation/","title":"266. Palindrome Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Unsolved"]},{"location":"leetcode/267-palindrome-permutation-ii/","title":"267. Palindrome Permutation II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Backtracking","Unsolved"]},{"location":"leetcode/268-missing-number/","title":"268. Missing Number","text":"C++C++ <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint missingNumber(vector&lt;int&gt;&amp; nums) {\nint res = nums.size();\nfor (int i = 0; i &lt; nums.size(); i++)\nres ^= nums[i] ^ i;\nreturn res;\n}\n};\n</code></pre> <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nint missingNumber(vector&lt;int&gt;&amp; nums) {\nint s = accumulate(nums.begin(), nums.end(), 0);\nint n = nums.size();\nreturn ((n * (n+1)) / 2) - s;\n}\n};\n</code></pre>","tags":["Array","Hash Table","Math","Binary Search","Bit Manipulation","Sorting","Unsolved"]},{"location":"leetcode/269-alien-dictionary/","title":"269. Alien Dictionary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/27-remove-element/","title":"27. Remove Element","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/270-closest-binary-search-tree-value/","title":"270. Closest Binary Search Tree Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/271-encode-and-decode-strings/","title":"271. Encode and Decode Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Design","Unsolved"]},{"location":"leetcode/272-closest-binary-search-tree-value-ii/","title":"272. Closest Binary Search Tree Value II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","Stack","Tree","Depth-First Search","Binary Search Tree","Heap (Priority Queue)","Binary Tree","Unsolved"]},{"location":"leetcode/273-integer-to-english-words/","title":"273. Integer to English Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Recursion","Unsolved"]},{"location":"leetcode/274-h-index/","title":"274. H-Index","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Counting Sort","Unsolved"]},{"location":"leetcode/275-h-index-ii/","title":"275. H-Index II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/276-paint-fence/","title":"276. Paint Fence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/277-find-the-celebrity/","title":"277. Find the Celebrity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","Greedy","Graph","Interactive","Unsolved"]},{"location":"leetcode/278-first-bad-version/","title":"278. First Bad Version","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Interactive","Unsolved"]},{"location":"leetcode/279-perfect-squares/","title":"279. Perfect Squares","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Breadth-First Search","Unsolved"]},{"location":"leetcode/28-find-the-index-of-the-first-occurrence-in-a-string/","title":"28. Find the Index of the First Occurrence in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","String Matching","Unsolved"]},{"location":"leetcode/280-wiggle-sort/","title":"280. Wiggle Sort","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/281-zigzag-iterator/","title":"281. Zigzag Iterator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Queue","Iterator","Unsolved"]},{"location":"leetcode/282-expression-add-operators/","title":"282. Expression Add Operators","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Backtracking","Unsolved"]},{"location":"leetcode/283-move-zeroes/","title":"283. Move Zeroes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/284-peeking-iterator/","title":"284. Peeking Iterator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Iterator","Unsolved"]},{"location":"leetcode/285-inorder-successor-in-bst/","title":"285. Inorder Successor in BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/286-walls-and-gates/","title":"286. Walls and Gates","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/287-find-the-duplicate-number/","title":"287. Find the Duplicate Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Bit Manipulation","Unsolved"]},{"location":"leetcode/288-unique-word-abbreviation/","title":"288. Unique Word Abbreviation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Design","Unsolved"]},{"location":"leetcode/289-game-of-life/","title":"289. Game of Life","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/29-divide-two-integers/","title":"29. Divide Two Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/290-word-pattern/","title":"290. Word Pattern","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/291-word-pattern-ii/","title":"291. Word Pattern II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Backtracking","Unsolved"]},{"location":"leetcode/292-nim-game/","title":"292. Nim Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Brainteaser","Game Theory","Unsolved"]},{"location":"leetcode/293-flip-game/","title":"293. Flip Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/294-flip-game-ii/","title":"294. Flip Game II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Backtracking","Memoization","Game Theory","Unsolved"]},{"location":"leetcode/295-find-median-from-data-stream/","title":"295. Find Median from Data Stream","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","Design","Sorting","Heap (Priority Queue)","Data Stream","Unsolved"]},{"location":"leetcode/296-best-meeting-point/","title":"296. Best Meeting Point","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Matrix","Unsolved"]},{"location":"leetcode/297-serialize-and-deserialize-binary-tree/","title":"297. Serialize and Deserialize Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Breadth-First Search","Design","Binary Tree","Unsolved"]},{"location":"leetcode/298-binary-tree-longest-consecutive-sequence/","title":"298. Binary Tree Longest Consecutive Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/299-bulls-and-cows/","title":"299. Bulls and Cows","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/3-longest-substring-without-repeating-characters/","title":"3. Longest Substring Without Repeating Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/30-substring-with-concatenation-of-all-words/","title":"30. Substring with Concatenation of All Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/300-longest-increasing-subsequence/","title":"300. Longest Increasing Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/301-remove-invalid-parentheses/","title":"301. Remove Invalid Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Breadth-First Search","Unsolved"]},{"location":"leetcode/302-smallest-rectangle-enclosing-black-pixels/","title":"302. Smallest Rectangle Enclosing Black Pixels","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/303-range-sum-query-immutable/","title":"303. Range Sum Query - Immutable","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Prefix Sum","Unsolved"]},{"location":"leetcode/304-range-sum-query-2d-immutable/","title":"304. Range Sum Query 2D - Immutable","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Matrix","Prefix Sum","Unsolved"]},{"location":"leetcode/305-number-of-islands-ii/","title":"305. Number of Islands II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Union Find","Unsolved"]},{"location":"leetcode/306-additive-number/","title":"306. Additive Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Unsolved"]},{"location":"leetcode/307-range-sum-query-mutable/","title":"307. Range Sum Query - Mutable","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Binary Indexed Tree","Segment Tree","Unsolved"]},{"location":"leetcode/308-range-sum-query-2d-mutable/","title":"308. Range Sum Query 2D - Mutable","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Binary Indexed Tree","Segment Tree","Matrix","Unsolved"]},{"location":"leetcode/309-best-time-to-buy-and-sell-stock-with-cooldown/","title":"309. Best Time to Buy and Sell Stock with Cooldown","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/31-next-permutation/","title":"31. Next Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/310-minimum-height-trees/","title":"310. Minimum Height Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/311-sparse-matrix-multiplication/","title":"311. Sparse Matrix Multiplication","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/312-burst-balloons/","title":"312. Burst Balloons","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/313-super-ugly-number/","title":"313. Super Ugly Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/314-binary-tree-vertical-order-traversal/","title":"314. Binary Tree Vertical Order Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/315-count-of-smaller-numbers-after-self/","title":"315. Count of Smaller Numbers After Self","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/316-remove-duplicate-letters/","title":"316. Remove Duplicate Letters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/317-shortest-distance-from-all-buildings/","title":"317. Shortest Distance from All Buildings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/318-maximum-product-of-word-lengths/","title":"318. Maximum Product of Word Lengths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Bit Manipulation","Unsolved"]},{"location":"leetcode/319-bulb-switcher/","title":"319. Bulb Switcher","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Brainteaser","Unsolved"]},{"location":"leetcode/32-longest-valid-parentheses/","title":"32. Longest Valid Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Stack","Unsolved"]},{"location":"leetcode/320-generalized-abbreviation/","title":"320. Generalized Abbreviation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/321-create-maximum-number/","title":"321. Create Maximum Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/322-coin-change/","title":"322. Coin Change","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Breadth-First Search","Unsolved"]},{"location":"leetcode/323-number-of-connected-components-in-an-undirected-graph/","title":"323. Number of Connected Components in an Undirected Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/324-wiggle-sort-ii/","title":"324. Wiggle Sort II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Sorting","Quickselect","Unsolved"]},{"location":"leetcode/325-maximum-size-subarray-sum-equals-k/","title":"325. Maximum Size Subarray Sum Equals k","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/326-power-of-three/","title":"326. Power of Three","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/327-count-of-range-sum/","title":"327. Count of Range Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/328-odd-even-linked-list/","title":"328. Odd Even Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/329-longest-increasing-path-in-a-matrix/","title":"329. Longest Increasing Path in a Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Depth-First Search","Breadth-First Search","Graph","Topological Sort","Memoization","Matrix","Unsolved"]},{"location":"leetcode/33-search-in-rotated-sorted-array/","title":"33. Search in Rotated Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/330-patching-array/","title":"330. Patching Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/331-verify-preorder-serialization-of-a-binary-tree/","title":"331. Verify Preorder Serialization of a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/332-reconstruct-itinerary/","title":"332. Reconstruct Itinerary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Eulerian Circuit","Unsolved"]},{"location":"leetcode/333-largest-bst-subtree/","title":"333. Largest BST Subtree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/334-increasing-triplet-subsequence/","title":"334. Increasing Triplet Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/335-self-crossing/","title":"335. Self Crossing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/336-palindrome-pairs/","title":"336. Palindrome Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","Unsolved"]},{"location":"leetcode/337-house-robber-iii/","title":"337. House Robber III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/338-counting-bits/","title":"338. Counting Bits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Unsolved"]},{"location":"leetcode/339-nested-list-weight-sum/","title":"339. Nested List Weight Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/34-find-first-and-last-position-of-element-in-sorted-array/","title":"34. Find First and Last Position of Element in Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/340-longest-substring-with-at-most-k-distinct-characters/","title":"340. Longest Substring with At Most K Distinct Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/341-flatten-nested-list-iterator/","title":"341. Flatten Nested List Iterator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Design","Queue","Iterator","Unsolved"]},{"location":"leetcode/342-power-of-four/","title":"342. Power of Four","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Recursion","Unsolved"]},{"location":"leetcode/343-integer-break/","title":"343. Integer Break","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/344-reverse-string/","title":"344. Reverse String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/345-reverse-vowels-of-a-string/","title":"345. Reverse Vowels of a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/346-moving-average-from-data-stream/","title":"346. Moving Average from Data Stream","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Queue","Data Stream","Unsolved"]},{"location":"leetcode/347-top-k-frequent-elements/","title":"347. Top K Frequent Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Divide and Conquer","Sorting","Heap (Priority Queue)","Bucket Sort","Counting","Quickselect","Unsolved"]},{"location":"leetcode/348-design-tic-tac-toe/","title":"348. Design Tic-Tac-Toe","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Design","Matrix","Unsolved"]},{"location":"leetcode/349-intersection-of-two-arrays/","title":"349. Intersection of Two Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/35-search-insert-position/","title":"35. Search Insert Position","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/350-intersection-of-two-arrays-ii/","title":"350. Intersection of Two Arrays II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/351-android-unlock-patterns/","title":"351. Android Unlock Patterns","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/352-data-stream-as-disjoint-intervals/","title":"352. Data Stream as Disjoint Intervals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Design","Ordered Set","Unsolved"]},{"location":"leetcode/353-design-snake-game/","title":"353. Design Snake Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Queue","Matrix","Unsolved"]},{"location":"leetcode/354-russian-doll-envelopes/","title":"354. Russian Doll Envelopes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/355-design-twitter/","title":"355. Design Twitter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Design","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/356-line-reflection/","title":"356. Line Reflection","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Unsolved"]},{"location":"leetcode/357-count-numbers-with-unique-digits/","title":"357. Count Numbers with Unique Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/358-rearrange-string-k-distance-apart/","title":"358. Rearrange String k Distance Apart","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Sorting","Heap (Priority Queue)","Counting","Unsolved"]},{"location":"leetcode/359-logger-rate-limiter/","title":"359. Logger Rate Limiter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Design","Unsolved"]},{"location":"leetcode/36-valid-sudoku/","title":"36. Valid Sudoku","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/360-sort-transformed-array/","title":"360. Sort Transformed Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/361-bomb-enemy/","title":"361. Bomb Enemy","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/362-design-hit-counter/","title":"362. Design Hit Counter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Design","Queue","Unsolved"]},{"location":"leetcode/363-max-sum-of-rectangle-no-larger-than-k/","title":"363. Max Sum of Rectangle No Larger Than K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Prefix Sum","Ordered Set","Unsolved"]},{"location":"leetcode/364-nested-list-weight-sum-ii/","title":"364. Nested List Weight Sum II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/365-water-and-jug-problem/","title":"365. Water and Jug Problem","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/366-find-leaves-of-binary-tree/","title":"366. Find Leaves of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/367-valid-perfect-square/","title":"367. Valid Perfect Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/368-largest-divisible-subset/","title":"368. Largest Divisible Subset","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Sorting","Unsolved"]},{"location":"leetcode/369-plus-one-linked-list/","title":"369. Plus One Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Math","Unsolved"]},{"location":"leetcode/37-sudoku-solver/","title":"37. Sudoku Solver","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Backtracking","Matrix","Unsolved"]},{"location":"leetcode/370-range-addition/","title":"370. Range Addition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/371-sum-of-two-integers/","title":"371. Sum of Two Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/372-super-pow/","title":"372. Super Pow","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Divide and Conquer","Unsolved"]},{"location":"leetcode/373-find-k-pairs-with-smallest-sums/","title":"373. Find K Pairs with Smallest Sums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/374-guess-number-higher-or-lower/","title":"374. Guess Number Higher or Lower","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Interactive","Unsolved"]},{"location":"leetcode/375-guess-number-higher-or-lower-ii/","title":"375. Guess Number Higher or Lower II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/376-wiggle-subsequence/","title":"376. Wiggle Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/377-combination-sum-iv/","title":"377. Combination Sum IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/378-kth-smallest-element-in-a-sorted-matrix/","title":"378. Kth Smallest Element in a Sorted Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/379-design-phone-directory/","title":"379. Design Phone Directory","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Linked List","Design","Queue","Unsolved"]},{"location":"leetcode/38-count-and-say/","title":"38. Count and Say","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/380-insert-delete-getrandom-o1/","title":"380. Insert Delete GetRandom O(1)","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Design","Randomized","Unsolved"]},{"location":"leetcode/381-insert-delete-getrandom-o1-duplicates-allowed/","title":"381. Insert Delete GetRandom O(1) - Duplicates allowed","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Design","Randomized","Unsolved"]},{"location":"leetcode/382-linked-list-random-node/","title":"382. Linked List Random Node","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Math","Reservoir Sampling","Randomized","Unsolved"]},{"location":"leetcode/383-ransom-note/","title":"383. Ransom Note","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/384-shuffle-an-array/","title":"384. Shuffle an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Randomized","Unsolved"]},{"location":"leetcode/385-mini-parser/","title":"385. Mini Parser","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Depth-First Search","Unsolved"]},{"location":"leetcode/386-lexicographical-numbers/","title":"386. Lexicographical Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Trie","Unsolved"]},{"location":"leetcode/387-first-unique-character-in-a-string/","title":"387. First Unique Character in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Queue","Counting","Unsolved"]},{"location":"leetcode/388-longest-absolute-file-path/","title":"388. Longest Absolute File Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Depth-First Search","Unsolved"]},{"location":"leetcode/389-find-the-difference/","title":"389. Find the Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Bit Manipulation","Sorting","Unsolved"]},{"location":"leetcode/39-combination-sum/","title":"39. Combination Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/390-elimination-game/","title":"390. Elimination Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/391-perfect-rectangle/","title":"391. Perfect Rectangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Line Sweep","Unsolved"]},{"location":"leetcode/392-is-subsequence/","title":"392. Is Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/393-utf-8-validation/","title":"393. UTF-8 Validation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Unsolved"]},{"location":"leetcode/394-decode-string/","title":"394. Decode String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Recursion","Unsolved"]},{"location":"leetcode/395-longest-substring-with-at-least-k-repeating-characters/","title":"395. Longest Substring with At Least K Repeating Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Divide and Conquer","Sliding Window","Unsolved"]},{"location":"leetcode/396-rotate-function/","title":"396. Rotate Function","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/397-integer-replacement/","title":"397. Integer Replacement","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Greedy","Bit Manipulation","Memoization","Unsolved"]},{"location":"leetcode/398-random-pick-index/","title":"398. Random Pick Index","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Reservoir Sampling","Randomized","Unsolved"]},{"location":"leetcode/399-evaluate-division/","title":"399. Evaluate Division","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Graph","Shortest Path","Unsolved"]},{"location":"leetcode/4-median-of-two-sorted-arrays/","title":"4. Median of Two Sorted Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Unsolved"]},{"location":"leetcode/40-combination-sum-ii/","title":"40. Combination Sum II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/400-nth-digit/","title":"400. Nth Digit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/401-binary-watch/","title":"401. Binary Watch","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/402-remove-k-digits/","title":"402. Remove K Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Monotonic Stack","Unsolved"]},{"location":"leetcode/403-frog-jump/","title":"403. Frog Jump","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/404-sum-of-left-leaves/","title":"404. Sum of Left Leaves","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/405-convert-a-number-to-hexadecimal/","title":"405. Convert a Number to Hexadecimal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/406-queue-reconstruction-by-height/","title":"406. Queue Reconstruction by Height","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Binary Indexed Tree","Segment Tree","Sorting","Unsolved"]},{"location":"leetcode/407-trapping-rain-water-ii/","title":"407. Trapping Rain Water II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/408-valid-word-abbreviation/","title":"408. Valid Word Abbreviation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/409-longest-palindrome/","title":"409. Longest Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Unsolved"]},{"location":"leetcode/41-first-missing-positive/","title":"41. First Missing Positive","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/410-split-array-largest-sum/","title":"410. Split Array Largest Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/411-minimum-unique-word-abbreviation/","title":"411. Minimum Unique Word Abbreviation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/412-fizz-buzz/","title":"412. Fizz Buzz","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/413-arithmetic-slices/","title":"413. Arithmetic Slices","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/414-third-maximum-number/","title":"414. Third Maximum Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/415-add-strings/","title":"415. Add Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/416-partition-equal-subset-sum/","title":"416. Partition Equal Subset Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/417-pacific-atlantic-water-flow/","title":"417. Pacific Atlantic Water Flow","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/418-sentence-screen-fitting/","title":"418. Sentence Screen Fitting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Simulation","Unsolved"]},{"location":"leetcode/419-battleships-in-a-board/","title":"419. Battleships in a Board","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Matrix","Unsolved"]},{"location":"leetcode/42-trapping-rain-water/","title":"42. Trapping Rain Water","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Dynamic Programming","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/420-strong-password-checker/","title":"420. Strong Password Checker","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/421-maximum-xor-of-two-numbers-in-an-array/","title":"421. Maximum XOR of Two Numbers in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Bit Manipulation","Trie","Unsolved"]},{"location":"leetcode/422-valid-word-square/","title":"422. Valid Word Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/423-reconstruct-original-digits-from-english/","title":"423. Reconstruct Original Digits from English","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Unsolved"]},{"location":"leetcode/424-longest-repeating-character-replacement/","title":"424. Longest Repeating Character Replacement","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/425-word-squares/","title":"425. Word Squares","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Backtracking","Trie","Unsolved"]},{"location":"leetcode/426-convert-binary-search-tree-to-sorted-doubly-linked-list/","title":"426. Convert Binary Search Tree to Sorted Doubly Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Stack","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Doubly-Linked List","Unsolved"]},{"location":"leetcode/427-construct-quad-tree/","title":"427. Construct Quad Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Tree","Matrix","Unsolved"]},{"location":"leetcode/428-serialize-and-deserialize-n-ary-tree/","title":"428. Serialize and Deserialize N-ary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/429-n-ary-tree-level-order-traversal/","title":"429. N-ary Tree Level Order Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Unsolved"]},{"location":"leetcode/43-multiply-strings/","title":"43. Multiply Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/430-flatten-a-multilevel-doubly-linked-list/","title":"430. Flatten a Multilevel Doubly Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Depth-First Search","Doubly-Linked List","Unsolved"]},{"location":"leetcode/431-encode-n-ary-tree-to-binary-tree/","title":"431. Encode N-ary Tree to Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Design","Binary Tree","Unsolved"]},{"location":"leetcode/432-all-oone-data-structure/","title":"432. All O`one Data Structure","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Design","Doubly-Linked List","Unsolved"]},{"location":"leetcode/433-minimum-genetic-mutation/","title":"433. Minimum Genetic Mutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Breadth-First Search","Unsolved"]},{"location":"leetcode/434-number-of-segments-in-a-string/","title":"434. Number of Segments in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/435-non-overlapping-intervals/","title":"435. Non-overlapping Intervals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Sorting","Unsolved"]},{"location":"leetcode/436-find-right-interval/","title":"436. Find Right Interval","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/437-path-sum-iii/","title":"437. Path Sum III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/438-find-all-anagrams-in-a-string/","title":"438. Find All Anagrams in a String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/439-ternary-expression-parser/","title":"439. Ternary Expression Parser","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Recursion","Unsolved"]},{"location":"leetcode/44-wildcard-matching/","title":"44. Wildcard Matching","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Greedy","Recursion","Unsolved"]},{"location":"leetcode/440-k-th-smallest-in-lexicographical-order/","title":"440. K-th Smallest in Lexicographical Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Trie","Unsolved"]},{"location":"leetcode/441-arranging-coins/","title":"441. Arranging Coins","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/442-find-all-duplicates-in-an-array/","title":"442. Find All Duplicates in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/443-string-compression/","title":"443. String Compression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/444-sequence-reconstruction/","title":"444. Sequence Reconstruction","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/445-add-two-numbers-ii/","title":"445. Add Two Numbers II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Math","Stack","Unsolved"]},{"location":"leetcode/446-arithmetic-slices-ii-subsequence/","title":"446. Arithmetic Slices II - Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/447-number-of-boomerangs/","title":"447. Number of Boomerangs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Unsolved"]},{"location":"leetcode/448-find-all-numbers-disappeared-in-an-array/","title":"448. Find All Numbers Disappeared in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/449-serialize-and-deserialize-bst/","title":"449. Serialize and Deserialize BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Breadth-First Search","Design","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/45-jump-game-ii/","title":"45. Jump Game II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/450-delete-node-in-a-bst/","title":"450. Delete Node in a BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/451-sort-characters-by-frequency/","title":"451. Sort Characters By Frequency","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sorting","Heap (Priority Queue)","Bucket Sort","Counting","Unsolved"]},{"location":"leetcode/452-minimum-number-of-arrows-to-burst-balloons/","title":"452. Minimum Number of Arrows to Burst Balloons","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/453-minimum-moves-to-equal-array-elements/","title":"453. Minimum Moves to Equal Array Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/454-4sum-ii/","title":"454. 4Sum II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/455-assign-cookies/","title":"455. Assign Cookies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/456-132-pattern/","title":"456. 132 Pattern","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Stack","Monotonic Stack","Ordered Set","Unsolved"]},{"location":"leetcode/457-circular-array-loop/","title":"457. Circular Array Loop","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Unsolved"]},{"location":"leetcode/458-poor-pigs/","title":"458. Poor Pigs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/459-repeated-substring-pattern/","title":"459. Repeated Substring Pattern","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","String Matching","Unsolved"]},{"location":"leetcode/46-permutations/","title":"46. Permutations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/460-lfu-cache/","title":"460. LFU Cache","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Linked List","Design","Doubly-Linked List","Unsolved"]},{"location":"leetcode/461-hamming-distance/","title":"461. Hamming Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/462-minimum-moves-to-equal-array-elements-ii/","title":"462. Minimum Moves to Equal Array Elements II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Unsolved"]},{"location":"leetcode/463-island-perimeter/","title":"463. Island Perimeter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/464-can-i-win/","title":"464. Can I Win","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Bit Manipulation","Memoization","Game Theory","Bitmask","Unsolved"]},{"location":"leetcode/465-optimal-account-balancing/","title":"465. Optimal Account Balancing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/466-count-the-repetitions/","title":"466. Count The Repetitions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/467-unique-substrings-in-wraparound-string/","title":"467. Unique Substrings in Wraparound String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/468-validate-ip-address/","title":"468. Validate IP Address","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/469-convex-polygon/","title":"469. Convex Polygon","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Unsolved"]},{"location":"leetcode/47-permutations-ii/","title":"47. Permutations II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/470-implement-rand10-using-rand7/","title":"470. Implement Rand10() Using Rand7()","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Rejection Sampling","Randomized","Probability and Statistics","Unsolved"]},{"location":"leetcode/471-encode-string-with-shortest-length/","title":"471. Encode String with Shortest Length","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/472-concatenated-words/","title":"472. Concatenated Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Depth-First Search","Trie","Unsolved"]},{"location":"leetcode/473-matchsticks-to-square/","title":"473. Matchsticks to Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/474-ones-and-zeroes/","title":"474. Ones and Zeroes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/475-heaters/","title":"475. Heaters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/476-number-complement/","title":"476. Number Complement","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/477-total-hamming-distance/","title":"477. Total Hamming Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/478-generate-random-point-in-a-circle/","title":"478. Generate Random Point in a Circle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Rejection Sampling","Randomized","Unsolved"]},{"location":"leetcode/479-largest-palindrome-product/","title":"479. Largest Palindrome Product","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/48-rotate-image/","title":"48. Rotate Image","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Matrix","Unsolved"]},{"location":"leetcode/480-sliding-window-median/","title":"480. Sliding Window Median","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/481-magical-string/","title":"481. Magical String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/482-license-key-formatting/","title":"482. License Key Formatting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/483-smallest-good-base/","title":"483. Smallest Good Base","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/484-find-permutation/","title":"484. Find Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Stack","Greedy","Unsolved"]},{"location":"leetcode/485-max-consecutive-ones/","title":"485. Max Consecutive Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/486-predict-the-winner/","title":"486. Predict the Winner","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Recursion","Game Theory","Unsolved"]},{"location":"leetcode/487-max-consecutive-ones-ii/","title":"487. Max Consecutive Ones II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sliding Window","Unsolved"]},{"location":"leetcode/488-zuma-game/","title":"488. Zuma Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Breadth-First Search","Memoization","Unsolved"]},{"location":"leetcode/489-robot-room-cleaner/","title":"489. Robot Room Cleaner","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Interactive","Unsolved"]},{"location":"leetcode/49-group-anagrams/","title":"49. Group Anagrams","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/490-the-maze/","title":"490. The Maze","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/491-non-decreasing-subsequences/","title":"491. Non-decreasing Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/492-construct-the-rectangle/","title":"492. Construct the Rectangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/493-reverse-pairs/","title":"493. Reverse Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Divide and Conquer","Binary Indexed Tree","Segment Tree","Merge Sort","Ordered Set","Unsolved"]},{"location":"leetcode/494-target-sum/","title":"494. Target Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Unsolved"]},{"location":"leetcode/495-teemo-attacking/","title":"495. Teemo Attacking","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/496-next-greater-element-i/","title":"496. Next Greater Element I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/497-random-point-in-non-overlapping-rectangles/","title":"497. Random Point in Non-overlapping Rectangles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Binary Search","Reservoir Sampling","Prefix Sum","Ordered Set","Randomized","Unsolved"]},{"location":"leetcode/498-diagonal-traverse/","title":"498. Diagonal Traverse","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/499-the-maze-iii/","title":"499. The Maze III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/5-longest-palindromic-substring/","title":"5. Longest Palindromic Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/50-powx-n/","title":"50. Pow(x, n)","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/500-keyboard-row/","title":"500. Keyboard Row","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/501-find-mode-in-binary-search-tree/","title":"501. Find Mode in Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/502-ipo/","title":"502. IPO","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/503-next-greater-element-ii/","title":"503. Next Greater Element II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/504-base-7/","title":"504. Base 7","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/505-the-maze-ii/","title":"505. The Maze II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/506-relative-ranks/","title":"506. Relative Ranks","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/507-perfect-number/","title":"507. Perfect Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/508-most-frequent-subtree-sum/","title":"508. Most Frequent Subtree Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/509-fibonacci-number/","title":"509. Fibonacci Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Recursion","Memoization","Unsolved"]},{"location":"leetcode/51-n-queens/","title":"51. N-Queens","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Unsolved"]},{"location":"leetcode/510-inorder-successor-in-bst-ii/","title":"510. Inorder Successor in BST II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/511-game-play-analysis-i/","title":"511. Game Play Analysis I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/512-game-play-analysis-ii/","title":"512. Game Play Analysis II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/513-find-bottom-left-tree-value/","title":"513. Find Bottom Left Tree Value","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/514-freedom-trail/","title":"514. Freedom Trail","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/515-find-largest-value-in-each-tree-row/","title":"515. Find Largest Value in Each Tree Row","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/516-longest-palindromic-subsequence/","title":"516. Longest Palindromic Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/517-super-washing-machines/","title":"517. Super Washing Machines","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/518-coin-change-ii/","title":"518. Coin Change II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/519-random-flip-matrix/","title":"519. Random Flip Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Reservoir Sampling","Randomized","Unsolved"]},{"location":"leetcode/52-n-queens-ii/","title":"52. N-Queens II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Unsolved"]},{"location":"leetcode/520-detect-capital/","title":"520. Detect Capital","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/521-longest-uncommon-subsequence-i/","title":"521. Longest Uncommon Subsequence I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/522-longest-uncommon-subsequence-ii/","title":"522. Longest Uncommon Subsequence II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","String","Sorting","Unsolved"]},{"location":"leetcode/523-continuous-subarray-sum/","title":"523. Continuous Subarray Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Prefix Sum","Unsolved"]},{"location":"leetcode/524-longest-word-in-dictionary-through-deleting/","title":"524. Longest Word in Dictionary through Deleting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","String","Sorting","Unsolved"]},{"location":"leetcode/525-contiguous-array/","title":"525. Contiguous Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/526-beautiful-arrangement/","title":"526. Beautiful Arrangement","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/527-word-abbreviation/","title":"527. Word Abbreviation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Greedy","Trie","Sorting","Unsolved"]},{"location":"leetcode/528-random-pick-with-weight/","title":"528. Random Pick with Weight","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Binary Search","Prefix Sum","Randomized","Unsolved"]},{"location":"leetcode/529-minesweeper/","title":"529. Minesweeper","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/53-maximum-subarray/","title":"53. Maximum Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Dynamic Programming","Unsolved"]},{"location":"leetcode/530-minimum-absolute-difference-in-bst/","title":"530. Minimum Absolute Difference in BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/531-lonely-pixel-i/","title":"531. Lonely Pixel I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/532-k-diff-pairs-in-an-array/","title":"532. K-diff Pairs in an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/533-lonely-pixel-ii/","title":"533. Lonely Pixel II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/534-game-play-analysis-iii/","title":"534. Game Play Analysis III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/535-encode-and-decode-tinyurl/","title":"535. Encode and Decode TinyURL","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Hash Function","Unsolved"]},{"location":"leetcode/536-construct-binary-tree-from-string/","title":"536. Construct Binary Tree from String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/537-complex-number-multiplication/","title":"537. Complex Number Multiplication","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/538-convert-bst-to-greater-tree/","title":"538. Convert BST to Greater Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/539-minimum-time-difference/","title":"539. Minimum Time Difference","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Sorting","Unsolved"]},{"location":"leetcode/54-spiral-matrix/","title":"54. Spiral Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/540-single-element-in-a-sorted-array/","title":"540. Single Element in a Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/541-reverse-string-ii/","title":"541. Reverse String II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/542-01-matrix/","title":"542. 01 Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/543-diameter-of-binary-tree/","title":"543. Diameter of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/544-output-contest-matches/","title":"544. Output Contest Matches","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Recursion","Simulation","Unsolved"]},{"location":"leetcode/545-boundary-of-binary-tree/","title":"545. Boundary of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/546-remove-boxes/","title":"546. Remove Boxes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/547-number-of-provinces/","title":"547. Number of Provinces","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/548-split-array-with-equal-sum/","title":"548. Split Array with Equal Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/549-binary-tree-longest-consecutive-sequence-ii/","title":"549. Binary Tree Longest Consecutive Sequence II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/55-jump-game/","title":"55. Jump Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/550-game-play-analysis-iv/","title":"550. Game Play Analysis IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/551-student-attendance-record-i/","title":"551. Student Attendance Record I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/552-student-attendance-record-ii/","title":"552. Student Attendance Record II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/553-optimal-division/","title":"553. Optimal Division","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/554-brick-wall/","title":"554. Brick Wall","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/555-split-concatenated-strings/","title":"555. Split Concatenated Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Greedy","Unsolved"]},{"location":"leetcode/556-next-greater-element-iii/","title":"556. Next Greater Element III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Two Pointers","String","Unsolved"]},{"location":"leetcode/557-reverse-words-in-a-string-iii/","title":"557. Reverse Words in a String III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/558-logical-or-of-two-binary-grids-represented-as-quad-trees/","title":"558. Logical OR of Two Binary Grids Represented as Quad-Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Divide and Conquer","Tree","Unsolved"]},{"location":"leetcode/559-maximum-depth-of-n-ary-tree/","title":"559. Maximum Depth of N-ary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/56-merge-intervals/","title":"56. Merge Intervals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/560-subarray-sum-equals-k/","title":"560. Subarray Sum Equals K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/561-array-partition/","title":"561. Array Partition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Counting Sort","Unsolved"]},{"location":"leetcode/562-longest-line-of-consecutive-one-in-matrix/","title":"562. Longest Line of Consecutive One in Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/563-binary-tree-tilt/","title":"563. Binary Tree Tilt","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/564-find-the-closest-palindrome/","title":"564. Find the Closest Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/565-array-nesting/","title":"565. Array Nesting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Unsolved"]},{"location":"leetcode/566-reshape-the-matrix/","title":"566. Reshape the Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/567-permutation-in-string/","title":"567. Permutation in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Two Pointers","String","Sliding Window","Unsolved"]},{"location":"leetcode/568-maximum-vacation-days/","title":"568. Maximum Vacation Days","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/569-median-employee-salary/","title":"569. Median Employee Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/57-insert-interval/","title":"57. Insert Interval","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/570-managers-with-at-least-5-direct-reports/","title":"570. Managers with at Least 5 Direct Reports","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/571-find-median-given-frequency-of-numbers/","title":"571. Find Median Given Frequency of Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/572-subtree-of-another-tree/","title":"572. Subtree of Another Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","String Matching","Binary Tree","Hash Function","Unsolved"]},{"location":"leetcode/573-squirrel-simulation/","title":"573. Squirrel Simulation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/574-winning-candidate/","title":"574. Winning Candidate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/575-distribute-candies/","title":"575. Distribute Candies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/576-out-of-boundary-paths/","title":"576. Out of Boundary Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/577-employee-bonus/","title":"577. Employee Bonus","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/578-get-highest-answer-rate-question/","title":"578. Get Highest Answer Rate Question","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/579-find-cumulative-salary-of-an-employee/","title":"579. Find Cumulative Salary of an Employee","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/58-length-of-last-word/","title":"58. Length of Last Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/580-count-student-number-in-departments/","title":"580. Count Student Number in Departments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/581-shortest-unsorted-continuous-subarray/","title":"581. Shortest Unsorted Continuous Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Stack","Greedy","Sorting","Monotonic Stack","Unsolved"]},{"location":"leetcode/582-kill-process/","title":"582. Kill Process","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Tree","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/583-delete-operation-for-two-strings/","title":"583. Delete Operation for Two Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/584-find-customer-referee/","title":"584. Find Customer Referee","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/585-investments-in-2016/","title":"585. Investments in 2016","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/586-customer-placing-the-largest-number-of-orders/","title":"586. Customer Placing the Largest Number of Orders","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/587-erect-the-fence/","title":"587. Erect the Fence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/588-design-in-memory-file-system/","title":"588. Design In-Memory File System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/589-n-ary-tree-preorder-traversal/","title":"589. N-ary Tree Preorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/59-spiral-matrix-ii/","title":"59. Spiral Matrix II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/590-n-ary-tree-postorder-traversal/","title":"590. N-ary Tree Postorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Unsolved"]},{"location":"leetcode/591-tag-validator/","title":"591. Tag Validator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/592-fraction-addition-and-subtraction/","title":"592. Fraction Addition and Subtraction","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/593-valid-square/","title":"593. Valid Square","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Unsolved"]},{"location":"leetcode/594-longest-harmonious-subsequence/","title":"594. Longest Harmonious Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sorting","Unsolved"]},{"location":"leetcode/595-big-countries/","title":"595. Big Countries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/596-classes-more-than-5-students/","title":"596. Classes More Than 5 Students","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/597-friend-requests-i-overall-acceptance-rate/","title":"597. Friend Requests I: Overall Acceptance Rate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/598-range-addition-ii/","title":"598. Range Addition II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/599-minimum-index-sum-of-two-lists/","title":"599. Minimum Index Sum of Two Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/6-zigzag-conversion/","title":"6. Zigzag Conversion","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/60-permutation-sequence/","title":"60. Permutation Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Recursion","Unsolved"]},{"location":"leetcode/600-non-negative-integers-without-consecutive-ones/","title":"600. Non-negative Integers without Consecutive Ones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/601-human-traffic-of-stadium/","title":"601. Human Traffic of Stadium","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/602-friend-requests-ii-who-has-the-most-friends/","title":"602. Friend Requests II: Who Has the Most Friends","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/603-consecutive-available-seats/","title":"603. Consecutive Available Seats","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/604-design-compressed-string-iterator/","title":"604. Design Compressed String Iterator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Design","Iterator","Unsolved"]},{"location":"leetcode/605-can-place-flowers/","title":"605. Can Place Flowers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/606-construct-string-from-binary-tree/","title":"606. Construct String from Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/607-sales-person/","title":"607. Sales Person","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/608-tree-node/","title":"608. Tree Node","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/609-find-duplicate-file-in-system/","title":"609. Find Duplicate File in System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/61-rotate-list/","title":"61. Rotate List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/610-triangle-judgement/","title":"610. Triangle Judgement","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/611-valid-triangle-number/","title":"611. Valid Triangle Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/612-shortest-distance-in-a-plane/","title":"612. Shortest Distance in a Plane","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/613-shortest-distance-in-a-line/","title":"613. Shortest Distance in a Line","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/614-second-degree-follower/","title":"614. Second Degree Follower","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/615-average-salary-departments-vs-company/","title":"615. Average Salary: Departments VS Company","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/616-add-bold-tag-in-string/","title":"616. Add Bold Tag in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","String Matching","Unsolved"]},{"location":"leetcode/617-merge-two-binary-trees/","title":"617. Merge Two Binary Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/618-students-report-by-geography/","title":"618. Students Report By Geography","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/619-biggest-single-number/","title":"619. Biggest Single Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/62-unique-paths/","title":"62. Unique Paths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/620-not-boring-movies/","title":"620. Not Boring Movies","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/621-task-scheduler/","title":"621. Task Scheduler","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Heap (Priority Queue)","Counting","Unsolved"]},{"location":"leetcode/622-design-circular-queue/","title":"622. Design Circular Queue","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Design","Queue","Unsolved"]},{"location":"leetcode/623-add-one-row-to-tree/","title":"623. Add One Row to Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/624-maximum-distance-in-arrays/","title":"624. Maximum Distance in Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/625-minimum-factorization/","title":"625. Minimum Factorization","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/626-exchange-seats/","title":"626. Exchange Seats","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/627-swap-salary/","title":"627. Swap Salary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Database","Unsolved"]},{"location":"leetcode/628-maximum-product-of-three-numbers/","title":"628. Maximum Product of Three Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Unsolved"]},{"location":"leetcode/629-k-inverse-pairs-array/","title":"629. K Inverse Pairs Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/63-unique-paths-ii/","title":"63. Unique Paths II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/630-course-schedule-iii/","title":"630. Course Schedule III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/631-design-excel-sum-formula/","title":"631. Design Excel Sum Formula","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Design","Topological Sort","Unsolved"]},{"location":"leetcode/632-smallest-range-covering-elements-from-k-lists/","title":"632. Smallest Range Covering Elements from K Lists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sliding Window","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/633-sum-of-square-numbers/","title":"633. Sum of Square Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Two Pointers","Binary Search","Unsolved"]},{"location":"leetcode/634-find-the-derangement-of-an-array/","title":"634. Find the Derangement of An Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/635-design-log-storage-system/","title":"635. Design Log Storage System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Ordered Set","Unsolved"]},{"location":"leetcode/636-exclusive-time-of-functions/","title":"636. Exclusive Time of Functions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Unsolved"]},{"location":"leetcode/637-average-of-levels-in-binary-tree/","title":"637. Average of Levels in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/638-shopping-offers/","title":"638. Shopping Offers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Memoization","Bitmask","Unsolved"]},{"location":"leetcode/639-decode-ways-ii/","title":"639. Decode Ways II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/64-minimum-path-sum/","title":"64. Minimum Path Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/640-solve-the-equation/","title":"640. Solve the Equation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Simulation","Unsolved"]},{"location":"leetcode/641-design-circular-deque/","title":"641. Design Circular Deque","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Linked List","Design","Queue","Unsolved"]},{"location":"leetcode/642-design-search-autocomplete-system/","title":"642. Design Search Autocomplete System","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Design","Trie","Data Stream","Unsolved"]},{"location":"leetcode/643-maximum-average-subarray-i/","title":"643. Maximum Average Subarray I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/644-maximum-average-subarray-ii/","title":"644. Maximum Average Subarray II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Prefix Sum","Unsolved"]},{"location":"leetcode/645-set-mismatch/","title":"645. Set Mismatch","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Bit Manipulation","Sorting","Unsolved"]},{"location":"leetcode/646-maximum-length-of-pair-chain/","title":"646. Maximum Length of Pair Chain","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Sorting","Unsolved"]},{"location":"leetcode/647-palindromic-substrings/","title":"647. Palindromic Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/648-replace-words/","title":"648. Replace Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","Unsolved"]},{"location":"leetcode/649-dota2-senate/","title":"649. Dota2 Senate","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Queue","Unsolved"]},{"location":"leetcode/65-valid-number/","title":"65. Valid Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/650-2-keys-keyboard/","title":"650. 2 Keys Keyboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/651-4-keys-keyboard/","title":"651. 4 Keys Keyboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/652-find-duplicate-subtrees/","title":"652. Find Duplicate Subtrees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/653-two-sum-iv-input-is-a-bst/","title":"653. Two Sum IV - Input is a BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Two Pointers","Tree","Depth-First Search","Breadth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/654-maximum-binary-tree/","title":"654. Maximum Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Stack","Tree","Monotonic Stack","Binary Tree","Unsolved"]},{"location":"leetcode/655-print-binary-tree/","title":"655. Print Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/656-coin-path/","title":"656. Coin Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/657-robot-return-to-origin/","title":"657. Robot Return to Origin","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Simulation","Unsolved"]},{"location":"leetcode/658-find-k-closest-elements/","title":"658. Find K Closest Elements","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sliding Window","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/659-split-array-into-consecutive-subsequences/","title":"659. Split Array into Consecutive Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/66-plus-one/","title":"66. Plus One","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/660-remove-9/","title":"660. Remove 9","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/661-image-smoother/","title":"661. Image Smoother","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/662-maximum-width-of-binary-tree/","title":"662. Maximum Width of Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/663-equal-tree-partition/","title":"663. Equal Tree Partition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/664-strange-printer/","title":"664. Strange Printer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/665-non-decreasing-array/","title":"665. Non-decreasing Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/666-path-sum-iv/","title":"666. Path Sum IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/667-beautiful-arrangement-ii/","title":"667. Beautiful Arrangement II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/668-kth-smallest-number-in-multiplication-table/","title":"668. Kth Smallest Number in Multiplication Table","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/669-trim-a-binary-search-tree/","title":"669. Trim a Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/67-add-binary/","title":"67. Add Binary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Bit Manipulation","Simulation","Unsolved"]},{"location":"leetcode/670-maximum-swap/","title":"670. Maximum Swap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/671-second-minimum-node-in-a-binary-tree/","title":"671. Second Minimum Node In a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/672-bulb-switcher-ii/","title":"672. Bulb Switcher II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/673-number-of-longest-increasing-subsequence/","title":"673. Number of Longest Increasing Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Binary Indexed Tree","Segment Tree","Unsolved"]},{"location":"leetcode/674-longest-continuous-increasing-subsequence/","title":"674. Longest Continuous Increasing Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/675-cut-off-trees-for-golf-event/","title":"675. Cut Off Trees for Golf Event","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/676-implement-magic-dictionary/","title":"676. Implement Magic Dictionary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/677-map-sum-pairs/","title":"677. Map Sum Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/678-valid-parenthesis-string/","title":"678. Valid Parenthesis String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Stack","Greedy","Unsolved"]},{"location":"leetcode/679-24-game/","title":"679. 24 Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Backtracking","Unsolved"]},{"location":"leetcode/68-text-justification/","title":"68. Text Justification","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Simulation","Unsolved"]},{"location":"leetcode/680-valid-palindrome-ii/","title":"680. Valid Palindrome II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/681-next-closest-time/","title":"681. Next Closest Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Enumeration","Unsolved"]},{"location":"leetcode/682-baseball-game/","title":"682. Baseball Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Simulation","Unsolved"]},{"location":"leetcode/683-k-empty-slots/","title":"683. K Empty Slots","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Indexed Tree","Sliding Window","Ordered Set","Unsolved"]},{"location":"leetcode/684-redundant-connection/","title":"684. Redundant Connection","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/685-redundant-connection-ii/","title":"685. Redundant Connection II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/686-repeated-string-match/","title":"686. Repeated String Match","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","String Matching","Unsolved"]},{"location":"leetcode/687-longest-univalue-path/","title":"687. Longest Univalue Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/688-knight-probability-in-chessboard/","title":"688. Knight Probability in Chessboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/689-maximum-sum-of-3-non-overlapping-subarrays/","title":"689. Maximum Sum of 3 Non-Overlapping Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/69-sqrtx/","title":"69. Sqrt(x)","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/690-employee-importance/","title":"690. Employee Importance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/691-stickers-to-spell-word/","title":"691. Stickers to Spell Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/692-top-k-frequent-words/","title":"692. Top K Frequent Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Trie","Sorting","Heap (Priority Queue)","Bucket Sort","Counting","Unsolved"]},{"location":"leetcode/693-binary-number-with-alternating-bits/","title":"693. Binary Number with Alternating Bits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/694-number-of-distinct-islands/","title":"694. Number of Distinct Islands","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Depth-First Search","Breadth-First Search","Union Find","Hash Function","Unsolved"]},{"location":"leetcode/695-max-area-of-island/","title":"695. Max Area of Island","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/696-count-binary-substrings/","title":"696. Count Binary Substrings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/697-degree-of-an-array/","title":"697. Degree of an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/698-partition-to-k-equal-sum-subsets/","title":"698. Partition to K Equal Sum Subsets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Backtracking","Bit Manipulation","Memoization","Bitmask","Unsolved"]},{"location":"leetcode/699-falling-squares/","title":"699. Falling Squares","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/7-reverse-integer/","title":"7. Reverse Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/70-climbing-stairs/","title":"70. Climbing Stairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Memoization","Unsolved"]},{"location":"leetcode/700-search-in-a-binary-search-tree/","title":"700. Search in a Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/701-insert-into-a-binary-search-tree/","title":"701. Insert into a Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/702-search-in-a-sorted-array-of-unknown-size/","title":"702. Search in a Sorted Array of Unknown Size","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Interactive","Unsolved"]},{"location":"leetcode/703-kth-largest-element-in-a-stream/","title":"703. Kth Largest Element in a Stream","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Design","Binary Search Tree","Heap (Priority Queue)","Binary Tree","Data Stream","Unsolved"]},{"location":"leetcode/704-binary-search/","title":"704. Binary Search","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/705-design-hashset/","title":"705. Design HashSet","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Linked List","Design","Hash Function","Unsolved"]},{"location":"leetcode/706-design-hashmap/","title":"706. Design HashMap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Linked List","Design","Hash Function","Unsolved"]},{"location":"leetcode/707-design-linked-list/","title":"707. Design Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Design","Unsolved"]},{"location":"leetcode/708-insert-into-a-sorted-circular-linked-list/","title":"708. Insert into a Sorted Circular Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/709-to-lower-case/","title":"709. To Lower Case","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/71-simplify-path/","title":"71. Simplify Path","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/710-random-pick-with-blacklist/","title":"710. Random Pick with Blacklist","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Binary Search","Sorting","Randomized","Unsolved"]},{"location":"leetcode/711-number-of-distinct-islands-ii/","title":"711. Number of Distinct Islands II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Depth-First Search","Breadth-First Search","Union Find","Hash Function","Unsolved"]},{"location":"leetcode/712-minimum-ascii-delete-sum-for-two-strings/","title":"712. Minimum ASCII Delete Sum for Two Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/713-subarray-product-less-than-k/","title":"713. Subarray Product Less Than K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sliding Window","Unsolved"]},{"location":"leetcode/714-best-time-to-buy-and-sell-stock-with-transaction-fee/","title":"714. Best Time to Buy and Sell Stock with Transaction Fee","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Unsolved"]},{"location":"leetcode/715-range-module/","title":"715. Range Module","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/716-max-stack/","title":"716. Max Stack","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Stack","Design","Doubly-Linked List","Ordered Set","Unsolved"]},{"location":"leetcode/717-1-bit-and-2-bit-characters/","title":"717. 1-bit and 2-bit Characters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/718-maximum-length-of-repeated-subarray/","title":"718. Maximum Length of Repeated Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Dynamic Programming","Sliding Window","Rolling Hash","Hash Function","Unsolved"]},{"location":"leetcode/719-find-k-th-smallest-pair-distance/","title":"719. Find K-th Smallest Pair Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/72-edit-distance/","title":"72. Edit Distance","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/720-longest-word-in-dictionary/","title":"720. Longest Word in Dictionary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","Sorting","Unsolved"]},{"location":"leetcode/721-accounts-merge/","title":"721. Accounts Merge","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Depth-First Search","Breadth-First Search","Union Find","Unsolved"]},{"location":"leetcode/722-remove-comments/","title":"722. Remove Comments","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/723-candy-crush/","title":"723. Candy Crush","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Matrix","Simulation","Unsolved"]},{"location":"leetcode/724-find-pivot-index/","title":"724. Find Pivot Index","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/725-split-linked-list-in-parts/","title":"725. Split Linked List in Parts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/726-number-of-atoms/","title":"726. Number of Atoms","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Stack","Sorting","Unsolved"]},{"location":"leetcode/727-minimum-window-subsequence/","title":"727. Minimum Window Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Sliding Window","Unsolved"]},{"location":"leetcode/728-self-dividing-numbers/","title":"728. Self Dividing Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/729-my-calendar-i/","title":"729. My Calendar I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Design","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/73-set-matrix-zeroes/","title":"73. Set Matrix Zeroes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Matrix","Unsolved"]},{"location":"leetcode/730-count-different-palindromic-subsequences/","title":"730. Count Different Palindromic Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/731-my-calendar-ii/","title":"731. My Calendar II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Design","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/732-my-calendar-iii/","title":"732. My Calendar III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Binary Search","Design","Segment Tree","Ordered Set","Unsolved"]},{"location":"leetcode/733-flood-fill/","title":"733. Flood Fill","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/734-sentence-similarity/","title":"734. Sentence Similarity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/735-asteroid-collision/","title":"735. Asteroid Collision","text":"C++ <p>\\(Time: O(N)\\)</p> <p>\\(Space: O(1)\\)</p> <pre><code>class Solution {\npublic:\nvector&lt;int&gt; asteroidCollision(vector&lt;int&gt;&amp; asteroids) {\nvector&lt;int&gt; res;\nfor (int i = 0; i &lt; asteroids.size(); i++) {\nint &amp;a = asteroids[i];\nif (res.empty() || res.back() &lt; 0 || a &gt; 0) {\nres.push_back(a);\n} else if (res.back() &lt;= -a) {\nif (res.back() &lt; -a) i--;\nres.pop_back();\n}\n}\nreturn res;\n}\n};\n</code></pre>","tags":["Array","Stack"]},{"location":"leetcode/736-parse-lisp-expression/","title":"736. Parse Lisp Expression","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Stack","Recursion","Unsolved"]},{"location":"leetcode/737-sentence-similarity-ii/","title":"737. Sentence Similarity II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Depth-First Search","Breadth-First Search","Union Find","Unsolved"]},{"location":"leetcode/738-monotone-increasing-digits/","title":"738. Monotone Increasing Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/739-daily-temperatures/","title":"739. Daily Temperatures","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/74-search-a-2d-matrix/","title":"74. Search a 2D Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Matrix","Unsolved"]},{"location":"leetcode/740-delete-and-earn/","title":"740. Delete and Earn","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Dynamic Programming","Unsolved"]},{"location":"leetcode/741-cherry-pickup/","title":"741. Cherry Pickup","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/742-closest-leaf-in-a-binary-tree/","title":"742. Closest Leaf in a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/743-network-delay-time/","title":"743. Network Delay Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/744-find-smallest-letter-greater-than-target/","title":"744. Find Smallest Letter Greater Than Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/745-prefix-and-suffix-search/","title":"745. Prefix and Suffix Search","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Design","Trie","Unsolved"]},{"location":"leetcode/746-min-cost-climbing-stairs/","title":"746. Min Cost Climbing Stairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/747-largest-number-at-least-twice-of-others/","title":"747. Largest Number At Least Twice of Others","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Unsolved"]},{"location":"leetcode/748-shortest-completing-word/","title":"748. Shortest Completing Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/749-contain-virus/","title":"749. Contain Virus","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Simulation","Unsolved"]},{"location":"leetcode/75-sort-colors/","title":"75. Sort Colors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/750-number-of-corner-rectangles/","title":"750. Number Of Corner Rectangles","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/751-ip-to-cidr/","title":"751. IP to CIDR","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Bit Manipulation","Unsolved"]},{"location":"leetcode/752-open-the-lock/","title":"752. Open the Lock","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Breadth-First Search","Unsolved"]},{"location":"leetcode/753-cracking-the-safe/","title":"753. Cracking the Safe","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Graph","Eulerian Circuit","Unsolved"]},{"location":"leetcode/754-reach-a-number/","title":"754. Reach a Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/755-pour-water/","title":"755. Pour Water","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/756-pyramid-transition-matrix/","title":"756. Pyramid Transition Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Depth-First Search","Breadth-First Search","Unsolved"]},{"location":"leetcode/757-set-intersection-size-at-least-two/","title":"757. Set Intersection Size At Least Two","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Unsolved"]},{"location":"leetcode/758-bold-words-in-string/","title":"758. Bold Words in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","String Matching","Unsolved"]},{"location":"leetcode/759-employee-free-time/","title":"759. Employee Free Time","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/76-minimum-window-substring/","title":"76. Minimum Window Substring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sliding Window","Unsolved"]},{"location":"leetcode/760-find-anagram-mappings/","title":"760. Find Anagram Mappings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/761-special-binary-string/","title":"761. Special Binary String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Recursion","Unsolved"]},{"location":"leetcode/762-prime-number-of-set-bits-in-binary-representation/","title":"762. Prime Number of Set Bits in Binary Representation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/763-partition-labels/","title":"763. Partition Labels","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/764-largest-plus-sign/","title":"764. Largest Plus Sign","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/765-couples-holding-hands/","title":"765. Couples Holding Hands","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Greedy","Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/766-toeplitz-matrix/","title":"766. Toeplitz Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/767-reorganize-string/","title":"767. Reorganize String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Greedy","Sorting","Heap (Priority Queue)","Counting","Unsolved"]},{"location":"leetcode/768-max-chunks-to-make-sorted-ii/","title":"768. Max Chunks To Make Sorted II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Greedy","Sorting","Monotonic Stack","Unsolved"]},{"location":"leetcode/769-max-chunks-to-make-sorted/","title":"769. Max Chunks To Make Sorted","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Greedy","Sorting","Monotonic Stack","Unsolved"]},{"location":"leetcode/77-combinations/","title":"77. Combinations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Unsolved"]},{"location":"leetcode/770-basic-calculator-iv/","title":"770. Basic Calculator IV","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","String","Stack","Recursion","Unsolved"]},{"location":"leetcode/771-jewels-and-stones/","title":"771. Jewels and Stones","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/772-basic-calculator-iii/","title":"772. Basic Calculator III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Stack","Recursion","Unsolved"]},{"location":"leetcode/773-sliding-puzzle/","title":"773. Sliding Puzzle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/774-minimize-max-distance-to-gas-station/","title":"774. Minimize Max Distance to Gas Station","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/775-global-and-local-inversions/","title":"775. Global and Local Inversions","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/776-split-bst/","title":"776. Split BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Search Tree","Recursion","Binary Tree","Unsolved"]},{"location":"leetcode/777-swap-adjacent-in-lr-string/","title":"777. Swap Adjacent in LR String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/778-swim-in-rising-water/","title":"778. Swim in Rising Water","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Depth-First Search","Breadth-First Search","Union Find","Heap (Priority Queue)","Matrix","Unsolved"]},{"location":"leetcode/779-k-th-symbol-in-grammar/","title":"779. K-th Symbol in Grammar","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Bit Manipulation","Recursion","Unsolved"]},{"location":"leetcode/78-subsets/","title":"78. Subsets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/780-reaching-points/","title":"780. Reaching Points","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/781-rabbits-in-forest/","title":"781. Rabbits in Forest","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Greedy","Unsolved"]},{"location":"leetcode/782-transform-to-chessboard/","title":"782. Transform to Chessboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Matrix","Unsolved"]},{"location":"leetcode/783-minimum-distance-between-bst-nodes/","title":"783. Minimum Distance Between BST Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/784-letter-case-permutation/","title":"784. Letter Case Permutation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/785-is-graph-bipartite/","title":"785. Is Graph Bipartite?","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/786-k-th-smallest-prime-fraction/","title":"786. K-th Smallest Prime Fraction","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/787-cheapest-flights-within-k-stops/","title":"787. Cheapest Flights Within K Stops","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Depth-First Search","Breadth-First Search","Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/788-rotated-digits/","title":"788. Rotated Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/789-escape-the-ghosts/","title":"789. Escape The Ghosts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/79-word-search/","title":"79. Word Search","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Matrix","Unsolved"]},{"location":"leetcode/790-domino-and-tromino-tiling/","title":"790. Domino and Tromino Tiling","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/791-custom-sort-string/","title":"791. Custom Sort String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Sorting","Unsolved"]},{"location":"leetcode/792-number-of-matching-subsequences/","title":"792. Number of Matching Subsequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Trie","Sorting","Unsolved"]},{"location":"leetcode/793-preimage-size-of-factorial-zeroes-function/","title":"793. Preimage Size of Factorial Zeroes Function","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/794-valid-tic-tac-toe-state/","title":"794. Valid Tic-Tac-Toe State","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/795-number-of-subarrays-with-bounded-maximum/","title":"795. Number of Subarrays with Bounded Maximum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/796-rotate-string/","title":"796. Rotate String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","String Matching","Unsolved"]},{"location":"leetcode/797-all-paths-from-source-to-target/","title":"797. All Paths From Source to Target","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/798-smallest-rotation-with-highest-score/","title":"798. Smallest Rotation with Highest Score","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Prefix Sum","Unsolved"]},{"location":"leetcode/799-champagne-tower/","title":"799. Champagne Tower","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/8-string-to-integer-atoi/","title":"8. String to Integer (atoi)","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/80-remove-duplicates-from-sorted-array-ii/","title":"80. Remove Duplicates from Sorted Array II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/800-similar-rgb-color/","title":"800. Similar RGB Color","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Enumeration","Unsolved"]},{"location":"leetcode/801-minimum-swaps-to-make-sequences-increasing/","title":"801. Minimum Swaps To Make Sequences Increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/802-find-eventual-safe-states/","title":"802. Find Eventual Safe States","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/803-bricks-falling-when-hit/","title":"803. Bricks Falling When Hit","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Union Find","Matrix","Unsolved"]},{"location":"leetcode/804-unique-morse-code-words/","title":"804. Unique Morse Code Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/805-split-array-with-same-average/","title":"805. Split Array With Same Average","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/806-number-of-lines-to-write-string/","title":"806. Number of Lines To Write String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/807-max-increase-to-keep-city-skyline/","title":"807. Max Increase to Keep City Skyline","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Matrix","Unsolved"]},{"location":"leetcode/808-soup-servings/","title":"808. Soup Servings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Probability and Statistics","Unsolved"]},{"location":"leetcode/809-expressive-words/","title":"809. Expressive Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","String","Unsolved"]},{"location":"leetcode/81-search-in-rotated-sorted-array-ii/","title":"81. Search in Rotated Sorted Array II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/810-chalkboard-xor-game/","title":"810. Chalkboard XOR Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Bit Manipulation","Brainteaser","Game Theory","Unsolved"]},{"location":"leetcode/811-subdomain-visit-count/","title":"811. Subdomain Visit Count","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/812-largest-triangle-area/","title":"812. Largest Triangle Area","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/813-largest-sum-of-averages/","title":"813. Largest Sum of Averages","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Prefix Sum","Unsolved"]},{"location":"leetcode/814-binary-tree-pruning/","title":"814. Binary Tree Pruning","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/815-bus-routes/","title":"815. Bus Routes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Breadth-First Search","Unsolved"]},{"location":"leetcode/816-ambiguous-coordinates/","title":"816. Ambiguous Coordinates","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Unsolved"]},{"location":"leetcode/817-linked-list-components/","title":"817. Linked List Components","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Linked List","Unsolved"]},{"location":"leetcode/818-race-car/","title":"818. Race Car","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/819-most-common-word/","title":"819. Most Common Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Counting","Unsolved"]},{"location":"leetcode/82-remove-duplicates-from-sorted-list-ii/","title":"82. Remove Duplicates from Sorted List II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/820-short-encoding-of-words/","title":"820. Short Encoding of Words","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Trie","Unsolved"]},{"location":"leetcode/821-shortest-distance-to-a-character/","title":"821. Shortest Distance to a Character","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","String","Unsolved"]},{"location":"leetcode/822-card-flipping-game/","title":"822. Card Flipping Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/823-binary-trees-with-factors/","title":"823. Binary Trees With Factors","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Dynamic Programming","Unsolved"]},{"location":"leetcode/824-goat-latin/","title":"824. Goat Latin","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/825-friends-of-appropriate-ages/","title":"825. Friends Of Appropriate Ages","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/826-most-profit-assigning-work/","title":"826. Most Profit Assigning Work","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Binary Search","Greedy","Sorting","Unsolved"]},{"location":"leetcode/827-making-a-large-island/","title":"827. Making A Large Island","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/828-count-unique-characters-of-all-substrings-of-a-given-string/","title":"828. Count Unique Characters of All Substrings of a Given String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/829-consecutive-numbers-sum/","title":"829. Consecutive Numbers Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/83-remove-duplicates-from-sorted-list/","title":"83. Remove Duplicates from Sorted List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/830-positions-of-large-groups/","title":"830. Positions of Large Groups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/831-masking-personal-information/","title":"831. Masking Personal Information","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Unsolved"]},{"location":"leetcode/832-flipping-an-image/","title":"832. Flipping an Image","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Matrix","Simulation","Unsolved"]},{"location":"leetcode/833-find-and-replace-in-string/","title":"833. Find And Replace in String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Sorting","Unsolved"]},{"location":"leetcode/834-sum-of-distances-in-tree/","title":"834. Sum of Distances in Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Graph","Unsolved"]},{"location":"leetcode/835-image-overlap/","title":"835. Image Overlap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Unsolved"]},{"location":"leetcode/836-rectangle-overlap/","title":"836. Rectangle Overlap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Unsolved"]},{"location":"leetcode/837-new-21-game/","title":"837. New 21 Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Sliding Window","Probability and Statistics","Unsolved"]},{"location":"leetcode/838-push-dominoes/","title":"838. Push Dominoes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/839-similar-string-groups/","title":"839. Similar String Groups","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Depth-First Search","Breadth-First Search","Union Find","Unsolved"]},{"location":"leetcode/84-largest-rectangle-in-histogram/","title":"84. Largest Rectangle in Histogram","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/840-magic-squares-in-grid/","title":"840. Magic Squares In Grid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Matrix","Unsolved"]},{"location":"leetcode/841-keys-and-rooms/","title":"841. Keys and Rooms","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Graph","Unsolved"]},{"location":"leetcode/842-split-array-into-fibonacci-sequence/","title":"842. Split Array into Fibonacci Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Unsolved"]},{"location":"leetcode/843-guess-the-word/","title":"843. Guess the Word","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Interactive","Game Theory","Unsolved"]},{"location":"leetcode/844-backspace-string-compare/","title":"844. Backspace String Compare","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Stack","Simulation","Unsolved"]},{"location":"leetcode/845-longest-mountain-in-array/","title":"845. Longest Mountain in Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Dynamic Programming","Enumeration","Unsolved"]},{"location":"leetcode/846-hand-of-straights/","title":"846. Hand of Straights","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Unsolved"]},{"location":"leetcode/847-shortest-path-visiting-all-nodes/","title":"847. Shortest Path Visiting All Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Bit Manipulation","Breadth-First Search","Graph","Bitmask","Unsolved"]},{"location":"leetcode/848-shifting-letters/","title":"848. Shifting Letters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/849-maximize-distance-to-closest-person/","title":"849. Maximize Distance to Closest Person","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/85-maximal-rectangle/","title":"85. Maximal Rectangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Matrix","Monotonic Stack","Unsolved"]},{"location":"leetcode/850-rectangle-area-ii/","title":"850. Rectangle Area II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Segment Tree","Line Sweep","Ordered Set","Unsolved"]},{"location":"leetcode/851-loud-and-rich/","title":"851. Loud and Rich","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Graph","Topological Sort","Unsolved"]},{"location":"leetcode/852-peak-index-in-a-mountain-array/","title":"852. Peak Index in a Mountain Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/853-car-fleet/","title":"853. Car Fleet","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Sorting","Monotonic Stack","Unsolved"]},{"location":"leetcode/854-k-similar-strings/","title":"854. K-Similar Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Breadth-First Search","Unsolved"]},{"location":"leetcode/855-exam-room/","title":"855. Exam Room","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Heap (Priority Queue)","Ordered Set","Unsolved"]},{"location":"leetcode/856-score-of-parentheses/","title":"856. Score of Parentheses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/857-minimum-cost-to-hire-k-workers/","title":"857. Minimum Cost to Hire K Workers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/858-mirror-reflection/","title":"858. Mirror Reflection","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Geometry","Number Theory","Unsolved"]},{"location":"leetcode/859-buddy-strings/","title":"859. Buddy Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/86-partition-list/","title":"86. Partition List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/860-lemonade-change/","title":"860. Lemonade Change","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Unsolved"]},{"location":"leetcode/861-score-after-flipping-matrix/","title":"861. Score After Flipping Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Bit Manipulation","Matrix","Unsolved"]},{"location":"leetcode/862-shortest-subarray-with-sum-at-least-k/","title":"862. Shortest Subarray with Sum at Least K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Queue","Sliding Window","Heap (Priority Queue)","Prefix Sum","Monotonic Queue","Unsolved"]},{"location":"leetcode/863-all-nodes-distance-k-in-binary-tree/","title":"863. All Nodes Distance K in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/864-shortest-path-to-get-all-keys/","title":"864. Shortest Path to Get All Keys","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/865-smallest-subtree-with-all-the-deepest-nodes/","title":"865. Smallest Subtree with all the Deepest Nodes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/866-prime-palindrome/","title":"866. Prime Palindrome","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/867-transpose-matrix/","title":"867. Transpose Matrix","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/868-binary-gap/","title":"868. Binary Gap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Bit Manipulation","Unsolved"]},{"location":"leetcode/869-reordered-power-of-2/","title":"869. Reordered Power of 2","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Sorting","Counting","Enumeration","Unsolved"]},{"location":"leetcode/87-scramble-string/","title":"87. Scramble String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/870-advantage-shuffle/","title":"870. Advantage Shuffle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/871-minimum-number-of-refueling-stops/","title":"871. Minimum Number of Refueling Stops","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Greedy","Heap (Priority Queue)","Unsolved"]},{"location":"leetcode/872-leaf-similar-trees/","title":"872. Leaf-Similar Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/873-length-of-longest-fibonacci-subsequence/","title":"873. Length of Longest Fibonacci Subsequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Dynamic Programming","Unsolved"]},{"location":"leetcode/874-walking-robot-simulation/","title":"874. Walking Robot Simulation","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/875-koko-eating-bananas/","title":"875. Koko Eating Bananas","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Binary Search","Unsolved"]},{"location":"leetcode/876-middle-of-the-linked-list/","title":"876. Middle of the Linked List","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Two Pointers","Unsolved"]},{"location":"leetcode/877-stone-game/","title":"877. Stone Game","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Game Theory","Unsolved"]},{"location":"leetcode/878-nth-magical-number/","title":"878. Nth Magical Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Unsolved"]},{"location":"leetcode/879-profitable-schemes/","title":"879. Profitable Schemes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/88-merge-sorted-array/","title":"88. Merge Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/880-decoded-string-at-index/","title":"880. Decoded String at Index","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Unsolved"]},{"location":"leetcode/881-boats-to-save-people/","title":"881. Boats to Save People","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/882-reachable-nodes-in-subdivided-graph/","title":"882. Reachable Nodes In Subdivided Graph","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Graph","Heap (Priority Queue)","Shortest Path","Unsolved"]},{"location":"leetcode/883-projection-area-of-3d-shapes/","title":"883. Projection Area of 3D Shapes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Matrix","Unsolved"]},{"location":"leetcode/884-uncommon-words-from-two-sentences/","title":"884. Uncommon Words from Two Sentences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Unsolved"]},{"location":"leetcode/885-spiral-matrix-iii/","title":"885. Spiral Matrix III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"leetcode/886-possible-bipartition/","title":"886. Possible Bipartition","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/887-super-egg-drop/","title":"887. Super Egg Drop","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/888-fair-candy-swap/","title":"888. Fair Candy Swap","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Sorting","Unsolved"]},{"location":"leetcode/889-construct-binary-tree-from-preorder-and-postorder-traversal/","title":"889. Construct Binary Tree from Preorder and Postorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Divide and Conquer","Tree","Binary Tree","Unsolved"]},{"location":"leetcode/89-gray-code/","title":"89. Gray Code","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/890-find-and-replace-pattern/","title":"890. Find and Replace Pattern","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/891-sum-of-subsequence-widths/","title":"891. Sum of Subsequence Widths","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Sorting","Unsolved"]},{"location":"leetcode/892-surface-area-of-3d-shapes/","title":"892. Surface Area of 3D Shapes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Matrix","Unsolved"]},{"location":"leetcode/893-groups-of-special-equivalent-strings/","title":"893. Groups of Special-Equivalent Strings","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/894-all-possible-full-binary-trees/","title":"894. All Possible Full Binary Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Recursion","Memoization","Binary Tree","Unsolved"]},{"location":"leetcode/895-maximum-frequency-stack/","title":"895. Maximum Frequency Stack","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Stack","Design","Ordered Set","Unsolved"]},{"location":"leetcode/896-monotonic-array/","title":"896. Monotonic Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/897-increasing-order-search-tree/","title":"897. Increasing Order Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/898-bitwise-ors-of-subarrays/","title":"898. Bitwise ORs of Subarrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Bit Manipulation","Unsolved"]},{"location":"leetcode/899-orderly-queue/","title":"899. Orderly Queue","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Sorting","Unsolved"]},{"location":"leetcode/9-palindrome-number/","title":"9. Palindrome Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Unsolved"]},{"location":"leetcode/90-subsets-ii/","title":"90. Subsets II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Backtracking","Bit Manipulation","Unsolved"]},{"location":"leetcode/900-rle-iterator/","title":"900. RLE Iterator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Design","Counting","Iterator","Unsolved"]},{"location":"leetcode/901-online-stock-span/","title":"901. Online Stock Span","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Design","Monotonic Stack","Data Stream","Unsolved"]},{"location":"leetcode/902-numbers-at-most-n-given-digit-set/","title":"902. Numbers At Most N Given Digit Set","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","String","Binary Search","Dynamic Programming","Unsolved"]},{"location":"leetcode/903-valid-permutations-for-di-sequence/","title":"903. Valid Permutations for DI Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/904-fruit-into-baskets/","title":"904. Fruit Into Baskets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Unsolved"]},{"location":"leetcode/905-sort-array-by-parity/","title":"905. Sort Array By Parity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/906-super-palindromes/","title":"906. Super Palindromes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Enumeration","Unsolved"]},{"location":"leetcode/907-sum-of-subarray-minimums/","title":"907. Sum of Subarray Minimums","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/908-smallest-range-i/","title":"908. Smallest Range I","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/909-snakes-and-ladders/","title":"909. Snakes and Ladders","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/91-decode-ways/","title":"91. Decode Ways","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/910-smallest-range-ii/","title":"910. Smallest Range II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Sorting","Unsolved"]},{"location":"leetcode/911-online-election/","title":"911. Online Election","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Binary Search","Design","Unsolved"]},{"location":"leetcode/912-sort-an-array/","title":"912. Sort an Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Sorting","Heap (Priority Queue)","Merge Sort","Bucket Sort","Radix Sort","Counting Sort","Unsolved"]},{"location":"leetcode/913-cat-and-mouse/","title":"913. Cat and Mouse","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Graph","Topological Sort","Memoization","Game Theory","Unsolved"]},{"location":"leetcode/914-x-of-a-kind-in-a-deck-of-cards/","title":"914. X of a Kind in a Deck of Cards","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Counting","Number Theory","Unsolved"]},{"location":"leetcode/915-partition-array-into-disjoint-intervals/","title":"915. Partition Array into Disjoint Intervals","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/916-word-subsets/","title":"916. Word Subsets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/917-reverse-only-letters/","title":"917. Reverse Only Letters","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/918-maximum-sum-circular-subarray/","title":"918. Maximum Sum Circular Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Divide and Conquer","Dynamic Programming","Queue","Monotonic Queue","Unsolved"]},{"location":"leetcode/919-complete-binary-tree-inserter/","title":"919. Complete Binary Tree Inserter","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Design","Binary Tree","Unsolved"]},{"location":"leetcode/92-reverse-linked-list-ii/","title":"92. Reverse Linked List II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Linked List","Unsolved"]},{"location":"leetcode/920-number-of-music-playlists/","title":"920. Number of Music Playlists","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Combinatorics","Unsolved"]},{"location":"leetcode/921-minimum-add-to-make-parentheses-valid/","title":"921. Minimum Add to Make Parentheses Valid","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Unsolved"]},{"location":"leetcode/922-sort-array-by-parity-ii/","title":"922. Sort Array By Parity II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/923-3sum-with-multiplicity/","title":"923. 3Sum With Multiplicity","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Two Pointers","Sorting","Counting","Unsolved"]},{"location":"leetcode/924-minimize-malware-spread/","title":"924. Minimize Malware Spread","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/925-long-pressed-name/","title":"925. Long Pressed Name","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Two Pointers","String","Unsolved"]},{"location":"leetcode/926-flip-string-to-monotone-increasing/","title":"926. Flip String to Monotone Increasing","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/927-three-equal-parts/","title":"927. Three Equal Parts","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/928-minimize-malware-spread-ii/","title":"928. Minimize Malware Spread II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Union Find","Matrix","Unsolved"]},{"location":"leetcode/929-unique-email-addresses/","title":"929. Unique Email Addresses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/93-restore-ip-addresses/","title":"93. Restore IP Addresses","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Backtracking","Unsolved"]},{"location":"leetcode/930-binary-subarrays-with-sum/","title":"930. Binary Subarrays With Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/931-minimum-falling-path-sum/","title":"931. Minimum Falling Path Sum","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Matrix","Unsolved"]},{"location":"leetcode/932-beautiful-array/","title":"932. Beautiful Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Divide and Conquer","Unsolved"]},{"location":"leetcode/933-number-of-recent-calls/","title":"933. Number of Recent Calls","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Design","Queue","Data Stream","Unsolved"]},{"location":"leetcode/934-shortest-bridge/","title":"934. Shortest Bridge","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Depth-First Search","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/935-knight-dialer/","title":"935. Knight Dialer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Unsolved"]},{"location":"leetcode/936-stamping-the-sequence/","title":"936. Stamping The Sequence","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Stack","Greedy","Queue","Unsolved"]},{"location":"leetcode/937-reorder-data-in-log-files/","title":"937. Reorder Data in Log Files","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Sorting","Unsolved"]},{"location":"leetcode/938-range-sum-of-bst/","title":"938. Range Sum of BST","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/939-minimum-area-rectangle/","title":"939. Minimum Area Rectangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Geometry","Sorting","Unsolved"]},{"location":"leetcode/94-binary-tree-inorder-traversal/","title":"94. Binary Tree Inorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Stack","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/940-distinct-subsequences-ii/","title":"940. Distinct Subsequences II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/941-valid-mountain-array/","title":"941. Valid Mountain Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Unsolved"]},{"location":"leetcode/942-di-string-match/","title":"942. DI String Match","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","String","Greedy","Unsolved"]},{"location":"leetcode/943-find-the-shortest-superstring/","title":"943. Find the Shortest Superstring","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/944-delete-columns-to-make-sorted/","title":"944. Delete Columns to Make Sorted","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Unsolved"]},{"location":"leetcode/945-minimum-increment-to-make-array-unique/","title":"945. Minimum Increment to Make Array Unique","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Greedy","Sorting","Counting","Unsolved"]},{"location":"leetcode/946-validate-stack-sequences/","title":"946. Validate Stack Sequences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Simulation","Unsolved"]},{"location":"leetcode/947-most-stones-removed-with-same-row-or-column/","title":"947. Most Stones Removed with Same Row or Column","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/948-bag-of-tokens/","title":"948. Bag of Tokens","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/949-largest-time-for-given-digits/","title":"949. Largest Time for Given Digits","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Enumeration","Unsolved"]},{"location":"leetcode/95-unique-binary-search-trees-ii/","title":"95. Unique Binary Search Trees II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Backtracking","Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/950-reveal-cards-in-increasing-order/","title":"950. Reveal Cards In Increasing Order","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Queue","Sorting","Simulation","Unsolved"]},{"location":"leetcode/951-flip-equivalent-binary-trees/","title":"951. Flip Equivalent Binary Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/952-largest-component-size-by-common-factor/","title":"952. Largest Component Size by Common Factor","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Union Find","Unsolved"]},{"location":"leetcode/953-verifying-an-alien-dictionary/","title":"953. Verifying an Alien Dictionary","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/954-array-of-doubled-pairs/","title":"954. Array of Doubled Pairs","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Greedy","Sorting","Unsolved"]},{"location":"leetcode/955-delete-columns-to-make-sorted-ii/","title":"955. Delete Columns to Make Sorted II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Greedy","Unsolved"]},{"location":"leetcode/956-tallest-billboard/","title":"956. Tallest Billboard","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/957-prison-cells-after-n-days/","title":"957. Prison Cells After N Days","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Math","Bit Manipulation","Unsolved"]},{"location":"leetcode/958-check-completeness-of-a-binary-tree/","title":"958. Check Completeness of a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/959-regions-cut-by-slashes/","title":"959. Regions Cut By Slashes","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Depth-First Search","Breadth-First Search","Union Find","Graph","Unsolved"]},{"location":"leetcode/96-unique-binary-search-trees/","title":"96. Unique Binary Search Trees","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Tree","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/960-delete-columns-to-make-sorted-iii/","title":"960. Delete Columns to Make Sorted III","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Dynamic Programming","Unsolved"]},{"location":"leetcode/961-n-repeated-element-in-size-2n-array/","title":"961. N-Repeated Element in Size 2N Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Unsolved"]},{"location":"leetcode/962-maximum-width-ramp/","title":"962. Maximum Width Ramp","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Stack","Monotonic Stack","Unsolved"]},{"location":"leetcode/963-minimum-area-rectangle-ii/","title":"963. Minimum Area Rectangle II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Geometry","Unsolved"]},{"location":"leetcode/964-least-operators-to-express-number/","title":"964. Least Operators to Express Number","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Dynamic Programming","Unsolved"]},{"location":"leetcode/965-univalued-binary-tree/","title":"965. Univalued Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/966-vowel-spellchecker/","title":"966. Vowel Spellchecker","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","String","Unsolved"]},{"location":"leetcode/967-numbers-with-same-consecutive-differences/","title":"967. Numbers With Same Consecutive Differences","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Backtracking","Breadth-First Search","Unsolved"]},{"location":"leetcode/968-binary-tree-cameras/","title":"968. Binary Tree Cameras","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Dynamic Programming","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/969-pancake-sorting/","title":"969. Pancake Sorting","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Greedy","Sorting","Unsolved"]},{"location":"leetcode/97-interleaving-string/","title":"97. Interleaving String","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Dynamic Programming","Unsolved"]},{"location":"leetcode/970-powerful-integers/","title":"970. Powerful Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Math","Unsolved"]},{"location":"leetcode/971-flip-binary-tree-to-match-preorder-traversal/","title":"971. Flip Binary Tree To Match Preorder Traversal","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/972-equal-rational-numbers/","title":"972. Equal Rational Numbers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","String","Unsolved"]},{"location":"leetcode/973-k-closest-points-to-origin/","title":"973. K Closest Points to Origin","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Divide and Conquer","Geometry","Sorting","Heap (Priority Queue)","Quickselect","Unsolved"]},{"location":"leetcode/974-subarray-sums-divisible-by-k/","title":"974. Subarray Sums Divisible by K","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Prefix Sum","Unsolved"]},{"location":"leetcode/975-odd-even-jump/","title":"975. Odd Even Jump","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Stack","Monotonic Stack","Ordered Set","Unsolved"]},{"location":"leetcode/976-largest-perimeter-triangle/","title":"976. Largest Perimeter Triangle","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Greedy","Sorting","Unsolved"]},{"location":"leetcode/977-squares-of-a-sorted-array/","title":"977. Squares of a Sorted Array","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Sorting","Unsolved"]},{"location":"leetcode/978-longest-turbulent-subarray/","title":"978. Longest Turbulent Subarray","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Sliding Window","Unsolved"]},{"location":"leetcode/979-distribute-coins-in-binary-tree/","title":"979. Distribute Coins in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/98-validate-binary-search-tree/","title":"98. Validate Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/980-unique-paths-iii/","title":"980. Unique Paths III","text":"C++ <p>\\(Time: O(N^2)\\)</p> <p>\\(Space: O(N^2)\\)</p> <pre><code>typedef pair&lt;int,int&gt; pii;\nclass Solution {\npublic:\npii start;\nint res;\nint uniquePathsIII(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {\n// default start point\nint count = 1;\nfor (int i = 0; i &lt; grid.size(); i++) {\nfor (int j = 0; j &lt; grid[0].size(); j++) {\nif (grid[i][j] == 1) {\nstart.first = i;\nstart.second = j;\n}\nif (grid[i][j] == 0) {\ncount++;\n}\n}\n}\nres = 0;\ndfs(grid, start.first, start.second, count);\nreturn res;\n}\nvoid dfs(vector&lt;vector&lt;int&gt;&gt;&amp; grid, int x, int y, int square) {\nif (!(x &gt;= 0 &amp;&amp; x &lt; grid.size() &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; grid[0].size() &amp;&amp; grid[x][y] &gt;= 0)) {\nreturn;\n}\nif (grid[x][y] == 2) {\nif (square == 0)\nres++;\nreturn;\n}\ngrid[x][y] ^= (1&lt;&lt;31);\ndfs(grid, x, y-1, square-1);\ndfs(grid, x-1, y, square-1);\ndfs(grid, x, y+1, square-1);\ndfs(grid, x+1, y, square-1);\ngrid[x][y] ^= (1&lt;&lt;31);\nreturn;\n}\n};\n</code></pre>","tags":["Array","Backtracking","Bit Manipulation","Matrix"]},{"location":"leetcode/981-time-based-key-value-store/","title":"981. Time Based Key-Value Store","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","String","Binary Search","Design","Unsolved"]},{"location":"leetcode/982-triples-with-bitwise-and-equal-to-zero/","title":"982. Triples with Bitwise AND Equal To Zero","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Bit Manipulation","Unsolved"]},{"location":"leetcode/983-minimum-cost-for-tickets/","title":"983. Minimum Cost For Tickets","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Dynamic Programming","Unsolved"]},{"location":"leetcode/984-string-without-aaa-or-bbb/","title":"984. String Without AAA or BBB","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Greedy","Unsolved"]},{"location":"leetcode/985-sum-of-even-numbers-after-queries/","title":"985. Sum of Even Numbers After Queries","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Simulation","Unsolved"]},{"location":"leetcode/986-interval-list-intersections/","title":"986. Interval List Intersections","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Two Pointers","Unsolved"]},{"location":"leetcode/987-vertical-order-traversal-of-a-binary-tree/","title":"987. Vertical Order Traversal of a Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Hash Table","Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/988-smallest-string-starting-from-leaf/","title":"988. Smallest String Starting From Leaf","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["String","Tree","Depth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/989-add-to-array-form-of-integer/","title":"989. Add to Array-Form of Integer","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Unsolved"]},{"location":"leetcode/99-recover-binary-search-tree/","title":"99. Recover Binary Search Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Binary Search Tree","Binary Tree","Unsolved"]},{"location":"leetcode/990-satisfiability-of-equality-equations/","title":"990. Satisfiability of Equality Equations","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","String","Union Find","Graph","Unsolved"]},{"location":"leetcode/991-broken-calculator/","title":"991. Broken Calculator","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Math","Greedy","Unsolved"]},{"location":"leetcode/992-subarrays-with-k-different-integers/","title":"992. Subarrays with K Different Integers","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Sliding Window","Counting","Unsolved"]},{"location":"leetcode/993-cousins-in-binary-tree/","title":"993. Cousins in Binary Tree","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Depth-First Search","Breadth-First Search","Binary Tree","Unsolved"]},{"location":"leetcode/994-rotting-oranges/","title":"994. Rotting Oranges","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Breadth-First Search","Matrix","Unsolved"]},{"location":"leetcode/995-minimum-number-of-k-consecutive-bit-flips/","title":"995. Minimum Number of K Consecutive Bit Flips","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Bit Manipulation","Queue","Sliding Window","Prefix Sum","Unsolved"]},{"location":"leetcode/996-number-of-squareful-arrays/","title":"996. Number of Squareful Arrays","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Math","Dynamic Programming","Backtracking","Bit Manipulation","Bitmask","Unsolved"]},{"location":"leetcode/997-find-the-town-judge/","title":"997. Find the Town Judge","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Hash Table","Graph","Unsolved"]},{"location":"leetcode/998-maximum-binary-tree-ii/","title":"998. Maximum Binary Tree II","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Tree","Binary Tree","Unsolved"]},{"location":"leetcode/999-available-captures-for-rook/","title":"999. Available Captures for Rook","text":"C++ <p>\\(Time: O()\\)</p> <p>\\(Space: O()\\)</p>","tags":["Array","Matrix","Simulation","Unsolved"]},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#array","title":"Array","text":"<ul> <li>1. Two Sum</li> <li>1000. Minimum Cost to Merge Stones</li> <li>1001. Grid Illumination</li> <li>1002. Find Common Characters</li> <li>1004. Max Consecutive Ones III</li> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1007. Minimum Domino Rotations For Equal Row</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1011. Capacity To Ship Packages Within D Days</li> <li>1013. Partition Array Into Three Parts With Equal Sum</li> <li>1014. Best Sightseeing Pair</li> <li>1018. Binary Prefix Divisible By 5</li> <li>1019. Next Greater Node In Linked List</li> <li>1020. Number of Enclaves</li> <li>1024. Video Stitching</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1029. Two City Scheduling</li> <li>1030. Matrix Cells in Distance Order</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1032. Stream of Characters</li> <li>1034. Coloring A Border</li> <li>1035. Uncrossed Lines</li> <li>1036. Escape a Large Maze</li> <li>1037. Valid Boomerang</li> <li>1039. Minimum Score Triangulation of Polygon</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1043. Partition Array for Maximum Sum</li> <li>1046. Last Stone Weight</li> <li>1048. Longest String Chain</li> <li>1049. Last Stone Weight II</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>1051. Height Checker</li> <li>1052. Grumpy Bookstore Owner</li> <li>1053. Previous Permutation With One Swap</li> <li>1054. Distant Barcodes</li> <li>1057. Campus Bikes</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>1060. Missing Element in Sorted Array</li> <li>1063. Number of Valid Subarrays</li> <li>1064. Fixed Point</li> <li>1065. Index Pairs of a String</li> <li>1066. Campus Bikes II</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1073. Adding Two Negabinary Numbers</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1085. Sum of Digits in the Minimum Number</li> <li>1086. High Five</li> <li>1089. Duplicate Zeros</li> <li>1090. Largest Values From Labels</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1093. Statistics from a Large Sample</li> <li>1094. Car Pooling</li> <li>1095. Find in Mountain Array</li> <li>1099. Two Sum Less Than K</li> <li>11. Container With Most Water</li> <li>1101. The Earliest Moment When Everyone Become Friends</li> <li>1102. Path With Maximum Minimum Value</li> <li>1105. Filling Bookcase Shelves</li> <li>1109. Corporate Flight Bookings</li> <li>1121. Divide Array Into Increasing Sequences</li> <li>1122. Relative Sort Array</li> <li>1124. Longest Well-Performing Interval</li> <li>1125. Smallest Sufficient Team</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1131. Maximum of Absolute Value Expression</li> <li>1133. Largest Unique Number</li> <li>1139. Largest 1-Bordered Square</li> <li>1140. Stone Game II</li> <li>1144. Decrease Elements To Make Array Zigzag</li> <li>1146. Snapshot Array</li> <li>1150. Check If a Number Is Majority Element in a Sorted Array</li> <li>1151. Minimum Swaps to Group All 1's Together</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1157. Online Majority Element In Subarray</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1162. As Far from Land as Possible</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1176. Diet Plan Performance</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>118. Pascal's Triangle</li> <li>1181. Before and After Puzzle</li> <li>1182. Shortest Distance to Target Color</li> <li>1184. Distance Between Bus Stops</li> <li>1186. Maximum Subarray Sum with One Deletion</li> <li>1187. Make Array Strictly Increasing</li> <li>119. Pascal's Triangle II</li> <li>1191. K-Concatenation Maximum Sum</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>120. Triangle</li> <li>1200. Minimum Absolute Difference</li> <li>1207. Unique Number of Occurrences</li> <li>121. Best Time to Buy and Sell Stock</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>1219. Path with Maximum Gold</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1222. Queens That Can Attack the King</li> <li>1223. Dice Roll Simulation</li> <li>1224. Maximum Equal Frequency</li> <li>1228. Missing Number In Arithmetic Progression</li> <li>1229. Meeting Scheduler</li> <li>123. Best Time to Buy and Sell Stock III</li> <li>1231. Divide Chocolate</li> <li>1232. Check If It Is a Straight Line</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1243. Array Transformation</li> <li>1246. Palindrome Removal</li> <li>1248. Count Number of Nice Subarrays</li> <li>1250. Check If It Is a Good Array</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1254. Number of Closed Islands</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>1260. Shift 2D Grid</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1266. Minimum Time Visiting All Points</li> <li>1267. Count Servers that Communicate</li> <li>1268. Search Suggestions System</li> <li>1272. Remove Interval</li> <li>1274. Number of Ships in a Rectangle</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1277. Count Square Submatrices with All Ones</li> <li>128. Longest Consecutive Sequence</li> <li>1282. Group the People Given the Group Size They Belong To</li> <li>1283. Find the Smallest Divisor Given a Threshold</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1287. Element Appearing More Than 25% In Sorted Array</li> <li>1288. Remove Covered Intervals</li> <li>1289. Minimum Falling Path Sum II</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>1295. Find Numbers with Even Number of Digits</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>1299. Replace Elements with Greatest Element on Right Side</li> <li>130. Surrounded Regions</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1301. Number of Paths with Max Score</li> <li>1304. Find N Unique Integers Sum up to Zero</li> <li>1306. Jump Game III</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1310. XOR Queries of a Subarray</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1313. Decompress Run-Length Encoded List</li> <li>1314. Matrix Block Sum</li> <li>1324. Print Words Vertically</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1329. Sort the Matrix Diagonally</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1331. Rank Transform of an Array</li> <li>1333. Filter Restaurants by Vegan-Friendly, Price and Distance</li> <li>1335. Minimum Difficulty of a Job Schedule</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>134. Gas Station</li> <li>1340. Jump Game V</li> <li>1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</li> <li>1345. Jump Game IV</li> <li>1346. Check If N and Its Double Exist</li> <li>1349. Maximum Students Taking Exam</li> <li>135. Candy</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1352. Product of the Last K Numbers</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1354. Construct Target Array With Multiple Sums</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1357. Apply Discount Every n Orders</li> <li>136. Single Number</li> <li>1363. Largest Multiple of Three</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>137. Single Number II</li> <li>1375. Number of Times Binary String Is Prefix-Aligned</li> <li>1380. Lucky Numbers in a Matrix</li> <li>1381. Design a Stack With Increment Operation</li> <li>1383. Maximum Performance of a Team</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1386. Cinema Seat Allocation</li> <li>1388. Pizza With 3n Slices</li> <li>1389. Create Target Array in the Given Order</li> <li>139. Word Break</li> <li>1390. Four Divisors</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1394. Find Lucky Integer in an Array</li> <li>1395. Count Number of Teams</li> <li>140. Word Break II</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1406. Stone Game III</li> <li>1408. String Matching in an Array</li> <li>1409. Queries on a Permutation With Key</li> <li>1413. Minimum Value to Get Positive Step by Step Sum</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1424. Diagonal Traverse II</li> <li>1425. Constrained Subsequence Sum</li> <li>1426. Counting Elements</li> <li>1427. Perform String Shifts</li> <li>1428. Leftmost Column with at Least a One</li> <li>1429. First Unique Number</li> <li>1431. Kids With the Greatest Number of Candies</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1437. Check If All 1's Are at Least Length K Places Away</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1441. Build an Array With Stack Operations</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1449. Form Largest Integer With Digits That Add up to Target</li> <li>1450. Number of Students Doing Homework at a Given Time</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>1458. Max Dot Product of Two Subsequences</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1463. Cherry Pickup II</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1470. Shuffle the Array</li> <li>1471. The k Strongest Values in an Array</li> <li>1472. Design Browser History</li> <li>1473. Paint House III</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>1476. Subrectangle Queries</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1478. Allocate Mailboxes</li> <li>1480. Running Sum of 1d Array</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1487. Making File Names Unique</li> <li>1488. Avoid Flood in The City</li> <li>149. Max Points on a Line</li> <li>1491. Average Salary Excluding the Minimum and Maximum Salary</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>1499. Max Value of Equation</li> <li>15. 3Sum</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1502. Can Make Arithmetic Progression From Sequence</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1504. Count Submatrices With All Ones</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>1512. Number of Good Pairs</li> <li>1514. Path with Maximum Probability</li> <li>152. Maximum Product Subarray</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1528. Shuffle String</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>1533. Find the Index of the Large Integer</li> <li>1534. Count Good Triplets</li> <li>1535. Find the Winner of an Array Game</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1537. Get the Maximum Score</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>1539. Kth Missing Positive Number</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1547. Minimum Cost to Cut a Stick</li> <li>1550. Three Consecutive Odds</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1560. Most Visited Sector in  a Circular Track</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1562. Find Latest Group of Size M</li> <li>1563. Stone Game V</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1566. Detect Pattern of Length M Repeated K or More Times</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1572. Matrix Diagonal Sum</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1575. Count All Possible Routes</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1582. Special Positions in a Binary Matrix</li> <li>1583. Count Unhappy Friends</li> <li>1584. Min Cost to Connect All Points</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>1590. Make Sum Divisible by P</li> <li>1591. Strange Printer II</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1598. Crawler Log Folder</li> <li>1599. Maximum Profit of Operating a Centennial Wheel</li> <li>16. 3Sum Closest</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1610. Maximum Number of Visible Points</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1619. Mean of Array After Removing Some Elements</li> <li>162. Find Peak Element</li> <li>1620. Coordinate With Maximum Network Quality</li> <li>1626. Best Team With No Conflicts</li> <li>1627. Graph Connectivity With Threshold</li> <li>1629. Slowest Key</li> <li>163. Missing Ranges</li> <li>1630. Arithmetic Subarrays</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1637. Widest Vertical Area Between Two Points Containing No Points</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>164. Maximum Gap</li> <li>1640. Check Array Formation Through Concatenation</li> <li>1642. Furthest Building You Can Reach</li> <li>1643. Kth Smallest Instructions</li> <li>1646. Get Maximum in Generated Array</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1649. Create Sorted Array through Instructions</li> <li>1652. Defuse the Bomb</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1655. Distribute Repeating Integers</li> <li>1656. Design an Ordered Stream</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1662. Check If Two String Arrays are Equivalent</li> <li>1664. Ways to Make a Fair Array</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1670. Design Front Middle Back Queue</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1672. Richest Customer Wealth</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1675. Minimize Deviation in Array</li> <li>1679. Max Number of K-Sum Pairs</li> <li>1681. Minimum Incompatibility</li> <li>1684. Count the Number of Consistent Strings</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1686. Stone Game VI</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>169. Majority Element</li> <li>1690. Stone Game VII</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1695. Maximum Erasure Value</li> <li>1696. Jump Game VI</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>170. Two Sum III - Data structure design</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1701. Average Waiting Time</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1706. Where Will the Ball Fall</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1708. Largest Subarray Length K</li> <li>1710. Maximum Units on a Truck</li> <li>1711. Count Good Meals</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1714. Sum Of Special Evenly-Spaced Elements In Array</li> <li>1718. Construct the Lexicographically Largest Valid Sequence</li> <li>1720. Decode XORed Array</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1725. Number Of Rectangles That Can Form The Largest Square</li> <li>1726. Tuple with Same Product</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1728. Cat and Mouse II</li> <li>1730. Shortest Path to Get Food</li> <li>1732. Find the Highest Altitude</li> <li>1733. Minimum Number of People to Teach</li> <li>1734. Decode XORed Permutation</li> <li>1735. Count Ways to Make Array With Product</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>174. Dungeon Game</li> <li>1743. Restore the Array From Adjacent Pairs</li> <li>1744. Can You Eat Your Favorite Candy on Your Favorite Day?</li> <li>1746. Maximum Subarray Sum After One Operation</li> <li>1748. Sum of Unique Elements</li> <li>1749. Maximum Absolute Sum of Any Subarray</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1752. Check if Array Is Sorted and Rotated</li> <li>1755. Closest Subsequence Sum</li> <li>1756. Design Most Recently Used Queue</li> <li>1760. Minimum Limit of Balls in a Bag</li> <li>1762. Buildings With an Ocean View</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>1765. Map of Highest Peak</li> <li>1769. Minimum Number of Operations to Move All Balls to Each Box</li> <li>1770. Maximum Score from Performing Multiplication Operations</li> <li>1772. Sort Features by Popularity</li> <li>1773. Count Items Matching a Rule</li> <li>1774. Closest Dessert Cost</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1776. Car Fleet II</li> <li>1779. Find Nearest Point That Has the Same X or Y Coordinate</li> <li>1785. Minimum Elements to Add to Form a Given Sum</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1788. Maximize the Beauty of the Garden</li> <li>179. Largest Number</li> <li>1792. Maximum Average Pass Ratio</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1798. Maximum Number of Consecutive Values You Can Make</li> <li>1799. Maximize Score After N Operations</li> <li>18. 4Sum</li> <li>1800. Maximum Ascending Subarray Sum</li> <li>1801. Number of Orders in the Backlog</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1813. Sentence Similarity III</li> <li>1814. Count Nice Pairs in an Array</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1816. Truncate Sentence</li> <li>1817. Finding the Users Active Minutes</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1822. Sign of the Product of an Array</li> <li>1823. Find the Winner of the Circular Game</li> <li>1824. Minimum Sideway Jumps</li> <li>1826. Faulty Sensor</li> <li>1827. Minimum Operations to Make the Array Increasing</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1829. Maximum XOR for Each Query</li> <li>1833. Maximum Ice Cream Bars</li> <li>1834. Single-Threaded CPU</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1840. Maximum Building Height</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1847. Closest Room</li> <li>1848. Minimum Distance to the Target Element</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>1854. Maximum Population Year</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1856. Maximum Subarray Min-Product</li> <li>1861. Rotating the Box</li> <li>1862. Sum of Floored Pairs</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>1868. Product of Two Run-Length Encoded Arrays</li> <li>1870. Minimum Speed to Arrive on Time</li> <li>1872. Stone Game VIII</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>188. Best Time to Buy and Sell Stock IV</li> <li>1882. Process Tasks Using Servers</li> <li>1883. Minimum Skips to Arrive at Meeting On Time</li> <li>1885. Count Pairs in Two Arrays</li> <li>1886. Determine Whether Matrix Can Be Obtained By Rotation</li> <li>1887. Reduction Operations to Make the Array Elements Equal</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>189. Rotate Array</li> <li>1891. Cutting Ribbons</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1895. Largest Magic Square</li> <li>1898. Maximum Number of Removable Characters</li> <li>1899. Merge Triplets to Form Target Triplet</li> <li>1901. Find a Peak Element II</li> <li>1905. Count Sub Islands</li> <li>1906. Minimum Absolute Difference Queries</li> <li>1908. Game of Nim</li> <li>1909. Remove One Element to Make the Array Strictly Increasing</li> <li>1911. Maximum Alternating Subsequence Sum</li> <li>1912. Design Movie Rental System</li> <li>1913. Maximum Product Difference Between Two Pairs</li> <li>1914. Cyclically Rotating a Grid</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1920. Build Array from Permutation</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1923. Longest Common Subpath</li> <li>1924. Erect the Fence II</li> <li>1926. Nearest Exit from Entrance in Maze</li> <li>1929. Concatenation of Array</li> <li>1936. Add Minimum Number of Rungs</li> <li>1937. Maximum Number of Points with Cost</li> <li>1938. Maximum Genetic Difference Query</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>1943. Describe the Painting</li> <li>1944. Number of Visible People in a Queue</li> <li>1946. Largest Number After Mutating Substring</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1948. Delete Duplicate Folders in System</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1953. Maximum Number of Weeks for Which You Can Work</li> <li>1955. Count Number of Special Subsequences</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1958. Check if Move is Legal</li> <li>1959. Minimum Total Space Wasted With K Resizing Operations</li> <li>1961. Check If String Is a Prefix of Array</li> <li>1962. Remove Stones to Minimize the Total</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>1966. Binary Searchable Numbers in an Unsorted Array</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1975. Maximum Matrix Sum</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>198. House Robber</li> <li>1980. Find Unique Binary String</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1982. Find Array Given Subset Sums</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1989. Maximum Number of People That Can Be Caught in Tag</li> <li>1991. Find the Middle Index in Array</li> <li>1992. Find All Groups of Farmland</li> <li>1994. The Number of Good Subsets</li> <li>1995. Count Special Quadruplets</li> <li>1996. The Number of Weak Characters in the Game</li> <li>1997. First Day Where You Have Been in All the Rooms</li> <li>1998. GCD Sort of an Array</li> <li>200. Number of Islands</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2007. Find Original Array From Doubled Array</li> <li>2008. Maximum Earnings From Taxi</li> <li>2009. Minimum Number of Operations to Make Array Continuous</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2012. Sum of Beauty in the Array</li> <li>2013. Detect Squares</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2016. Maximum Difference Between Increasing Elements</li> <li>2017. Grid Game</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2021. Brightest Position on Street</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2023. Number of Pairs of Strings With Concatenation Equal to Target</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2028. Find Missing Observations</li> <li>2029. Stone Game IX</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2032. Two Out of Three</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2036. Maximum Alternating Subarray Sum</li> <li>2037. Minimum Number of Moves to Seat Everyone</li> <li>2039. The Time When the Network Becomes Idle</li> <li>204. Count Primes</li> <li>2040. Kth Smallest Product of Two Sorted Arrays</li> <li>2043. Simple Bank System</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2049. Count Nodes With the Highest Score</li> <li>2052. Minimum Cost to Separate Sentence Into Rows</li> <li>2053. Kth Distinct String in an Array</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2055. Plates Between Candles</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2057. Smallest Index With Equal Value</li> <li>2059. Minimum Operations to Convert Number</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2064. Minimized Maximum of Products Distributed to Any Store</li> <li>2065. Maximum Path Quality of a Graph</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2073. Time Needed to Buy Tickets</li> <li>2078. Two Furthest Houses With Different Colors</li> <li>2079. Watering Plants</li> <li>2080. Range Frequency Queries</li> <li>2085. Count Common Words With One Occurrence</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>2089. Find Target Indices After Sorting Array</li> <li>209. Minimum Size Subarray Sum</li> <li>2090. K Radius Subarray Averages</li> <li>2091. Removing Minimum and Maximum From Array</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2101. Detonate the Maximum Bombs</li> <li>2104. Sum of Subarray Ranges</li> <li>2105. Watering Plants II</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2108. Find First Palindromic String in the Array</li> <li>2109. Adding Spaces to a String</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>2111. Minimum Operations to Make the Array K-Increasing</li> <li>2113. Elements in Array After Removing and Replacing Elements</li> <li>2114. Maximum Number of Words Found in Sentences</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>212. Word Search II</li> <li>2121. Intervals Between Identical Elements</li> <li>2122. Recover the Original Array</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2126. Destroying Asteroids</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>213. House Robber II</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2132. Stamping the Grid</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2134. Minimum Swaps to Group All 1's Together II</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2137. Pour Water Between Buckets to Make Water Levels Equal</li> <li>2140. Solving Questions With Brainpower</li> <li>2141. Maximum Running Time of N Computers</li> <li>2143. Choose Numbers From Two Arrays in Range</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2145. Count the Hidden Sequences</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2148. Count Elements With Strictly Smaller and Greater Elements</li> <li>2149. Rearrange Array Elements by Sign</li> <li>215. Kth Largest Element in an Array</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2155. All Divisions With the Highest Score of a Binary Array</li> <li>2158. Amount of New Area Painted Each Day</li> <li>216. Combination Sum III</li> <li>2161. Partition Array According to Given Pivot</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>2164. Sort Even and Odd Indices Independently</li> <li>2166. Design Bitset</li> <li>217. Contains Duplicate</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2172. Maximum AND Sum of Array</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2176. Count Equal and Divisible Pairs in an Array</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2185. Counting Words With a Given Prefix</li> <li>2187. Minimum Time to Complete Trips</li> <li>2188. Minimum Time to Finish the Race</li> <li>219. Contains Duplicate II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2191. Sort the Jumbled Numbers</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>220. Contains Duplicate III</li> <li>2200. Find All K-Distant Indices in an Array</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2202. Maximize the Topmost Element After K Moves</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>221. Maximal Square</li> <li>2210. Count Hills and Valleys in an Array</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2214. Minimum Health to Beat Game</li> <li>2215. Find the Difference of Two Arrays</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>2217. Find Palindrome With Fixed Length</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2219. Maximum Sum Score of Array</li> <li>2221. Find Triangular Sum of an Array</li> <li>2225. Find Players With Zero or One Losses</li> <li>2226. Maximum Candies Allocated to K Children</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2229. Check if an Array Is Consecutive</li> <li>2233. Maximum Product After K Increments</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2237. Count Positions on Street With Required Brightness</li> <li>2239. Find Closest Number to Zero</li> <li>2241. Design an ATM Machine</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2248. Intersection of Multiple Arrays</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2255. Count Prefixes of a Given String</li> <li>2256. Minimum Average Difference</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2258. Escape the Spreading Fire</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2261. K Divisible Elements Subarrays</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2268. Minimum Number of Keypresses</li> <li>2270. Number of Ways to Split Array</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2272. Substring With Largest Variance</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2274. Maximum Consecutive Floors Without Special Floors</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2277. Closest Node to Path in Tree</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>228. Summary Ranges</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2284. Sender With Largest Word Count</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>229. Majority Element II</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2291. Maximum Profit From Trading Stocks</li> <li>2293. Min Max Game</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2295. Replace Elements in an Array</li> <li>2297. Jump Game VIII</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2301. Match Substring After Replacement</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2303. Calculate Amount Paid in Taxes</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2305. Fair Distribution of Cookies</li> <li>2306. Naming a Company</li> <li>2307. Check for Contradictions in Equations</li> <li>2312. Selling Pieces of Wood</li> <li>2317. Maximum XOR After Operations</li> <li>2319. Check if Matrix Is X-Matrix</li> <li>2321. Maximum Score Of Spliced Array</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2326. Spiral Matrix IV</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2340. Minimum Adjacent Swaps to Make a Valid Array</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2347. Best Poker Hand</li> <li>2348. Number of Zero-Filled Subarrays</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2352. Equal Row and Column Pairs</li> <li>2354. Number of Excellent Pairs</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2361. Minimum Costs Using the Train Line</li> <li>2363. Merge Similar Items</li> <li>2364. Count Number of Bad Pairs</li> <li>2365. Task Scheduler II</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2367. Number of Arithmetic Triplets</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2369. Check if There is a Valid Partition For The Array</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2373. Largest Local Values in a Matrix</li> <li>238. Product of Array Except Self</li> <li>2381. Shifting Letters II</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2383. Minimum Hours of Training to Win a Competition</li> <li>2386. Find the K-Sum of an Array</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>239. Sliding Window Maximum</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2392. Build a Matrix With Conditions</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2395. Find Subarrays With Equal Sum</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2399. Check Distances Between Same Letters</li> <li>240. Search a 2D Matrix II</li> <li>2401. Longest Nice Subarray</li> <li>2402. Meeting Rooms III</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2404. Most Frequent Even Element</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2408. Design SQL</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2418. Sort the People</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>2420. Find All Good Indices</li> <li>2421. Number of Good Paths</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2428. Maximum Sum of an Hourglass</li> <li>243. Shortest Word Distance</li> <li>2431. Maximize Total Tastiness of Purchased Fruits</li> <li>2432. The Employee That Worked on the Longest Task</li> <li>2433. Find The Original Array of Prefix Xor</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2438. Range Product Queries of Powers</li> <li>2439. Minimize Maximum of Array</li> <li>244. Shortest Word Distance II</li> <li>2440. Create Components With Same Value</li> <li>2441. Largest Positive Integer That Exists With Its Negative</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2446. Determine if Two Events Have Conflict</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>245. Shortest Word Distance III</li> <li>2452. Words Within Two Edits of Dictionary</li> <li>2453. Destroy Sequential Targets</li> <li>2454. Next Greater Element IV</li> <li>2455. Average Value of Even Numbers That Are Divisible by Three</li> <li>2456. Most Popular Video Creator</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>2460. Apply Operations to an Array</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2462. Total Cost to Hire K Workers</li> <li>2463. Minimum Total Distance Traveled</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2465. Number of Distinct Averages</li> <li>2467. Most Profitable Path in a Tree</li> <li>247. Strobogrammatic Number II</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2475. Number of Unequal Triplets in Array</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>248. Strobogrammatic Number III</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2488. Count Subarrays With Median K</li> <li>249. Group Shifted Strings</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2496. Maximum Value of a String in an Array</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2498. Frog Jump II</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2501. Longest Square Streak in an Array</li> <li>2502. Design Memory Allocator</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2506. Count Pairs Of Similar Strings</li> <li>251. Flatten 2D Vector</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2511. Maximum Enemy Forts That Can Be Captured</li> <li>2512. Reward Top K Students</li> <li>2515. Shortest Distance to Target String in a Circular Array</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>2518. Number of Great Partitions</li> <li>2519. Count the Number of K-Big Indices</li> <li>252. Meeting Rooms</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2527. Find Xor-Beauty of Array</li> <li>2528. Maximize the Minimum Powered City</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2532. Time to Cross a Bridge</li> <li>2534. Time Taken to Cross the Door</li> <li>2535. Difference Between Element Sum and Digit Sum of an Array</li> <li>2536. Increment Submatrices by One</li> <li>2537. Count the Number of Good Subarrays</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>254. Factor Combinations</li> <li>2540. Minimum Common Value</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2542. Maximum Subsequence Score</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2547. Minimum Cost to Split an Array</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2549. Count Distinct Numbers on Board</li> <li>2551. Put Marbles in Bags</li> <li>2552. Count Increasing Quadruplets</li> <li>2553. Separate the Digits in an Array</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2555. Maximize Win From Two Segments</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2559. Count Vowel Strings in Ranges</li> <li>256. Paint House</li> <li>2560. House Robber IV</li> <li>2561. Rearranging Fruits</li> <li>2562. Find the Array Concatenation Value</li> <li>2563. Count the Number of Fair Pairs</li> <li>2564. Substring XOR Queries</li> <li>2574. Left and Right Sum Differences</li> <li>2575. Find the Divisibility Array of a String</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>2580. Count Ways to Group Overlapping Ranges</li> <li>2584. Split the Array to Make Coprime Products</li> <li>2585. Number of Ways to Earn Points</li> <li>259. 3Sum Smaller</li> <li>26. Remove Duplicates from Sorted Array</li> <li>260. Single Number III</li> <li>265. Paint House II</li> <li>268. Missing Number</li> <li>269. Alien Dictionary</li> <li>27. Remove Element</li> <li>271. Encode and Decode Strings</li> <li>274. H-Index</li> <li>275. H-Index II</li> <li>280. Wiggle Sort</li> <li>281. Zigzag Iterator</li> <li>283. Move Zeroes</li> <li>284. Peeking Iterator</li> <li>286. Walls and Gates</li> <li>287. Find the Duplicate Number</li> <li>288. Unique Word Abbreviation</li> <li>289. Game of Life</li> <li>296. Best Meeting Point</li> <li>300. Longest Increasing Subsequence</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>305. Number of Islands II</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>309. Best Time to Buy and Sell Stock with Cooldown</li> <li>31. Next Permutation</li> <li>311. Sparse Matrix Multiplication</li> <li>312. Burst Balloons</li> <li>313. Super Ugly Number</li> <li>315. Count of Smaller Numbers After Self</li> <li>317. Shortest Distance from All Buildings</li> <li>318. Maximum Product of Word Lengths</li> <li>322. Coin Change</li> <li>324. Wiggle Sort II</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>327. Count of Range Sum</li> <li>329. Longest Increasing Path in a Matrix</li> <li>33. Search in Rotated Sorted Array</li> <li>330. Patching Array</li> <li>334. Increasing Triplet Subsequence</li> <li>335. Self Crossing</li> <li>336. Palindrome Pairs</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>346. Moving Average from Data Stream</li> <li>347. Top K Frequent Elements</li> <li>348. Design Tic-Tac-Toe</li> <li>349. Intersection of Two Arrays</li> <li>35. Search Insert Position</li> <li>350. Intersection of Two Arrays II</li> <li>353. Design Snake Game</li> <li>354. Russian Doll Envelopes</li> <li>356. Line Reflection</li> <li>36. Valid Sudoku</li> <li>360. Sort Transformed Array</li> <li>361. Bomb Enemy</li> <li>362. Design Hit Counter</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>368. Largest Divisible Subset</li> <li>37. Sudoku Solver</li> <li>370. Range Addition</li> <li>373. Find K Pairs with Smallest Sums</li> <li>376. Wiggle Subsequence</li> <li>377. Combination Sum IV</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>379. Design Phone Directory</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>384. Shuffle an Array</li> <li>39. Combination Sum</li> <li>391. Perfect Rectangle</li> <li>393. UTF-8 Validation</li> <li>396. Rotate Function</li> <li>399. Evaluate Division</li> <li>4. Median of Two Sorted Arrays</li> <li>40. Combination Sum II</li> <li>403. Frog Jump</li> <li>406. Queue Reconstruction by Height</li> <li>407. Trapping Rain Water II</li> <li>41. First Missing Positive</li> <li>410. Split Array Largest Sum</li> <li>413. Arithmetic Slices</li> <li>414. Third Maximum Number</li> <li>416. Partition Equal Subset Sum</li> <li>417. Pacific Atlantic Water Flow</li> <li>419. Battleships in a Board</li> <li>42. Trapping Rain Water</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>422. Valid Word Square</li> <li>425. Word Squares</li> <li>427. Construct Quad Tree</li> <li>435. Non-overlapping Intervals</li> <li>436. Find Right Interval</li> <li>442. Find All Duplicates in an Array</li> <li>444. Sequence Reconstruction</li> <li>446. Arithmetic Slices II - Subsequence</li> <li>447. Number of Boomerangs</li> <li>448. Find All Numbers Disappeared in an Array</li> <li>45. Jump Game II</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>453. Minimum Moves to Equal Array Elements</li> <li>454. 4Sum II</li> <li>455. Assign Cookies</li> <li>456. 132 Pattern</li> <li>457. Circular Array Loop</li> <li>46. Permutations</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>463. Island Perimeter</li> <li>465. Optimal Account Balancing</li> <li>47. Permutations II</li> <li>472. Concatenated Words</li> <li>473. Matchsticks to Square</li> <li>474. Ones and Zeroes</li> <li>475. Heaters</li> <li>477. Total Hamming Distance</li> <li>48. Rotate Image</li> <li>480. Sliding Window Median</li> <li>484. Find Permutation</li> <li>485. Max Consecutive Ones</li> <li>486. Predict the Winner</li> <li>487. Max Consecutive Ones II</li> <li>49. Group Anagrams</li> <li>491. Non-decreasing Subsequences</li> <li>493. Reverse Pairs</li> <li>494. Target Sum</li> <li>495. Teemo Attacking</li> <li>496. Next Greater Element I</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>498. Diagonal Traverse</li> <li>500. Keyboard Row</li> <li>502. IPO</li> <li>503. Next Greater Element II</li> <li>506. Relative Ranks</li> <li>51. N-Queens</li> <li>517. Super Washing Machines</li> <li>518. Coin Change II</li> <li>522. Longest Uncommon Subsequence II</li> <li>523. Continuous Subarray Sum</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>525. Contiguous Array</li> <li>526. Beautiful Arrangement</li> <li>527. Word Abbreviation</li> <li>528. Random Pick with Weight</li> <li>529. Minesweeper</li> <li>53. Maximum Subarray</li> <li>531. Lonely Pixel I</li> <li>532. K-diff Pairs in an Array</li> <li>533. Lonely Pixel II</li> <li>539. Minimum Time Difference</li> <li>54. Spiral Matrix</li> <li>540. Single Element in a Sorted Array</li> <li>542. 01 Matrix</li> <li>546. Remove Boxes</li> <li>548. Split Array with Equal Sum</li> <li>55. Jump Game</li> <li>553. Optimal Division</li> <li>554. Brick Wall</li> <li>555. Split Concatenated Strings</li> <li>56. Merge Intervals</li> <li>560. Subarray Sum Equals K</li> <li>561. Array Partition</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>565. Array Nesting</li> <li>566. Reshape the Matrix</li> <li>568. Maximum Vacation Days</li> <li>57. Insert Interval</li> <li>573. Squirrel Simulation</li> <li>575. Distribute Candies</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>582. Kill Process</li> <li>587. Erect the Fence</li> <li>59. Spiral Matrix II</li> <li>594. Longest Harmonious Subsequence</li> <li>598. Range Addition II</li> <li>599. Minimum Index Sum of Two Lists</li> <li>604. Design Compressed String Iterator</li> <li>605. Can Place Flowers</li> <li>609. Find Duplicate File in System</li> <li>611. Valid Triangle Number</li> <li>616. Add Bold Tag in String</li> <li>621. Task Scheduler</li> <li>622. Design Circular Queue</li> <li>624. Maximum Distance in Arrays</li> <li>628. Maximum Product of Three Numbers</li> <li>63. Unique Paths II</li> <li>630. Course Schedule III</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>636. Exclusive Time of Functions</li> <li>638. Shopping Offers</li> <li>64. Minimum Path Sum</li> <li>641. Design Circular Deque</li> <li>643. Maximum Average Subarray I</li> <li>644. Maximum Average Subarray II</li> <li>645. Set Mismatch</li> <li>646. Maximum Length of Pair Chain</li> <li>648. Replace Words</li> <li>654. Maximum Binary Tree</li> <li>656. Coin Path</li> <li>658. Find K Closest Elements</li> <li>659. Split Array into Consecutive Subsequences</li> <li>66. Plus One</li> <li>661. Image Smoother</li> <li>665. Non-decreasing Array</li> <li>666. Path Sum IV</li> <li>667. Beautiful Arrangement II</li> <li>673. Number of Longest Increasing Subsequence</li> <li>674. Longest Continuous Increasing Subsequence</li> <li>675. Cut Off Trees for Golf Event</li> <li>679. 24 Game</li> <li>68. Text Justification</li> <li>682. Baseball Game</li> <li>683. K Empty Slots</li> <li>689. Maximum Sum of 3 Non-Overlapping Subarrays</li> <li>691. Stickers to Spell Word</li> <li>695. Max Area of Island</li> <li>697. Degree of an Array</li> <li>698. Partition to K Equal Sum Subsets</li> <li>699. Falling Squares</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>704. Binary Search</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>710. Random Pick with Blacklist</li> <li>713. Subarray Product Less Than K</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>717. 1-bit and 2-bit Characters</li> <li>718. Maximum Length of Repeated Subarray</li> <li>719. Find K-th Smallest Pair Distance</li> <li>720. Longest Word in Dictionary</li> <li>721. Accounts Merge</li> <li>722. Remove Comments</li> <li>723. Candy Crush</li> <li>724. Find Pivot Index</li> <li>73. Set Matrix Zeroes</li> <li>733. Flood Fill</li> <li>734. Sentence Similarity</li> <li>735. Asteroid Collision</li> <li>737. Sentence Similarity II</li> <li>739. Daily Temperatures</li> <li>74. Search a 2D Matrix</li> <li>740. Delete and Earn</li> <li>741. Cherry Pickup</li> <li>744. Find Smallest Letter Greater Than Target</li> <li>746. Min Cost Climbing Stairs</li> <li>747. Largest Number At Least Twice of Others</li> <li>748. Shortest Completing Word</li> <li>749. Contain Virus</li> <li>75. Sort Colors</li> <li>750. Number Of Corner Rectangles</li> <li>752. Open the Lock</li> <li>755. Pour Water</li> <li>757. Set Intersection Size At Least Two</li> <li>758. Bold Words in String</li> <li>759. Employee Free Time</li> <li>760. Find Anagram Mappings</li> <li>764. Largest Plus Sign</li> <li>766. Toeplitz Matrix</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>773. Sliding Puzzle</li> <li>774. Minimize Max Distance to Gas Station</li> <li>775. Global and Local Inversions</li> <li>778. Swim in Rising Water</li> <li>78. Subsets</li> <li>781. Rabbits in Forest</li> <li>782. Transform to Chessboard</li> <li>786. K-th Smallest Prime Fraction</li> <li>789. Escape The Ghosts</li> <li>79. Word Search</li> <li>794. Valid Tic-Tac-Toe State</li> <li>795. Number of Subarrays with Bounded Maximum</li> <li>798. Smallest Rotation with Highest Score</li> <li>80. Remove Duplicates from Sorted Array II</li> <li>801. Minimum Swaps To Make Sequences Increasing</li> <li>803. Bricks Falling When Hit</li> <li>804. Unique Morse Code Words</li> <li>805. Split Array With Same Average</li> <li>806. Number of Lines To Write String</li> <li>807. Max Increase to Keep City Skyline</li> <li>809. Expressive Words</li> <li>81. Search in Rotated Sorted Array II</li> <li>810. Chalkboard XOR Game</li> <li>811. Subdomain Visit Count</li> <li>812. Largest Triangle Area</li> <li>813. Largest Sum of Averages</li> <li>815. Bus Routes</li> <li>817. Linked List Components</li> <li>820. Short Encoding of Words</li> <li>821. Shortest Distance to a Character</li> <li>822. Card Flipping Game</li> <li>823. Binary Trees With Factors</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>827. Making A Large Island</li> <li>832. Flipping an Image</li> <li>833. Find And Replace in String</li> <li>835. Image Overlap</li> <li>839. Similar String Groups</li> <li>84. Largest Rectangle in Histogram</li> <li>840. Magic Squares In Grid</li> <li>843. Guess the Word</li> <li>845. Longest Mountain in Array</li> <li>846. Hand of Straights</li> <li>848. Shifting Letters</li> <li>849. Maximize Distance to Closest Person</li> <li>85. Maximal Rectangle</li> <li>850. Rectangle Area II</li> <li>851. Loud and Rich</li> <li>852. Peak Index in a Mountain Array</li> <li>853. Car Fleet</li> <li>857. Minimum Cost to Hire K Workers</li> <li>860. Lemonade Change</li> <li>861. Score After Flipping Matrix</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>864. Shortest Path to Get All Keys</li> <li>867. Transpose Matrix</li> <li>870. Advantage Shuffle</li> <li>871. Minimum Number of Refueling Stops</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>874. Walking Robot Simulation</li> <li>875. Koko Eating Bananas</li> <li>877. Stone Game</li> <li>879. Profitable Schemes</li> <li>88. Merge Sorted Array</li> <li>881. Boats to Save People</li> <li>883. Projection Area of 3D Shapes</li> <li>885. Spiral Matrix III</li> <li>888. Fair Candy Swap</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>890. Find and Replace Pattern</li> <li>891. Sum of Subsequence Widths</li> <li>892. Surface Area of 3D Shapes</li> <li>893. Groups of Special-Equivalent Strings</li> <li>896. Monotonic Array</li> <li>898. Bitwise ORs of Subarrays</li> <li>90. Subsets II</li> <li>900. RLE Iterator</li> <li>902. Numbers At Most N Given Digit Set</li> <li>904. Fruit Into Baskets</li> <li>905. Sort Array By Parity</li> <li>907. Sum of Subarray Minimums</li> <li>908. Smallest Range I</li> <li>909. Snakes and Ladders</li> <li>910. Smallest Range II</li> <li>911. Online Election</li> <li>912. Sort an Array</li> <li>914. X of a Kind in a Deck of Cards</li> <li>915. Partition Array into Disjoint Intervals</li> <li>916. Word Subsets</li> <li>918. Maximum Sum Circular Subarray</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>924. Minimize Malware Spread</li> <li>927. Three Equal Parts</li> <li>928. Minimize Malware Spread II</li> <li>929. Unique Email Addresses</li> <li>930. Binary Subarrays With Sum</li> <li>931. Minimum Falling Path Sum</li> <li>932. Beautiful Array</li> <li>934. Shortest Bridge</li> <li>937. Reorder Data in Log Files</li> <li>939. Minimum Area Rectangle</li> <li>941. Valid Mountain Array</li> <li>942. DI String Match</li> <li>943. Find the Shortest Superstring</li> <li>944. Delete Columns to Make Sorted</li> <li>945. Minimum Increment to Make Array Unique</li> <li>946. Validate Stack Sequences</li> <li>948. Bag of Tokens</li> <li>950. Reveal Cards In Increasing Order</li> <li>952. Largest Component Size by Common Factor</li> <li>953. Verifying an Alien Dictionary</li> <li>954. Array of Doubled Pairs</li> <li>955. Delete Columns to Make Sorted II</li> <li>956. Tallest Billboard</li> <li>957. Prison Cells After N Days</li> <li>960. Delete Columns to Make Sorted III</li> <li>961. N-Repeated Element in Size 2N Array</li> <li>962. Maximum Width Ramp</li> <li>963. Minimum Area Rectangle II</li> <li>966. Vowel Spellchecker</li> <li>969. Pancake Sorting</li> <li>973. K Closest Points to Origin</li> <li>974. Subarray Sums Divisible by K</li> <li>975. Odd Even Jump</li> <li>976. Largest Perimeter Triangle</li> <li>977. Squares of a Sorted Array</li> <li>978. Longest Turbulent Subarray</li> <li>980. Unique Paths III</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>983. Minimum Cost For Tickets</li> <li>985. Sum of Even Numbers After Queries</li> <li>986. Interval List Intersections</li> <li>989. Add to Array-Form of Integer</li> <li>990. Satisfiability of Equality Equations</li> <li>992. Subarrays with K Different Integers</li> <li>994. Rotting Oranges</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> <li>996. Number of Squareful Arrays</li> <li>997. Find the Town Judge</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"tags/#backtracking","title":"Backtracking","text":"<ul> <li>1066. Campus Bikes II</li> <li>1079. Letter Tile Possibilities</li> <li>1087. Brace Expansion</li> <li>1088. Confusing Number II</li> <li>1096. Brace Expansion II</li> <li>113. Path Sum II</li> <li>1215. Stepping Numbers</li> <li>1219. Path with Maximum Gold</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1240. Tiling a Rectangle with the Fewest Squares</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1258. Synonymous Sentences</li> <li>126. Word Ladder II</li> <li>1286. Iterator for Combination</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>131. Palindrome Partitioning</li> <li>140. Word Break II</li> <li>1415. The k-th Lexicographical String of All Happy Strings of Length n</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1655. Distribute Repeating Integers</li> <li>17. Letter Combinations of a Phone Number</li> <li>1718. Construct the Lexicographically Largest Valid Sequence</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1774. Closest Dessert Cost</li> <li>1799. Maximize Score After N Operations</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1849. Splitting a String Into Descending Consecutive Values</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1980. Find Unique Binary String</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2065. Maximum Path Quality of a Graph</li> <li>212. Word Search II</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>216. Combination Sum III</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>22. Generate Parentheses</li> <li>2305. Fair Distribution of Cookies</li> <li>2375. Construct Smallest Number From DI String</li> <li>2397. Maximum Rows Covered by Columns</li> <li>254. Factor Combinations</li> <li>257. Binary Tree Paths</li> <li>267. Palindrome Permutation II</li> <li>282. Expression Add Operators</li> <li>291. Word Pattern II</li> <li>294. Flip Game II</li> <li>301. Remove Invalid Parentheses</li> <li>306. Additive Number</li> <li>320. Generalized Abbreviation</li> <li>351. Android Unlock Patterns</li> <li>357. Count Numbers with Unique Digits</li> <li>37. Sudoku Solver</li> <li>39. Combination Sum</li> <li>40. Combination Sum II</li> <li>401. Binary Watch</li> <li>411. Minimum Unique Word Abbreviation</li> <li>425. Word Squares</li> <li>46. Permutations</li> <li>465. Optimal Account Balancing</li> <li>47. Permutations II</li> <li>473. Matchsticks to Square</li> <li>489. Robot Room Cleaner</li> <li>491. Non-decreasing Subsequences</li> <li>494. Target Sum</li> <li>51. N-Queens</li> <li>52. N-Queens II</li> <li>526. Beautiful Arrangement</li> <li>638. Shopping Offers</li> <li>679. 24 Game</li> <li>691. Stickers to Spell Word</li> <li>698. Partition to K Equal Sum Subsets</li> <li>77. Combinations</li> <li>78. Subsets</li> <li>784. Letter Case Permutation</li> <li>79. Word Search</li> <li>797. All Paths From Source to Target</li> <li>816. Ambiguous Coordinates</li> <li>842. Split Array into Fibonacci Sequence</li> <li>89. Gray Code</li> <li>90. Subsets II</li> <li>93. Restore IP Addresses</li> <li>95. Unique Binary Search Trees II</li> <li>967. Numbers With Same Consecutive Differences</li> <li>980. Unique Paths III</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#biconnected-component","title":"Biconnected Component","text":"<ul> <li>1192. Critical Connections in a Network</li> </ul>"},{"location":"tags/#binary-indexed-tree","title":"Binary Indexed Tree","text":"<ul> <li>1157. Online Majority Element In Subarray</li> <li>1395. Count Number of Teams</li> <li>1409. Queries on a Permutation With Key</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1649. Create Sorted Array through Instructions</li> <li>1756. Design Most Recently Used Queue</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>2552. Count Increasing Quadruplets</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>406. Queue Reconstruction by Height</li> <li>493. Reverse Pairs</li> <li>673. Number of Longest Increasing Subsequence</li> <li>683. K Empty Slots</li> </ul>"},{"location":"tags/#binary-search","title":"Binary Search","text":"<ul> <li>1004. Max Consecutive Ones III</li> <li>1011. Capacity To Ship Packages Within D Days</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1044. Longest Duplicate Substring</li> <li>1060. Missing Element in Sorted Array</li> <li>1062. Longest Repeating Substring</li> <li>1064. Fixed Point</li> <li>1095. Find in Mountain Array</li> <li>1099. Two Sum Less Than K</li> <li>1146. Snapshot Array</li> <li>1150. Check If a Number Is Majority Element in a Sorted Array</li> <li>1157. Online Majority Element In Subarray</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1182. Shortest Distance to Target Color</li> <li>1187. Make Array Strictly Increasing</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1201. Ugly Number III</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1214. Two Sum BSTs</li> <li>1231. Divide Chocolate</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1283. Find the Smallest Divisor Given a Threshold</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1346. Check If N and Its Double Exist</li> <li>1348. Tweet Counts Per Frequency</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1428. Leftmost Column with at Least a One</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1488. Avoid Flood in The City</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>1533. Find the Index of the Large Integer</li> <li>1539. Kth Missing Positive Number</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1562. Find Latest Group of Size M</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>162. Find Peak Element</li> <li>1631. Path With Minimum Effort</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1649. Create Sorted Array through Instructions</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1739. Building Boxes</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1760. Minimum Limit of Balls in a Bag</li> <li>1782. Count Pairs Of Nodes</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1802. Maximum Value at a Given Index in a Bounded Array</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1847. Closest Room</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1862. Sum of Floored Pairs</li> <li>1870. Minimum Speed to Arrive on Time</li> <li>1885. Count Pairs in Two Arrays</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>1891. Cutting Ribbons</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1898. Maximum Number of Removable Characters</li> <li>1901. Find a Peak Element II</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1923. Longest Common Subpath</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1954. Minimum Garden Perimeter to Collect Enough Apples</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>1966. Binary Searchable Numbers in an Unsorted Array</li> <li>1970. Last Day Where You Can Still Cross</li> <li>2008. Maximum Earnings From Taxi</li> <li>2009. Minimum Number of Operations to Make Array Continuous</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2040. Kth Smallest Product of Two Sorted Arrays</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2055. Plates Between Candles</li> <li>2064. Minimized Maximum of Products Distributed to Any Store</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2080. Range Frequency Queries</li> <li>2089. Find Target Indices After Sorting Array</li> <li>209. Minimum Size Subarray Sum</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2111. Minimum Operations to Make the Array K-Increasing</li> <li>2137. Pour Water Between Buckets to Make Water Levels Equal</li> <li>2141. Maximum Running Time of N Computers</li> <li>2179. Count Good Triplets in an Array</li> <li>2187. Minimum Time to Complete Trips</li> <li>222. Count Complete Tree Nodes</li> <li>2223. Sum of Scores of Built Strings</li> <li>2226. Maximum Candies Allocated to K Children</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2258. Escape the Spreading Fire</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2354. Number of Excellent Pairs</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>240. Search a 2D Matrix II</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2439. Minimize Maximum of Array</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2454. Next Greater Element IV</li> <li>2468. Split Message Based on Limit</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2498. Frog Jump II</li> <li>2501. Longest Square Streak in an Array</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>2519. Count the Number of K-Big Indices</li> <li>2528. Maximize the Minimum Powered City</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>2540. Minimum Common Value</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2555. Maximize Win From Two Segments</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2560. House Robber IV</li> <li>2563. Count the Number of Fair Pairs</li> <li>2565. Subsequence With the Minimum Score</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>259. 3Sum Smaller</li> <li>268. Missing Number</li> <li>270. Closest Binary Search Tree Value</li> <li>275. H-Index II</li> <li>278. First Bad Version</li> <li>287. Find the Duplicate Number</li> <li>300. Longest Increasing Subsequence</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>33. Search in Rotated Sorted Array</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>349. Intersection of Two Arrays</li> <li>35. Search Insert Position</li> <li>350. Intersection of Two Arrays II</li> <li>352. Data Stream as Disjoint Intervals</li> <li>354. Russian Doll Envelopes</li> <li>362. Design Hit Counter</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>367. Valid Perfect Square</li> <li>374. Guess Number Higher or Lower</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>4. Median of Two Sorted Arrays</li> <li>400. Nth Digit</li> <li>410. Split Array Largest Sum</li> <li>436. Find Right Interval</li> <li>441. Arranging Coins</li> <li>456. 132 Pattern</li> <li>475. Heaters</li> <li>483. Smallest Good Base</li> <li>493. Reverse Pairs</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>528. Random Pick with Weight</li> <li>532. K-diff Pairs in an Array</li> <li>540. Single Element in a Sorted Array</li> <li>611. Valid Triangle Number</li> <li>633. Sum of Square Numbers</li> <li>644. Maximum Average Subarray II</li> <li>658. Find K Closest Elements</li> <li>668. Kth Smallest Number in Multiplication Table</li> <li>69. Sqrt(x)</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>704. Binary Search</li> <li>710. Random Pick with Blacklist</li> <li>718. Maximum Length of Repeated Subarray</li> <li>719. Find K-th Smallest Pair Distance</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>74. Search a 2D Matrix</li> <li>744. Find Smallest Letter Greater Than Target</li> <li>754. Reach a Number</li> <li>774. Minimize Max Distance to Gas Station</li> <li>778. Swim in Rising Water</li> <li>786. K-th Smallest Prime Fraction</li> <li>793. Preimage Size of Factorial Zeroes Function</li> <li>81. Search in Rotated Sorted Array II</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>852. Peak Index in a Mountain Array</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>875. Koko Eating Bananas</li> <li>878. Nth Magical Number</li> <li>887. Super Egg Drop</li> <li>888. Fair Candy Swap</li> <li>902. Numbers At Most N Given Digit Set</li> <li>911. Online Election</li> <li>981. Time Based Key-Value Store</li> </ul>"},{"location":"tags/#binary-search-tree","title":"Binary Search Tree","text":"<ul> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>1214. Two Sum BSTs</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1586. Binary Search Tree Iterator II</li> <li>173. Binary Search Tree Iterator</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>230. Kth Smallest Element in a BST</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>333. Largest BST Subtree</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>449. Serialize and Deserialize BST</li> <li>450. Delete Node in a BST</li> <li>501. Find Mode in Binary Search Tree</li> <li>510. Inorder Successor in BST II</li> <li>530. Minimum Absolute Difference in BST</li> <li>538. Convert BST to Greater Tree</li> <li>653. Two Sum IV - Input is a BST</li> <li>669. Trim a Binary Search Tree</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>703. Kth Largest Element in a Stream</li> <li>776. Split BST</li> <li>783. Minimum Distance Between BST Nodes</li> <li>897. Increasing Order Search Tree</li> <li>938. Range Sum of BST</li> <li>95. Unique Binary Search Trees II</li> <li>96. Unique Binary Search Trees</li> <li>98. Validate Binary Search Tree</li> <li>99. Recover Binary Search Tree</li> </ul>"},{"location":"tags/#binary-tree","title":"Binary Tree","text":"<ul> <li>100. Same Tree</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>101. Symmetric Tree</li> <li>102. Binary Tree Level Order Traversal</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>104. Maximum Depth of Binary Tree</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>107. Binary Tree Level Order Traversal II</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>110. Balanced Binary Tree</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>113. Path Sum II</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1145. Binary Tree Coloring Game</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1214. Two Sum BSTs</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>129. Sum Root to Leaf Numbers</li> <li>1302. Deepest Leaves Sum</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1325. Delete Leaves With a Given Value</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>144. Binary Tree Preorder Traversal</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>145. Binary Tree Postorder Traversal</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1469. Find All The Lonely Nodes</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>156. Binary Tree Upside Down</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1586. Binary Search Tree Iterator II</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1609. Even Odd Tree</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1660. Correct a Binary Tree</li> <li>1666. Change the Root of a Binary Tree</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>173. Binary Search Tree Iterator</li> <li>1740. Find Distance in a Binary Tree</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>199. Binary Tree Right Side View</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2049. Count Nodes With the Highest Score</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2196. Create Binary Tree From Descriptions</li> <li>222. Count Complete Tree Nodes</li> <li>2236. Root Equals Sum of Children</li> <li>226. Invert Binary Tree</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>230. Kth Smallest Element in a BST</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>250. Count Univalue Subtrees</li> <li>2509. Cycle Length Queries in a Tree</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>257. Binary Tree Paths</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>366. Find Leaves of Binary Tree</li> <li>404. Sum of Left Leaves</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>437. Path Sum III</li> <li>449. Serialize and Deserialize BST</li> <li>450. Delete Node in a BST</li> <li>501. Find Mode in Binary Search Tree</li> <li>508. Most Frequent Subtree Sum</li> <li>510. Inorder Successor in BST II</li> <li>513. Find Bottom Left Tree Value</li> <li>515. Find Largest Value in Each Tree Row</li> <li>530. Minimum Absolute Difference in BST</li> <li>536. Construct Binary Tree from String</li> <li>538. Convert BST to Greater Tree</li> <li>543. Diameter of Binary Tree</li> <li>545. Boundary of Binary Tree</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>563. Binary Tree Tilt</li> <li>572. Subtree of Another Tree</li> <li>606. Construct String from Binary Tree</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>654. Maximum Binary Tree</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>666. Path Sum IV</li> <li>669. Trim a Binary Search Tree</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>687. Longest Univalue Path</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>703. Kth Largest Element in a Stream</li> <li>742. Closest Leaf in a Binary Tree</li> <li>776. Split BST</li> <li>783. Minimum Distance Between BST Nodes</li> <li>814. Binary Tree Pruning</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>872. Leaf-Similar Trees</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>894. All Possible Full Binary Trees</li> <li>897. Increasing Order Search Tree</li> <li>919. Complete Binary Tree Inserter</li> <li>938. Range Sum of BST</li> <li>94. Binary Tree Inorder Traversal</li> <li>95. Unique Binary Search Trees II</li> <li>951. Flip Equivalent Binary Trees</li> <li>958. Check Completeness of a Binary Tree</li> <li>96. Unique Binary Search Trees</li> <li>965. Univalued Binary Tree</li> <li>968. Binary Tree Cameras</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>99. Recover Binary Search Tree</li> <li>993. Cousins in Binary Tree</li> <li>998. Maximum Binary Tree II</li> </ul>"},{"location":"tags/#bit-manipulation","title":"Bit Manipulation","text":"<ul> <li>1009. Complement of Base 10 Integer</li> <li>1066. Campus Bikes II</li> <li>1125. Smallest Sufficient Team</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1256. Encode Number</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1310. XOR Queries of a Subarray</li> <li>1318. Minimum Flips to Make a OR b Equal to c</li> <li>1342. Number of Steps to Reduce a Number to Zero</li> <li>1349. Maximum Students Taking Exam</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>136. Single Number</li> <li>137. Single Number II</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1386. Cinema Seat Allocation</li> <li>1404. Number of Steps to Reduce a Number in Binary Representation to One</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1486. XOR Operation in an Array</li> <li>1494. Parallel Courses II</li> <li>1506. Find Root of N-Ary Tree</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1525. Number of Good Ways to Split a String</li> <li>1542. Find Longest Awesome Substring</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1655. Distribute Repeating Integers</li> <li>1659. Maximize Grid Happiness</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1681. Minimum Incompatibility</li> <li>1684. Count the Number of Consistent Strings</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1720. Decode XORed Array</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1734. Decode XORed Permutation</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1755. Closest Subsequence Sum</li> <li>1763. Longest Nice Substring</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1799. Maximize Score After N Operations</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1829. Maximum XOR for Each Query</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1863. Sum of All Subset XOR Totals</li> <li>187. Repeated DNA Sequences</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>190. Reverse Bits</li> <li>1908. Game of Nim</li> <li>191. Number of 1 Bits</li> <li>1915. Number of Wonderful Substrings</li> <li>1938. Maximum Genetic Difference Query</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1994. The Number of Good Subsets</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>201. Bitwise AND of Numbers Range</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2157. Groups of Strings</li> <li>2172. Maximum AND Sum of Array</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2220. Minimum Bit Flips to Convert Number</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2305. Fair Distribution of Cookies</li> <li>2306. Naming a Company</li> <li>231. Power of Two</li> <li>2317. Maximum XOR After Operations</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2354. Number of Excellent Pairs</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2401. Longest Nice Subarray</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2429. Minimize XOR</li> <li>2433. Find The Original Array of Prefix Xor</li> <li>2438. Range Product Queries of Powers</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2527. Find Xor-Beauty of Array</li> <li>2546. Apply Bitwise Operations to Make Strings Equal</li> <li>2564. Substring XOR Queries</li> <li>260. Single Number III</li> <li>266. Palindrome Permutation</li> <li>268. Missing Number</li> <li>287. Find the Duplicate Number</li> <li>29. Divide Two Integers</li> <li>318. Maximum Product of Word Lengths</li> <li>320. Generalized Abbreviation</li> <li>338. Counting Bits</li> <li>342. Power of Four</li> <li>371. Sum of Two Integers</li> <li>389. Find the Difference</li> <li>393. UTF-8 Validation</li> <li>397. Integer Replacement</li> <li>401. Binary Watch</li> <li>405. Convert a Number to Hexadecimal</li> <li>411. Minimum Unique Word Abbreviation</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>461. Hamming Distance</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>473. Matchsticks to Square</li> <li>476. Number Complement</li> <li>477. Total Hamming Distance</li> <li>491. Non-decreasing Subsequences</li> <li>526. Beautiful Arrangement</li> <li>638. Shopping Offers</li> <li>645. Set Mismatch</li> <li>67. Add Binary</li> <li>672. Bulb Switcher II</li> <li>691. Stickers to Spell Word</li> <li>693. Binary Number with Alternating Bits</li> <li>698. Partition to K Equal Sum Subsets</li> <li>751. IP to CIDR</li> <li>756. Pyramid Transition Matrix</li> <li>762. Prime Number of Set Bits in Binary Representation</li> <li>779. K-th Symbol in Grammar</li> <li>78. Subsets</li> <li>782. Transform to Chessboard</li> <li>784. Letter Case Permutation</li> <li>805. Split Array With Same Average</li> <li>810. Chalkboard XOR Game</li> <li>847. Shortest Path Visiting All Nodes</li> <li>861. Score After Flipping Matrix</li> <li>864. Shortest Path to Get All Keys</li> <li>868. Binary Gap</li> <li>89. Gray Code</li> <li>898. Bitwise ORs of Subarrays</li> <li>90. Subsets II</li> <li>943. Find the Shortest Superstring</li> <li>957. Prison Cells After N Days</li> <li>980. Unique Paths III</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#bitmask","title":"Bitmask","text":"<ul> <li>1066. Campus Bikes II</li> <li>1125. Smallest Sufficient Team</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1349. Maximum Students Taking Exam</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1494. Parallel Courses II</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1655. Distribute Repeating Integers</li> <li>1659. Maximize Grid Happiness</li> <li>1681. Minimum Incompatibility</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1755. Closest Subsequence Sum</li> <li>1799. Maximize Score After N Operations</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1994. The Number of Good Subsets</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2172. Maximum AND Sum of Array</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2305. Fair Distribution of Cookies</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>473. Matchsticks to Square</li> <li>526. Beautiful Arrangement</li> <li>638. Shopping Offers</li> <li>691. Stickers to Spell Word</li> <li>698. Partition to K Equal Sum Subsets</li> <li>805. Split Array With Same Average</li> <li>847. Shortest Path Visiting All Nodes</li> <li>943. Find the Shortest Superstring</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#brainteaser","title":"Brainteaser","text":"<ul> <li>1025. Divisor Game</li> <li>1033. Moving Stones Until Consecutive</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1908. Game of Nim</li> <li>2396. Strictly Palindromic Number</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>292. Nim Game</li> <li>319. Bulb Switcher</li> <li>810. Chalkboard XOR Game</li> </ul>"},{"location":"tags/#breadth-first-search","title":"Breadth-First Search","text":"<ul> <li>100. Same Tree</li> <li>101. Symmetric Tree</li> <li>102. Binary Tree Level Order Traversal</li> <li>1020. Number of Enclaves</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1034. Coloring A Border</li> <li>1036. Escape a Large Maze</li> <li>104. Maximum Depth of Binary Tree</li> <li>1042. Flower Planting With No Adjacent</li> <li>107. Binary Tree Level Order Traversal II</li> <li>1087. Brace Expansion</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1096. Brace Expansion II</li> <li>1102. Path With Maximum Minimum Value</li> <li>111. Minimum Depth of Binary Tree</li> <li>112. Path Sum</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>1129. Shortest Path with Alternating Colors</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>1162. As Far from Land as Possible</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1197. Minimum Knight Moves</li> <li>1202. Smallest String With Swaps</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1215. Stepping Numbers</li> <li>1236. Web Crawler</li> <li>1242. Web Crawler Multithreaded</li> <li>1245. Tree Diameter</li> <li>1254. Number of Closed Islands</li> <li>1257. Smallest Common Region</li> <li>126. Word Ladder II</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1267. Count Servers that Communicate</li> <li>127. Word Ladder</li> <li>1273. Delete Tree Nodes</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>130. Surrounded Regions</li> <li>1302. Deepest Leaves Sum</li> <li>1306. Jump Game III</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1319. Number of Operations to Make Network Connected</li> <li>133. Clone Graph</li> <li>1345. Jump Game IV</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1462. Course Schedule IV</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1469. Find All The Lonely Nodes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1490. Clone N-ary Tree</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1609. Even Odd Tree</li> <li>1625. Lexicographically Smallest String After Applying Operations</li> <li>1631. Path With Minimum Effort</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1660. Correct a Binary Tree</li> <li>1730. Shortest Path to Get Food</li> <li>1740. Find Distance in a Binary Tree</li> <li>1765. Map of Highest Peak</li> <li>1766. Tree of Coprimes</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1905. Count Sub Islands</li> <li>1926. Nearest Exit from Entrance in Maze</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>199. Binary Tree Right Side View</li> <li>1992. Find All Groups of Farmland</li> <li>1993. Operations on Tree</li> <li>200. Number of Islands</li> <li>2039. The Time When the Network Becomes Idle</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2059. Minimum Operations to Convert Number</li> <li>207. Course Schedule</li> <li>2092. Find All People With Secret</li> <li>210. Course Schedule II</li> <li>2101. Detonate the Maximum Bombs</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2258. Escape the Spreading Fire</li> <li>226. Invert Binary Tree</li> <li>2277. Closest Node to Path in Tree</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2467. Most Profitable Path in a Tree</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>261. Graph Valid Tree</li> <li>269. Alien Dictionary</li> <li>279. Perfect Squares</li> <li>286. Walls and Gates</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>301. Remove Invalid Parentheses</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>310. Minimum Height Trees</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>317. Shortest Distance from All Buildings</li> <li>322. Coin Change</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>329. Longest Increasing Path in a Matrix</li> <li>339. Nested List Weight Sum</li> <li>364. Nested List Weight Sum II</li> <li>365. Water and Jug Problem</li> <li>399. Evaluate Division</li> <li>404. Sum of Left Leaves</li> <li>407. Trapping Rain Water II</li> <li>417. Pacific Atlantic Water Flow</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>429. N-ary Tree Level Order Traversal</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>433. Minimum Genetic Mutation</li> <li>449. Serialize and Deserialize BST</li> <li>463. Island Perimeter</li> <li>488. Zuma Game</li> <li>490. The Maze</li> <li>499. The Maze III</li> <li>505. The Maze II</li> <li>513. Find Bottom Left Tree Value</li> <li>514. Freedom Trail</li> <li>515. Find Largest Value in Each Tree Row</li> <li>529. Minesweeper</li> <li>530. Minimum Absolute Difference in BST</li> <li>542. 01 Matrix</li> <li>547. Number of Provinces</li> <li>559. Maximum Depth of N-ary Tree</li> <li>582. Kill Process</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>653. Two Sum IV - Input is a BST</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>672. Bulb Switcher II</li> <li>675. Cut Off Trees for Golf Event</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>690. Employee Importance</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>711. Number of Distinct Islands II</li> <li>721. Accounts Merge</li> <li>733. Flood Fill</li> <li>737. Sentence Similarity II</li> <li>742. Closest Leaf in a Binary Tree</li> <li>743. Network Delay Time</li> <li>749. Contain Virus</li> <li>752. Open the Lock</li> <li>756. Pyramid Transition Matrix</li> <li>765. Couples Holding Hands</li> <li>773. Sliding Puzzle</li> <li>778. Swim in Rising Water</li> <li>783. Minimum Distance Between BST Nodes</li> <li>785. Is Graph Bipartite?</li> <li>787. Cheapest Flights Within K Stops</li> <li>797. All Paths From Source to Target</li> <li>802. Find Eventual Safe States</li> <li>815. Bus Routes</li> <li>827. Making A Large Island</li> <li>839. Similar String Groups</li> <li>841. Keys and Rooms</li> <li>847. Shortest Path Visiting All Nodes</li> <li>854. K-Similar Strings</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>864. Shortest Path to Get All Keys</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>886. Possible Bipartition</li> <li>909. Snakes and Ladders</li> <li>919. Complete Binary Tree Inserter</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>934. Shortest Bridge</li> <li>958. Check Completeness of a Binary Tree</li> <li>959. Regions Cut By Slashes</li> <li>965. Univalued Binary Tree</li> <li>967. Numbers With Same Consecutive Differences</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>993. Cousins in Binary Tree</li> <li>994. Rotting Oranges</li> </ul>"},{"location":"tags/#bucket-sort","title":"Bucket Sort","text":"<ul> <li>164. Maximum Gap</li> <li>220. Contains Duplicate III</li> <li>347. Top K Frequent Elements</li> <li>451. Sort Characters By Frequency</li> <li>692. Top K Frequent Words</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#combinatorics","title":"Combinatorics","text":"<ul> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1641. Count Sorted Vowel Strings</li> <li>1643. Kth Smallest Instructions</li> <li>1735. Count Ways to Make Array With Product</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>2063. Vowels of All Substrings</li> <li>2221. Find Triangular Sum of an Array</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2400. Number of Ways to Reach a Position After Exactly k Steps</li> <li>2514. Count Anagrams</li> <li>2539. Count the Number of Good Subsequences</li> <li>458. Poor Pigs</li> <li>62. Unique Paths</li> <li>920. Number of Music Playlists</li> </ul>"},{"location":"tags/#concurrency","title":"Concurrency","text":"<ul> <li>1114. Print in Order</li> <li>1115. Print FooBar Alternately</li> <li>1116. Print Zero Even Odd</li> <li>1117. Building H2O</li> <li>1188. Design Bounded Blocking Queue</li> <li>1195. Fizz Buzz Multithreaded</li> <li>1226. The Dining Philosophers</li> <li>1242. Web Crawler Multithreaded</li> <li>1279. Traffic Light Controlled Intersection</li> </ul>"},{"location":"tags/#counting","title":"Counting","text":"<ul> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1054. Distant Barcodes</li> <li>1079. Letter Tile Possibilities</li> <li>1090. Largest Values From Labels</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1189. Maximum Number of Balloons</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1221. Split a String in Balanced Strings</li> <li>1267. Count Servers that Communicate</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1370. Increasing Decreasing String</li> <li>1394. Find Lucky Integer in an Array</li> <li>1400. Construct K Palindrome Strings</li> <li>1419. Minimum Number of Frogs Croaking</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1512. Number of Good Pairs</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1603. Design Parking System</li> <li>169. Majority Element</li> <li>1704. Determine if String Halves Are Alike</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1748. Sum of Unique Elements</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1814. Count Nice Pairs in an Array</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1854. Maximum Population Year</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2013. Detect Squares</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2029. Stone Game IX</li> <li>2053. Kth Distinct String in an Array</li> <li>2067. Number of Equal Count Substrings</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2085. Count Common Words With One Occurrence</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2182. Construct String With Repeat Limit</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2225. Find Players With Zero or One Losses</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2248. Intersection of Multiple Arrays</li> <li>2268. Minimum Number of Keypresses</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2287. Rearrange Characters to Make Target String</li> <li>229. Majority Element II</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2347. Best Poker Hand</li> <li>2351. First Letter to Appear Twice</li> <li>2404. Most Frequent Even Element</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>2453. Destroy Sequential Targets</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2514. Count Anagrams</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2539. Count the Number of Good Subsequences</li> <li>2547. Minimum Cost to Split an Array</li> <li>299. Bulls and Cows</li> <li>347. Top K Frequent Elements</li> <li>358. Rearrange String k Distance Apart</li> <li>383. Ransom Note</li> <li>387. First Unique Character in a String</li> <li>451. Sort Characters By Frequency</li> <li>621. Task Scheduler</li> <li>692. Top K Frequent Words</li> <li>767. Reorganize String</li> <li>811. Subdomain Visit Count</li> <li>819. Most Common Word</li> <li>869. Reordered Power of 2</li> <li>900. RLE Iterator</li> <li>914. X of a Kind in a Deck of Cards</li> <li>923. 3Sum With Multiplicity</li> <li>945. Minimum Increment to Make Array Unique</li> <li>992. Subarrays with K Different Integers</li> </ul>"},{"location":"tags/#counting-sort","title":"Counting Sort","text":"<ul> <li>1051. Height Checker</li> <li>1122. Relative Sort Array</li> <li>274. H-Index</li> <li>561. Array Partition</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#data-stream","title":"Data Stream","text":"<ul> <li>1032. Stream of Characters</li> <li>1352. Product of the Last K Numbers</li> <li>1429. First Unique Number</li> <li>1472. Design Browser History</li> <li>1500. Design a File Sharing System</li> <li>1656. Design an Ordered Stream</li> <li>1670. Design Front Middle Back Queue</li> <li>170. Two Sum III - Data structure design</li> <li>1825. Finding MK Average</li> <li>2034. Stock Price Fluctuation</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>295. Find Median from Data Stream</li> <li>346. Moving Average from Data Stream</li> <li>642. Design Search Autocomplete System</li> <li>703. Kth Largest Element in a Stream</li> <li>901. Online Stock Span</li> <li>933. Number of Recent Calls</li> </ul>"},{"location":"tags/#database","title":"Database","text":"<ul> <li>1045. Customers Who Bought All Products</li> <li>1050. Actors and Directors Who Cooperated At Least Three Times</li> <li>1068. Product Sales Analysis I</li> <li>1069. Product Sales Analysis II</li> <li>1070. Product Sales Analysis III</li> <li>1075. Project Employees I</li> <li>1076. Project Employees II</li> <li>1077. Project Employees III</li> <li>1082. Sales Analysis I</li> <li>1083. Sales Analysis II</li> <li>1084. Sales Analysis III</li> <li>1097. Game Play Analysis V</li> <li>1098. Unpopular Books</li> <li>1107. New Users Daily Count</li> <li>1112. Highest Grade For Each Student</li> <li>1113. Reported Posts</li> <li>1126. Active Businesses</li> <li>1127. User Purchase Platform</li> <li>1132. Reported Posts II</li> <li>1141. User Activity for the Past 30 Days I</li> <li>1142. User Activity for the Past 30 Days II</li> <li>1148. Article Views I</li> <li>1149. Article Views II</li> <li>1158. Market Analysis I</li> <li>1159. Market Analysis II</li> <li>1164. Product Price at a Given Date</li> <li>1173. Immediate Food Delivery I</li> <li>1174. Immediate Food Delivery II</li> <li>1179. Reformat Department Table</li> <li>1193. Monthly Transactions I</li> <li>1194. Tournament Winners</li> <li>1204. Last Person to Fit in the Bus</li> <li>1205. Monthly Transactions II</li> <li>1211. Queries Quality and Percentage</li> <li>1212. Team Scores in Football Tournament</li> <li>1225. Report Contiguous Dates</li> <li>1241. Number of Comments per Post</li> <li>1251. Average Selling Price</li> <li>1264. Page Recommendations</li> <li>1270. All People Report to the Given Manager</li> <li>1280. Students and Examinations</li> <li>1285. Find the Start and End Number of Continuous Ranges</li> <li>1294. Weather Type in Each Country</li> <li>1303. Find the Team Size</li> <li>1308. Running Total for Different Genders</li> <li>1321. Restaurant Growth</li> <li>1322. Ads Performance</li> <li>1327. List the Products Ordered in a Period</li> <li>1336. Number of Transactions per Visit</li> <li>1341. Movie Rating</li> <li>1350. Students With Invalid Departments</li> <li>1355. Activity Participants</li> <li>1364. Number of Trusted Contacts of a Customer</li> <li>1369. Get the Second Most Recent Activity</li> <li>1378. Replace Employee ID With The Unique Identifier</li> <li>1384. Total Sales Amount by Year</li> <li>1393. Capital Gain/Loss</li> <li>1398. Customers Who Bought Products A and B but Not C</li> <li>1407. Top Travellers</li> <li>1412. Find the Quiet Students in All Exams</li> <li>1421. NPV Queries</li> <li>1435. Create a Session Bar Chart</li> <li>1440. Evaluate Boolean Expression</li> <li>1445. Apples &amp; Oranges</li> <li>1454. Active Users</li> <li>1459. Rectangles Area</li> <li>1468. Calculate Salaries</li> <li>1479. Sales by Day of the Week</li> <li>1484. Group Sold Products By The Date</li> <li>1495. Friendly Movies Streamed Last Month</li> <li>1501. Countries You Can Safely Invest In</li> <li>1511. Customer Order Frequency</li> <li>1517. Find Users With Valid E-Mails</li> <li>1527. Patients With a Condition</li> <li>1532. The Most Recent Three Orders</li> <li>1543. Fix Product Name Format</li> <li>1549. The Most Recent Orders for Each Product</li> <li>1555. Bank Account Summary</li> <li>1565. Unique Orders and Customers Per Month</li> <li>1571. Warehouse Manager</li> <li>1581. Customer Who Visited but Did Not Make Any Transactions</li> <li>1587. Bank Account Summary II</li> <li>1596. The Most Frequently Ordered Products for Each Customer</li> <li>1607. Sellers With No Sales</li> <li>1613. Find the Missing IDs</li> <li>1623. All Valid Triplets That Can Represent a Country</li> <li>1633. Percentage of Users Attended a Contest</li> <li>1635. Hopper Company Queries I</li> <li>1645. Hopper Company Queries II</li> <li>1651. Hopper Company Queries III</li> <li>1661. Average Time of Process per Machine</li> <li>1667. Fix Names in a Table</li> <li>1677. Product's Worth Over Invoices</li> <li>1683. Invalid Tweets</li> <li>1693. Daily Leads and Partners</li> <li>1699. Number of Calls Between Two Persons</li> <li>1709. Biggest Window Between Visits</li> <li>1715. Count Apples and Oranges</li> <li>1729. Find Followers Count</li> <li>1731. The Number of Employees Which Report to Each Employee</li> <li>1741. Find Total Time Spent by Each Employee</li> <li>1747. Leetflex Banned Accounts</li> <li>175. Combine Two Tables</li> <li>1757. Recyclable and Low Fat Products</li> <li>176. Second Highest Salary</li> <li>1767. Find the Subtasks That Did Not Execute</li> <li>177. Nth Highest Salary</li> <li>1777. Product's Price for Each Store</li> <li>178. Rank Scores</li> <li>1783. Grand Slam Titles</li> <li>1789. Primary Department for Each Employee</li> <li>1795. Rearrange Products Table</li> <li>180. Consecutive Numbers</li> <li>1809. Ad-Free Sessions</li> <li>181. Employees Earning More Than Their Managers</li> <li>1811. Find Interview Candidates</li> <li>182. Duplicate Emails</li> <li>1821. Find Customers With Positive Revenue this Year</li> <li>183. Customers Who Never Order</li> <li>1831. Maximum Transaction Each Day</li> <li>184. Department Highest Salary</li> <li>1841. League Statistics</li> <li>1843. Suspicious Bank Accounts</li> <li>185. Department Top Three Salaries</li> <li>1853. Convert Date Format</li> <li>1867. Orders With Maximum Quantity Above Average</li> <li>1873. Calculate Special Bonus</li> <li>1875. Group Employees of the Same Salary</li> <li>1890. The Latest Login in 2020</li> <li>1892. Page Recommendations II</li> <li>1907. Count Salary Categories</li> <li>1917. Leetcodify Friends Recommendations</li> <li>1919. Leetcodify Similar Friends</li> <li>1934. Confirmation Rate</li> <li>1939. Users That Actively Request Confirmation Messages</li> <li>1949. Strong Friendship</li> <li>1951. All the Pairs With the Maximum Number of Common Followers</li> <li>196. Delete Duplicate Emails</li> <li>1965. Employees With Missing Information</li> <li>197. Rising Temperature</li> <li>1972. First and Last Call On the Same Day</li> <li>1978. Employees Whose Manager Left the Company</li> <li>1988. Find Cutoff Score for Each School</li> <li>1990. Count the Number of Experiments</li> <li>2004. The Number of Seniors and Juniors to Join the Company</li> <li>2010. The Number of Seniors and Juniors to Join the Company II</li> <li>2020. Number of Accounts That Did Not Stream</li> <li>2026. Low-Quality Problems</li> <li>2041. Accepted Candidates From the Interviews</li> <li>2051. The Category of Each Member in the Store</li> <li>2066. Account Balance</li> <li>2072. The Winner University</li> <li>2082. The Number of Rich Customers</li> <li>2084. Drop Type 1 Orders for Customers With Type 0 Orders</li> <li>2112. The Airport With the Most Traffic</li> <li>2118. Build the Equation</li> <li>2142. The Number of Passengers in Each Bus I</li> <li>2153. The Number of Passengers in Each Bus II</li> <li>2159. Order Two Columns Independently</li> <li>2173. Longest Winning Streak</li> <li>2175. The Change in Global Rankings</li> <li>2199. Finding the Topic of Each Post</li> <li>2205. The Number of Users That Are Eligible for Discount</li> <li>2228. Users With Two Purchases Within Seven Days</li> <li>2230. The Users That Are Eligible for Discount</li> <li>2238. Number of Times a Driver Was a Passenger</li> <li>2252. Dynamic Pivoting of a Table</li> <li>2253. Dynamic Unpivoting of a Table</li> <li>2292. Products With Three or More Orders in Two Consecutive Years</li> <li>2298. Tasks Count in the Weekend</li> <li>2308. Arrange Table by Gender</li> <li>2314. The First Day of the Maximum Recorded Degree in Each City</li> <li>2324. Product Sales Analysis IV</li> <li>2329. Product Sales Analysis V</li> <li>2339. All the Matches of the League</li> <li>2346. Compute the Rank as a Percentage</li> <li>2356. Number of Unique Subjects Taught by Each Teacher</li> <li>2362. Generate the Invoice</li> <li>2372. Calculate the Influence of Each Salesperson</li> <li>2377. Sort the Olympic Table</li> <li>2388. Change Null Values in a Table to the Previous Value</li> <li>2394. Employees With Deductions</li> <li>2474. Customers With Strictly Increasing Purchases</li> <li>2480. Form a Chemical Bond</li> <li>2494. Merge Overlapping Events in the Same Hall</li> <li>2504. Concatenate the Name and the Profession</li> <li>262. Trips and Users</li> <li>511. Game Play Analysis I</li> <li>512. Game Play Analysis II</li> <li>534. Game Play Analysis III</li> <li>550. Game Play Analysis IV</li> <li>569. Median Employee Salary</li> <li>570. Managers with at Least 5 Direct Reports</li> <li>571. Find Median Given Frequency of Numbers</li> <li>574. Winning Candidate</li> <li>577. Employee Bonus</li> <li>578. Get Highest Answer Rate Question</li> <li>579. Find Cumulative Salary of an Employee</li> <li>580. Count Student Number in Departments</li> <li>584. Find Customer Referee</li> <li>585. Investments in 2016</li> <li>586. Customer Placing the Largest Number of Orders</li> <li>595. Big Countries</li> <li>596. Classes More Than 5 Students</li> <li>597. Friend Requests I: Overall Acceptance Rate</li> <li>601. Human Traffic of Stadium</li> <li>602. Friend Requests II: Who Has the Most Friends</li> <li>603. Consecutive Available Seats</li> <li>607. Sales Person</li> <li>608. Tree Node</li> <li>610. Triangle Judgement</li> <li>612. Shortest Distance in a Plane</li> <li>613. Shortest Distance in a Line</li> <li>614. Second Degree Follower</li> <li>615. Average Salary: Departments VS Company</li> <li>618. Students Report By Geography</li> <li>619. Biggest Single Number</li> <li>620. Not Boring Movies</li> <li>626. Exchange Seats</li> <li>627. Swap Salary</li> </ul>"},{"location":"tags/#depth-first-search","title":"Depth-First Search","text":"<ul> <li>100. Same Tree</li> <li>101. Symmetric Tree</li> <li>1020. Number of Enclaves</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>1034. Coloring A Border</li> <li>1036. Escape a Large Maze</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>104. Maximum Depth of Binary Tree</li> <li>1042. Flower Planting With No Adjacent</li> <li>1059. All Paths from Source Lead to Destination</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>110. Balanced Binary Tree</li> <li>1102. Path With Maximum Minimum Value</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>113. Path Sum II</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1145. Binary Tree Coloring Game</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1192. Critical Connections in a Network</li> <li>1202. Smallest String With Swaps</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1214. Two Sum BSTs</li> <li>1236. Web Crawler</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1242. Web Crawler Multithreaded</li> <li>1245. Tree Diameter</li> <li>1254. Number of Closed Islands</li> <li>1257. Smallest Common Region</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1267. Count Servers that Communicate</li> <li>1273. Delete Tree Nodes</li> <li>129. Sum Root to Leaf Numbers</li> <li>130. Surrounded Regions</li> <li>1302. Deepest Leaves Sum</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1306. Jump Game III</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1319. Number of Operations to Make Network Connected</li> <li>1325. Delete Leaves With a Given Value</li> <li>133. Clone Graph</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>144. Binary Tree Preorder Traversal</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>145. Binary Tree Postorder Traversal</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1462. Course Schedule IV</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1469. Find All The Lonely Nodes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1490. Clone N-ary Tree</li> <li>1506. Find Root of N-Ary Tree</li> <li>1516. Move Sub-Tree of N-Ary Tree</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1522. Diameter of N-Ary Tree</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>1559. Detect Cycles in 2D Grid</li> <li>156. Binary Tree Upside Down</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1600. Throne Inheritance</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1631. Path With Minimum Effort</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1660. Correct a Binary Tree</li> <li>1666. Change the Root of a Binary Tree</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>1706. Where Will the Ball Fall</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1740. Find Distance in a Binary Tree</li> <li>1766. Tree of Coprimes</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1858. Longest Word With All Prefixes</li> <li>1905. Count Sub Islands</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>199. Binary Tree Right Side View</li> <li>1992. Find All Groups of Farmland</li> <li>1993. Operations on Tree</li> <li>200. Number of Islands</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2049. Count Nodes With the Highest Score</li> <li>207. Course Schedule</li> <li>2092. Find All People With Secret</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2097. Valid Arrangement of Pairs</li> <li>210. Course Schedule II</li> <li>2101. Detonate the Maximum Bombs</li> <li>211. Design Add and Search Words Data Structure</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>222. Count Complete Tree Nodes</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>226. Invert Binary Tree</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>2277. Closest Node to Path in Tree</li> <li>230. Kth Smallest Element in a BST</li> <li>2307. Check for Contradictions in Equations</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>2359. Find Closest Node to Given Two Nodes</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2360. Longest Cycle in a Graph</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2440. Create Components With Same Value</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2467. Most Profitable Path in a Tree</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>250. Count Univalue Subtrees</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>257. Binary Tree Paths</li> <li>2581. Count Number of Possible Root Nodes</li> <li>261. Graph Valid Tree</li> <li>269. Alien Dictionary</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>310. Minimum Height Trees</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>329. Longest Increasing Path in a Matrix</li> <li>332. Reconstruct Itinerary</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>339. Nested List Weight Sum</li> <li>341. Flatten Nested List Iterator</li> <li>364. Nested List Weight Sum II</li> <li>365. Water and Jug Problem</li> <li>366. Find Leaves of Binary Tree</li> <li>385. Mini Parser</li> <li>386. Lexicographical Numbers</li> <li>388. Longest Absolute File Path</li> <li>399. Evaluate Division</li> <li>404. Sum of Left Leaves</li> <li>417. Pacific Atlantic Water Flow</li> <li>419. Battleships in a Board</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>437. Path Sum III</li> <li>449. Serialize and Deserialize BST</li> <li>463. Island Perimeter</li> <li>472. Concatenated Words</li> <li>490. The Maze</li> <li>499. The Maze III</li> <li>501. Find Mode in Binary Search Tree</li> <li>505. The Maze II</li> <li>508. Most Frequent Subtree Sum</li> <li>513. Find Bottom Left Tree Value</li> <li>514. Freedom Trail</li> <li>515. Find Largest Value in Each Tree Row</li> <li>529. Minesweeper</li> <li>530. Minimum Absolute Difference in BST</li> <li>536. Construct Binary Tree from String</li> <li>538. Convert BST to Greater Tree</li> <li>543. Diameter of Binary Tree</li> <li>545. Boundary of Binary Tree</li> <li>547. Number of Provinces</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>559. Maximum Depth of N-ary Tree</li> <li>563. Binary Tree Tilt</li> <li>565. Array Nesting</li> <li>572. Subtree of Another Tree</li> <li>582. Kill Process</li> <li>589. N-ary Tree Preorder Traversal</li> <li>590. N-ary Tree Postorder Traversal</li> <li>606. Construct String from Binary Tree</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>666. Path Sum IV</li> <li>669. Trim a Binary Search Tree</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>672. Bulb Switcher II</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>687. Longest Univalue Path</li> <li>690. Employee Importance</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>711. Number of Distinct Islands II</li> <li>721. Accounts Merge</li> <li>733. Flood Fill</li> <li>737. Sentence Similarity II</li> <li>742. Closest Leaf in a Binary Tree</li> <li>743. Network Delay Time</li> <li>749. Contain Virus</li> <li>753. Cracking the Safe</li> <li>756. Pyramid Transition Matrix</li> <li>765. Couples Holding Hands</li> <li>778. Swim in Rising Water</li> <li>783. Minimum Distance Between BST Nodes</li> <li>785. Is Graph Bipartite?</li> <li>787. Cheapest Flights Within K Stops</li> <li>797. All Paths From Source to Target</li> <li>802. Find Eventual Safe States</li> <li>814. Binary Tree Pruning</li> <li>827. Making A Large Island</li> <li>834. Sum of Distances in Tree</li> <li>839. Similar String Groups</li> <li>841. Keys and Rooms</li> <li>851. Loud and Rich</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>872. Leaf-Similar Trees</li> <li>886. Possible Bipartition</li> <li>897. Increasing Order Search Tree</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>934. Shortest Bridge</li> <li>938. Range Sum of BST</li> <li>94. Binary Tree Inorder Traversal</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>951. Flip Equivalent Binary Trees</li> <li>959. Regions Cut By Slashes</li> <li>965. Univalued Binary Tree</li> <li>968. Binary Tree Cameras</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>99. Recover Binary Search Tree</li> <li>993. Cousins in Binary Tree</li> </ul>"},{"location":"tags/#design","title":"Design","text":"<ul> <li>1032. Stream of Characters</li> <li>1146. Snapshot Array</li> <li>1157. Online Majority Element In Subarray</li> <li>1166. Design File System</li> <li>1172. Dinner Plate Stacks</li> <li>1206. Design Skiplist</li> <li>1244. Design A Leaderboard</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1286. Iterator for Combination</li> <li>1348. Tweet Counts Per Frequency</li> <li>1352. Product of the Last K Numbers</li> <li>1357. Apply Discount Every n Orders</li> <li>1381. Design a Stack With Increment Operation</li> <li>1396. Design Underground System</li> <li>1429. First Unique Number</li> <li>146. LRU Cache</li> <li>1472. Design Browser History</li> <li>1476. Subrectangle Queries</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1500. Design a File Sharing System</li> <li>155. Min Stack</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1586. Binary Search Tree Iterator II</li> <li>1600. Throne Inheritance</li> <li>1603. Design Parking System</li> <li>1622. Fancy Sequence</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1656. Design an Ordered Stream</li> <li>1670. Design Front Middle Back Queue</li> <li>170. Two Sum III - Data structure design</li> <li>173. Binary Search Tree Iterator</li> <li>1756. Design Most Recently Used Queue</li> <li>1797. Design Authentication Manager</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1825. Finding MK Average</li> <li>1845. Seat Reservation Manager</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>1912. Design Movie Rental System</li> <li>1993. Operations on Tree</li> <li>2013. Detect Squares</li> <li>2034. Stock Price Fluctuation</li> <li>2043. Simple Bank System</li> <li>2069. Walking Robot Simulation II</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2080. Range Frequency Queries</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>211. Design Add and Search Words Data Structure</li> <li>2166. Design Bitset</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2241. Design an ATM Machine</li> <li>225. Implement Stack using Queues</li> <li>2254. Design Video Sharing Platform</li> <li>2276. Count Integers in Intervals</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2296. Design a Text Editor</li> <li>232. Implement Queue using Stacks</li> <li>2336. Smallest Number in Infinite Set</li> <li>2349. Design a Number Container System</li> <li>2353. Design a Food Rating System</li> <li>2408. Design SQL</li> <li>2424. Longest Uploaded Prefix</li> <li>244. Shortest Word Distance II</li> <li>2502. Design Memory Allocator</li> <li>251. Flatten 2D Vector</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>271. Encode and Decode Strings</li> <li>281. Zigzag Iterator</li> <li>284. Peeking Iterator</li> <li>288. Unique Word Abbreviation</li> <li>295. Find Median from Data Stream</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>341. Flatten Nested List Iterator</li> <li>346. Moving Average from Data Stream</li> <li>348. Design Tic-Tac-Toe</li> <li>352. Data Stream as Disjoint Intervals</li> <li>353. Design Snake Game</li> <li>355. Design Twitter</li> <li>359. Logger Rate Limiter</li> <li>362. Design Hit Counter</li> <li>379. Design Phone Directory</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>432. All O`one Data Structure</li> <li>449. Serialize and Deserialize BST</li> <li>460. LFU Cache</li> <li>535. Encode and Decode TinyURL</li> <li>588. Design In-Memory File System</li> <li>604. Design Compressed String Iterator</li> <li>622. Design Circular Queue</li> <li>631. Design Excel Sum Formula</li> <li>635. Design Log Storage System</li> <li>641. Design Circular Deque</li> <li>642. Design Search Autocomplete System</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>703. Kth Largest Element in a Stream</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>707. Design Linked List</li> <li>715. Range Module</li> <li>716. Max Stack</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>745. Prefix and Suffix Search</li> <li>855. Exam Room</li> <li>895. Maximum Frequency Stack</li> <li>900. RLE Iterator</li> <li>901. Online Stock Span</li> <li>911. Online Election</li> <li>919. Complete Binary Tree Inserter</li> <li>933. Number of Recent Calls</li> <li>981. Time Based Key-Value Store</li> </ul>"},{"location":"tags/#divide-and-conquer","title":"Divide and Conquer","text":"<ul> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>1274. Number of Ships in a Rectangle</li> <li>1382. Balance a Binary Search Tree</li> <li>148. Sort List</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1649. Create Sorted Array through Instructions</li> <li>169. Majority Element</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1763. Longest Nice Substring</li> <li>190. Reverse Bits</li> <li>191. Number of 1 Bits</li> <li>1982. Find Array Given Subset Sums</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>215. Kth Largest Element in an Array</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>23. Merge k Sorted Lists</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>240. Search a 2D Matrix II</li> <li>2407. Longest Increasing Subsequence II</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>315. Count of Smaller Numbers After Self</li> <li>324. Wiggle Sort II</li> <li>327. Count of Range Sum</li> <li>347. Top K Frequent Elements</li> <li>372. Super Pow</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>4. Median of Two Sorted Arrays</li> <li>427. Construct Quad Tree</li> <li>493. Reverse Pairs</li> <li>53. Maximum Subarray</li> <li>558. Logical OR of Two Binary Grids Represented as Quad-Trees</li> <li>654. Maximum Binary Tree</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>912. Sort an Array</li> <li>918. Maximum Sum Circular Subarray</li> <li>932. Beautiful Array</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#doubly-linked-list","title":"Doubly-Linked List","text":"<ul> <li>146. LRU Cache</li> <li>1472. Design Browser History</li> <li>2296. Design a Text Editor</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>432. All O`one Data Structure</li> <li>460. LFU Cache</li> <li>716. Max Stack</li> </ul>"},{"location":"tags/#dynamic-programming","title":"Dynamic Programming","text":"<ul> <li>10. Regular Expression Matching</li> <li>1000. Minimum Cost to Merge Stones</li> <li>1012. Numbers With Repeated Digits</li> <li>1014. Best Sightseeing Pair</li> <li>1024. Video Stitching</li> <li>1025. Divisor Game</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1035. Uncrossed Lines</li> <li>1039. Minimum Score Triangulation of Polygon</li> <li>1043. Partition Array for Maximum Sum</li> <li>1048. Longest String Chain</li> <li>1049. Last Stone Weight II</li> <li>1062. Longest Repeating Substring</li> <li>1066. Campus Bikes II</li> <li>1067. Digit Count in Range</li> <li>1092. Shortest Common Supersequence</li> <li>1105. Filling Bookcase Shelves</li> <li>1125. Smallest Sufficient Team</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1137. N-th Tribonacci Number</li> <li>1139. Largest 1-Bordered Square</li> <li>1140. Stone Game II</li> <li>1143. Longest Common Subsequence</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>115. Distinct Subsequences</li> <li>1155. Number of Dice Rolls With Target Sum</li> <li>1162. As Far from Land as Possible</li> <li>118. Pascal's Triangle</li> <li>1182. Shortest Distance to Target Color</li> <li>1186. Maximum Subarray Sum with One Deletion</li> <li>1187. Make Array Strictly Increasing</li> <li>119. Pascal's Triangle II</li> <li>1191. K-Concatenation Maximum Sum</li> <li>120. Triangle</li> <li>121. Best Time to Buy and Sell Stock</li> <li>1216. Valid Palindrome III</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1220. Count Vowels Permutation</li> <li>1223. Dice Roll Simulation</li> <li>1227. Airplane Seat Assignment Probability</li> <li>123. Best Time to Buy and Sell Stock III</li> <li>1230. Toss Strange Coins</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1240. Tiling a Rectangle with the Fewest Squares</li> <li>1246. Palindrome Removal</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1259. Handshakes That Don't Cross</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1269. Number of Ways to Stay in the Same Place After Some Steps</li> <li>1277. Count Square Submatrices with All Ones</li> <li>1278. Palindrome Partitioning III</li> <li>1289. Minimum Falling Path Sum II</li> <li>1301. Number of Paths with Max Score</li> <li>131. Palindrome Partitioning</li> <li>1312. Minimum Insertion Steps to Make a String Palindrome</li> <li>132. Palindrome Partitioning II</li> <li>1320. Minimum Distance to Type a Word Using Two Fingers</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1335. Minimum Difficulty of a Job Schedule</li> <li>1340. Jump Game V</li> <li>1349. Maximum Students Taking Exam</li> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>1363. Largest Multiple of Three</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1387. Sort Integers by The Power Value</li> <li>1388. Pizza With 3n Slices</li> <li>139. Word Break</li> <li>1395. Count Number of Teams</li> <li>1397. Find All Good Strings</li> <li>140. Word Break II</li> <li>1402. Reducing Dishes</li> <li>1406. Stone Game III</li> <li>1411. Number of Ways to Paint N \u00d7 3 Grid</li> <li>1416. Restore The Array</li> <li>1420. Build Array Where You Can Find The Maximum Exactly K Comparisons</li> <li>1425. Constrained Subsequence Sum</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1449. Form Largest Integer With Digits That Add up to Target</li> <li>1458. Max Dot Product of Two Subsequences</li> <li>1463. Cherry Pickup II</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1473. Paint House III</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1478. Allocate Mailboxes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1494. Parallel Courses II</li> <li>1504. Count Submatrices With All Ones</li> <li>1510. Stone Game IV</li> <li>152. Maximum Product Subarray</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1525. Number of Good Ways to Split a String</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1531. String Compression II</li> <li>1537. Get the Maximum Score</li> <li>1547. Minimum Cost to Cut a Stick</li> <li>1548. The Most Similar Path in a Graph</li> <li>1553. Minimum Number of Days to Eat N Oranges</li> <li>1563. Stone Game V</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1575. Count All Possible Routes</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1621. Number of Sets of K Non-Overlapping Line Segments</li> <li>1626. Best Team With No Conflicts</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>1641. Count Sorted Vowel Strings</li> <li>1643. Kth Smallest Instructions</li> <li>1646. Get Maximum in Generated Array</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1655. Distribute Repeating Integers</li> <li>1659. Maximize Grid Happiness</li> <li>1664. Ways to Make a Fair Array</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1681. Minimum Incompatibility</li> <li>1682. Longest Palindromic Subsequence II</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1690. Stone Game VII</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1692. Count Ways to Distribute Candies</li> <li>1696. Jump Game VI</li> <li>1706. Where Will the Ball Fall</li> <li>1714. Sum Of Special Evenly-Spaced Elements In Array</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1728. Cat and Mouse II</li> <li>1735. Count Ways to Make Array With Product</li> <li>174. Dungeon Game</li> <li>1745. Palindrome Partitioning IV</li> <li>1746. Maximum Subarray Sum After One Operation</li> <li>1749. Maximum Absolute Sum of Any Subarray</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1755. Closest Subsequence Sum</li> <li>1770. Maximum Score from Performing Multiplication Operations</li> <li>1771. Maximize Palindrome Length From Subsequences</li> <li>1774. Closest Dessert Cost</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1799. Maximize Score After N Operations</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1824. Minimum Sideway Jumps</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1872. Stone Game VIII</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>188. Best Time to Buy and Sell Stock IV</li> <li>1883. Minimum Skips to Arrive at Meeting On Time</li> <li>1884. Egg Drop With 2 Eggs and N Floors</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1900. The Earliest and Latest Rounds Where Players Compete</li> <li>1908. Game of Nim</li> <li>1911. Maximum Alternating Subsequence Sum</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1928. Minimum Cost to Reach Destination in Time</li> <li>1931. Painting a Grid With Three Different Colors</li> <li>1937. Maximum Number of Points with Cost</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1955. Count Number of Special Subsequences</li> <li>1959. Minimum Total Space Wasted With K Resizing Operations</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>1977. Number of Ways to Separate Numbers</li> <li>198. House Robber</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1987. Number of Unique Good Subsequences</li> <li>1994. The Number of Good Subsets</li> <li>1997. First Day Where You Have Been in All the Rooms</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2008. Maximum Earnings From Taxi</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2036. Maximum Alternating Subarray Sum</li> <li>2050. Parallel Courses III</li> <li>2052. Minimum Cost to Separate Sentence Into Rows</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2060. Check if an Original String Exists Given Two Encoded Strings</li> <li>2063. Vowels of All Substrings</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>213. House Robber II</li> <li>2140. Solving Questions With Brainpower</li> <li>2143. Choose Numbers From Two Arrays in Range</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>2167. Minimum Time to Remove All Cars Containing Illegal Goods</li> <li>2172. Maximum AND Sum of Array</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2188. Minimum Time to Finish the Race</li> <li>2189. Number of Ways to Build House of Cards</li> <li>22. Generate Parentheses</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>221. Maximal Square</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2222. Number of Ways to Select Buildings</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2262. Total Appeal of A String</li> <li>2263. Make Array Non-decreasing or Non-increasing</li> <li>2266. Count Number of Texts</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2272. Substring With Largest Variance</li> <li>2291. Maximum Profit From Trading Stocks</li> <li>2297. Jump Game VIII</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2305. Fair Distribution of Cookies</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2312. Selling Pieces of Wood</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2318. Number of Distinct Roll Sequences</li> <li>2320. Count Number of Ways to Place Houses</li> <li>2321. Maximum Score Of Spliced Array</li> <li>2327. Number of People Aware of a Secret</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>233. Number of Digit One</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2361. Minimum Costs Using the Train Line</li> <li>2369. Check if There is a Valid Partition For The Array</li> <li>2370. Longest Ideal Subsequence</li> <li>2376. Count Special Integers</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2400. Number of Ways to Reach a Position After Exactly k Steps</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2407. Longest Increasing Subsequence II</li> <li>241. Different Ways to Add Parentheses</li> <li>2420. Find All Good Indices</li> <li>2430. Maximum Deletions on a String</li> <li>2431. Maximize Total Tastiness of Purchased Fruits</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2439. Minimize Maximum of Array</li> <li>2463. Minimum Total Distance Traveled</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2466. Count Ways To Build Good Strings</li> <li>2472. Maximum Number of Non-overlapping Palindrome Substrings</li> <li>2478. Number of Beautiful Partitions</li> <li>2484. Count Palindromic Subsequences</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2501. Longest Square Streak in an Array</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2518. Number of Great Partitions</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2533. Number of Good Binary Strings</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>2547. Minimum Cost to Split an Array</li> <li>2552. Count Increasing Quadruplets</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>256. Paint House</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2585. Number of Ways to Earn Points</li> <li>264. Ugly Number II</li> <li>265. Paint House II</li> <li>276. Paint Fence</li> <li>279. Perfect Squares</li> <li>294. Flip Game II</li> <li>300. Longest Increasing Subsequence</li> <li>309. Best Time to Buy and Sell Stock with Cooldown</li> <li>312. Burst Balloons</li> <li>313. Super Ugly Number</li> <li>32. Longest Valid Parentheses</li> <li>322. Coin Change</li> <li>329. Longest Increasing Path in a Matrix</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>338. Counting Bits</li> <li>343. Integer Break</li> <li>351. Android Unlock Patterns</li> <li>354. Russian Doll Envelopes</li> <li>357. Count Numbers with Unique Digits</li> <li>361. Bomb Enemy</li> <li>368. Largest Divisible Subset</li> <li>375. Guess Number Higher or Lower II</li> <li>376. Wiggle Subsequence</li> <li>377. Combination Sum IV</li> <li>392. Is Subsequence</li> <li>396. Rotate Function</li> <li>397. Integer Replacement</li> <li>403. Frog Jump</li> <li>410. Split Array Largest Sum</li> <li>413. Arithmetic Slices</li> <li>416. Partition Equal Subset Sum</li> <li>418. Sentence Screen Fitting</li> <li>42. Trapping Rain Water</li> <li>435. Non-overlapping Intervals</li> <li>44. Wildcard Matching</li> <li>446. Arithmetic Slices II - Subsequence</li> <li>45. Jump Game II</li> <li>458. Poor Pigs</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>466. Count The Repetitions</li> <li>467. Unique Substrings in Wraparound String</li> <li>471. Encode String with Shortest Length</li> <li>472. Concatenated Words</li> <li>473. Matchsticks to Square</li> <li>474. Ones and Zeroes</li> <li>486. Predict the Winner</li> <li>487. Max Consecutive Ones II</li> <li>488. Zuma Game</li> <li>494. Target Sum</li> <li>5. Longest Palindromic Substring</li> <li>509. Fibonacci Number</li> <li>514. Freedom Trail</li> <li>516. Longest Palindromic Subsequence</li> <li>518. Coin Change II</li> <li>526. Beautiful Arrangement</li> <li>53. Maximum Subarray</li> <li>542. 01 Matrix</li> <li>546. Remove Boxes</li> <li>55. Jump Game</li> <li>552. Student Attendance Record II</li> <li>553. Optimal Division</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>568. Maximum Vacation Days</li> <li>576. Out of Boundary Paths</li> <li>583. Delete Operation for Two Strings</li> <li>600. Non-negative Integers without Consecutive Ones</li> <li>62. Unique Paths</li> <li>629. K Inverse Pairs Array</li> <li>63. Unique Paths II</li> <li>634. Find the Derangement of An Array</li> <li>638. Shopping Offers</li> <li>639. Decode Ways II</li> <li>64. Minimum Path Sum</li> <li>646. Maximum Length of Pair Chain</li> <li>647. Palindromic Substrings</li> <li>650. 2 Keys Keyboard</li> <li>651. 4 Keys Keyboard</li> <li>656. Coin Path</li> <li>664. Strange Printer</li> <li>673. Number of Longest Increasing Subsequence</li> <li>678. Valid Parenthesis String</li> <li>688. Knight Probability in Chessboard</li> <li>689. Maximum Sum of 3 Non-Overlapping Subarrays</li> <li>691. Stickers to Spell Word</li> <li>698. Partition to K Equal Sum Subsets</li> <li>70. Climbing Stairs</li> <li>712. Minimum ASCII Delete Sum for Two Strings</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>718. Maximum Length of Repeated Subarray</li> <li>72. Edit Distance</li> <li>727. Minimum Window Subsequence</li> <li>730. Count Different Palindromic Subsequences</li> <li>740. Delete and Earn</li> <li>741. Cherry Pickup</li> <li>746. Min Cost Climbing Stairs</li> <li>750. Number Of Corner Rectangles</li> <li>764. Largest Plus Sign</li> <li>787. Cheapest Flights Within K Stops</li> <li>788. Rotated Digits</li> <li>790. Domino and Tromino Tiling</li> <li>799. Champagne Tower</li> <li>801. Minimum Swaps To Make Sequences Increasing</li> <li>805. Split Array With Same Average</li> <li>808. Soup Servings</li> <li>813. Largest Sum of Averages</li> <li>818. Race Car</li> <li>823. Binary Trees With Factors</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>834. Sum of Distances in Tree</li> <li>837. New 21 Game</li> <li>838. Push Dominoes</li> <li>845. Longest Mountain in Array</li> <li>847. Shortest Path Visiting All Nodes</li> <li>85. Maximal Rectangle</li> <li>87. Scramble String</li> <li>871. Minimum Number of Refueling Stops</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>877. Stone Game</li> <li>879. Profitable Schemes</li> <li>887. Super Egg Drop</li> <li>894. All Possible Full Binary Trees</li> <li>898. Bitwise ORs of Subarrays</li> <li>902. Numbers At Most N Given Digit Set</li> <li>903. Valid Permutations for DI Sequence</li> <li>907. Sum of Subarray Minimums</li> <li>91. Decode Ways</li> <li>913. Cat and Mouse</li> <li>918. Maximum Sum Circular Subarray</li> <li>920. Number of Music Playlists</li> <li>926. Flip String to Monotone Increasing</li> <li>931. Minimum Falling Path Sum</li> <li>935. Knight Dialer</li> <li>940. Distinct Subsequences II</li> <li>943. Find the Shortest Superstring</li> <li>95. Unique Binary Search Trees II</li> <li>956. Tallest Billboard</li> <li>96. Unique Binary Search Trees</li> <li>960. Delete Columns to Make Sorted III</li> <li>964. Least Operators to Express Number</li> <li>968. Binary Tree Cameras</li> <li>97. Interleaving String</li> <li>975. Odd Even Jump</li> <li>978. Longest Turbulent Subarray</li> <li>983. Minimum Cost For Tickets</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#enumeration","title":"Enumeration","text":"<ul> <li>1291. Sequential Digits</li> <li>1534. Count Good Triplets</li> <li>1566. Detect Pattern of Length M Repeated K or More Times</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1620. Coordinate With Maximum Network Quality</li> <li>1925. Count Square Sum Triples</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1958. Check if Move is Legal</li> <li>1995. Count Special Quadruplets</li> <li>1999. Smallest Greater Multiple Made of Two Digits</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>204. Count Primes</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2081. Sum of k-Mirror Numbers</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2122. Recover the Original Array</li> <li>2151. Maximum Good People Based on Statements</li> <li>2162. Minimum Cost to Set Cooking Time</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2232. Minimize Result by Adding Parentheses to Expression</li> <li>2240. Number of Ways to Buy Pens and Pencils</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>2261. K Divisible Elements Subarrays</li> <li>2306. Naming a Company</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2367. Number of Arithmetic Triplets</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2417. Closest Fair Integer</li> <li>2427. Number of Common Factors</li> <li>2437. Number of Valid Clock Times</li> <li>2440. Create Components With Same Value</li> <li>2443. Sum of Number and Its Reverse</li> <li>2552. Count Increasing Quadruplets</li> <li>681. Next Closest Time</li> <li>800. Similar RGB Color</li> <li>829. Consecutive Numbers Sum</li> <li>845. Longest Mountain in Array</li> <li>869. Reordered Power of 2</li> <li>906. Super Palindromes</li> <li>949. Largest Time for Given Digits</li> </ul>"},{"location":"tags/#eulerian-circuit","title":"Eulerian Circuit","text":"<ul> <li>2097. Valid Arrangement of Pairs</li> <li>332. Reconstruct Itinerary</li> <li>753. Cracking the Safe</li> </ul>"},{"location":"tags/#game-theory","title":"Game Theory","text":"<ul> <li>1025. Divisor Game</li> <li>1140. Stone Game II</li> <li>1406. Stone Game III</li> <li>1510. Stone Game IV</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1563. Stone Game V</li> <li>1686. Stone Game VI</li> <li>1690. Stone Game VII</li> <li>1728. Cat and Mouse II</li> <li>1872. Stone Game VIII</li> <li>1908. Game of Nim</li> <li>1927. Sum Game</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2029. Stone Game IX</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>292. Nim Game</li> <li>294. Flip Game II</li> <li>375. Guess Number Higher or Lower II</li> <li>464. Can I Win</li> <li>486. Predict the Winner</li> <li>810. Chalkboard XOR Game</li> <li>843. Guess the Word</li> <li>877. Stone Game</li> <li>913. Cat and Mouse</li> </ul>"},{"location":"tags/#geometry","title":"Geometry","text":"<ul> <li>1030. Matrix Cells in Distance Order</li> <li>1037. Valid Boomerang</li> <li>1232. Check If It Is a Straight Line</li> <li>1266. Minimum Time Visiting All Points</li> <li>1401. Circle and Rectangle Overlapping</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>149. Max Points on a Line</li> <li>1515. Best Position for a Service Centre</li> <li>1610. Maximum Number of Visible Points</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1924. Erect the Fence II</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>2101. Detonate the Maximum Bombs</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>223. Rectangle Area</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2481. Minimum Cuts to Divide a Circle</li> <li>335. Self Crossing</li> <li>469. Convex Polygon</li> <li>478. Generate Random Point in a Circle</li> <li>587. Erect the Fence</li> <li>593. Valid Square</li> <li>812. Largest Triangle Area</li> <li>836. Rectangle Overlap</li> <li>858. Mirror Reflection</li> <li>883. Projection Area of 3D Shapes</li> <li>892. Surface Area of 3D Shapes</li> <li>939. Minimum Area Rectangle</li> <li>963. Minimum Area Rectangle II</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#graph","title":"Graph","text":"<ul> <li>1042. Flower Planting With No Adjacent</li> <li>1059. All Paths from Source Lead to Destination</li> <li>1129. Shortest Path with Alternating Colors</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1136. Parallel Courses</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1192. Critical Connections in a Network</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1245. Tree Diameter</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1319. Number of Operations to Make Network Connected</li> <li>133. Clone Graph</li> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1361. Validate Binary Tree Nodes</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1377. Frog Position After T Seconds</li> <li>1462. Course Schedule IV</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1494. Parallel Courses II</li> <li>1514. Path with Maximum Probability</li> <li>1548. The Most Similar Path in a Graph</li> <li>1557. Minimum Number of Vertices to Reach All Nodes</li> <li>1579. Remove Max Number of Edges to Keep Graph Fully Traversable</li> <li>1584. Min Cost to Connect All Points</li> <li>1591. Strange Printer II</li> <li>1615. Maximal Network Rank</li> <li>1632. Rank Transform of a Matrix</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1719. Number Of Ways To Reconstruct A Tree</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> <li>1728. Cat and Mouse II</li> <li>1761. Minimum Degree of a Connected Trio in a Graph</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1782. Count Pairs Of Nodes</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1791. Find Center of Star Graph</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1928. Minimum Cost to Reach Destination in Time</li> <li>1971. Find if Path Exists in Graph</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>2039. The Time When the Network Becomes Idle</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2050. Parallel Courses III</li> <li>2065. Maximum Path Quality of a Graph</li> <li>207. Course Schedule</li> <li>2076. Process Restricted Friend Requests</li> <li>2077. Paths in Maze That Lead to Same Room</li> <li>2092. Find All People With Secret</li> <li>2093. Minimum Cost to Reach City With Discounts</li> <li>2097. Valid Arrangement of Pairs</li> <li>210. Course Schedule II</li> <li>2101. Detonate the Maximum Bombs</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2203. Minimum Weighted Subgraph With the Required Paths</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2285. Maximum Total Importance of Roads</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2297. Jump Game VIII</li> <li>2307. Check for Contradictions in Equations</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2359. Find Closest Node to Given Two Nodes</li> <li>2360. Longest Cycle in a Graph</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2374. Node With Highest Edge Score</li> <li>2392. Build a Matrix With Conditions</li> <li>2421. Number of Good Paths</li> <li>2467. Most Profitable Path in a Tree</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2508. Add Edges to Make Degrees of All Nodes Even</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>261. Graph Valid Tree</li> <li>269. Alien Dictionary</li> <li>277. Find the Celebrity</li> <li>310. Minimum Height Trees</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>329. Longest Increasing Path in a Matrix</li> <li>332. Reconstruct Itinerary</li> <li>399. Evaluate Division</li> <li>444. Sequence Reconstruction</li> <li>490. The Maze</li> <li>499. The Maze III</li> <li>505. The Maze II</li> <li>547. Number of Provinces</li> <li>631. Design Excel Sum Formula</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>743. Network Delay Time</li> <li>753. Cracking the Safe</li> <li>765. Couples Holding Hands</li> <li>785. Is Graph Bipartite?</li> <li>787. Cheapest Flights Within K Stops</li> <li>797. All Paths From Source to Target</li> <li>802. Find Eventual Safe States</li> <li>834. Sum of Distances in Tree</li> <li>841. Keys and Rooms</li> <li>847. Shortest Path Visiting All Nodes</li> <li>851. Loud and Rich</li> <li>882. Reachable Nodes In Subdivided Graph</li> <li>886. Possible Bipartition</li> <li>913. Cat and Mouse</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>959. Regions Cut By Slashes</li> <li>990. Satisfiability of Equality Equations</li> <li>997. Find the Town Judge</li> </ul>"},{"location":"tags/#greedy","title":"Greedy","text":"<ul> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1007. Minimum Domino Rotations For Equal Row</li> <li>1013. Partition Array Into Three Parts With Equal Sum</li> <li>1024. Video Stitching</li> <li>1029. Two City Scheduling</li> <li>1053. Previous Permutation With One Swap</li> <li>1054. Distant Barcodes</li> <li>1055. Shortest Way to Form String</li> <li>1057. Campus Bikes</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1090. Largest Values From Labels</li> <li>11. Container With Most Water</li> <li>1121. Divide Array Into Increasing Sequences</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1144. Decrease Elements To Make Array Zigzag</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1183. Maximum Number of Ones</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1199. Minimum Time to Build Blocks</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1221. Split a String in Balanced Strings</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1323. Maximum 69 Number</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1328. Break a Palindrome</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1338. Reduce Array Size to The Half</li> <li>134. Gas Station</li> <li>135. Candy</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1363. Largest Multiple of Three</li> <li>1382. Balance a Binary Search Tree</li> <li>1383. Maximum Performance of a Team</li> <li>1386. Cinema Seat Allocation</li> <li>1388. Pizza With 3n Slices</li> <li>1400. Construct K Palindrome Strings</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1405. Longest Happy String</li> <li>1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K</li> <li>1432. Max Difference You Can Get From Changing an Integer</li> <li>1433. Check If a String Can Break Another String</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1488. Avoid Flood in The City</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>1520. Maximum Number of Non-Overlapping Substrings</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1529. Minimum Suffix Flips</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1537. Get the Maximum Score</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1632. Rank Transform of a Matrix</li> <li>1642. Furthest Building You Can Reach</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1663. Smallest String With A Given Numeric Value</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1675. Minimize Deviation in Array</li> <li>1686. Stone Game VI</li> <li>1689. Partitioning Into Minimum Number Of Deci-Binary Numbers</li> <li>1702. Maximum Binary String After Change</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1708. Largest Subarray Length K</li> <li>1710. Maximum Units on a Truck</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1717. Maximum Score From Removing Substrings</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1733. Minimum Number of People to Teach</li> <li>1736. Latest Time by Replacing Hidden Digits</li> <li>1739. Building Boxes</li> <li>1753. Maximum Score From Removing Stones</li> <li>1754. Largest Merge Of Two Strings</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1785. Minimum Elements to Add to Form a Given Sum</li> <li>1788. Maximize the Beauty of the Garden</li> <li>179. Largest Number</li> <li>1792. Maximum Average Pass Ratio</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1798. Maximum Number of Consecutive Values You Can Make</li> <li>1802. Maximum Value at a Given Index in a Bounded Array</li> <li>1824. Minimum Sideway Jumps</li> <li>1827. Minimum Operations to Make the Array Increasing</li> <li>1833. Maximum Ice Cream Bars</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1864. Minimum Number of Swaps to Make the Binary String Alternating</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1881. Maximum Value after Insertion</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1899. Merge Triplets to Form Target Triplet</li> <li>1903. Largest Odd Number in String</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1927. Sum Game</li> <li>1936. Add Minimum Number of Rungs</li> <li>1946. Largest Number After Mutating Substring</li> <li>1953. Maximum Number of Weeks for Which You Can Work</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>1974. Minimum Time to Type Word Using Special Typewriter</li> <li>1975. Maximum Matrix Sum</li> <li>1989. Maximum Number of People That Can Be Caught in Tag</li> <li>1996. The Number of Weak Characters in the Game</li> <li>2007. Find Original Array From Doubled Array</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2027. Minimum Moves to Convert String</li> <li>2029. Stone Game IX</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2078. Two Furthest Houses With Different Colors</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2091. Removing Minimum and Maximum From Array</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>2126. Destroying Asteroids</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2132. Stamping the Grid</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2139. Minimum Moves to Reach Target Score</li> <li>2141. Maximum Running Time of N Computers</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>2182. Construct String With Repeat Limit</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2202. Maximize the Topmost Element After K Moves</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>2214. Minimum Health to Beat Game</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>2224. Minimum Number of Operations to Convert Time</li> <li>2233. Maximum Product After K Increments</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2241. Design an ATM Machine</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>2263. Make Array Non-decreasing or Non-increasing</li> <li>2268. Minimum Number of Keypresses</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>2285. Maximum Total Importance of Roads</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2340. Minimum Adjacent Swaps to Make a Valid Array</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2375. Construct Smallest Number From DI String</li> <li>2383. Minimum Hours of Training to Win a Competition</li> <li>2384. Largest Palindromic Number</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2405. Optimal Partition of String</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>2429. Minimize XOR</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2439. Minimize Maximum of Array</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>2457. Minimum Addition to Make Integer Beautiful</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2498. Frog Jump II</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2528. Maximize the Minimum Powered City</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2542. Maximum Subsequence Score</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2551. Put Marbles in Bags</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2561. Rearranging Fruits</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2578. Split With Minimum Sum</li> <li>277. Find the Celebrity</li> <li>280. Wiggle Sort</li> <li>316. Remove Duplicate Letters</li> <li>321. Create Maximum Number</li> <li>330. Patching Array</li> <li>334. Increasing Triplet Subsequence</li> <li>358. Rearrange String k Distance Apart</li> <li>376. Wiggle Subsequence</li> <li>397. Integer Replacement</li> <li>402. Remove K Digits</li> <li>406. Queue Reconstruction by Height</li> <li>409. Longest Palindrome</li> <li>410. Split Array Largest Sum</li> <li>420. Strong Password Checker</li> <li>435. Non-overlapping Intervals</li> <li>44. Wildcard Matching</li> <li>45. Jump Game II</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>455. Assign Cookies</li> <li>484. Find Permutation</li> <li>502. IPO</li> <li>517. Super Washing Machines</li> <li>527. Word Abbreviation</li> <li>55. Jump Game</li> <li>555. Split Concatenated Strings</li> <li>561. Array Partition</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>605. Can Place Flowers</li> <li>611. Valid Triangle Number</li> <li>621. Task Scheduler</li> <li>624. Maximum Distance in Arrays</li> <li>625. Minimum Factorization</li> <li>630. Course Schedule III</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>646. Maximum Length of Pair Chain</li> <li>649. Dota2 Senate</li> <li>659. Split Array into Consecutive Subsequences</li> <li>670. Maximum Swap</li> <li>678. Valid Parenthesis String</li> <li>680. Valid Palindrome II</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>738. Monotone Increasing Digits</li> <li>757. Set Intersection Size At Least Two</li> <li>763. Partition Labels</li> <li>765. Couples Holding Hands</li> <li>767. Reorganize String</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>781. Rabbits in Forest</li> <li>807. Max Increase to Keep City Skyline</li> <li>826. Most Profit Assigning Work</li> <li>846. Hand of Straights</li> <li>857. Minimum Cost to Hire K Workers</li> <li>860. Lemonade Change</li> <li>861. Score After Flipping Matrix</li> <li>870. Advantage Shuffle</li> <li>871. Minimum Number of Refueling Stops</li> <li>881. Boats to Save People</li> <li>910. Smallest Range II</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>936. Stamping The Sequence</li> <li>942. DI String Match</li> <li>945. Minimum Increment to Make Array Unique</li> <li>948. Bag of Tokens</li> <li>954. Array of Doubled Pairs</li> <li>955. Delete Columns to Make Sorted II</li> <li>969. Pancake Sorting</li> <li>976. Largest Perimeter Triangle</li> <li>984. String Without AAA or BBB</li> <li>991. Broken Calculator</li> </ul>"},{"location":"tags/#hash-function","title":"Hash Function","text":"<ul> <li>1044. Longest Duplicate Substring</li> <li>1062. Longest Repeating Substring</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1316. Distinct Echo Substrings</li> <li>1392. Longest Happy Prefix</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1554. Strings Differ by One Character</li> <li>1698. Number of Distinct Substrings in a String</li> <li>187. Repeated DNA Sequences</li> <li>1923. Longest Common Subpath</li> <li>1948. Delete Duplicate Folders in System</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>214. Shortest Palindrome</li> <li>2156. Find Substring With Given Hash Value</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2223. Sum of Scores of Built Strings</li> <li>2261. K Divisible Elements Subarrays</li> <li>2430. Maximum Deletions on a String</li> <li>535. Encode and Decode TinyURL</li> <li>572. Subtree of Another Tree</li> <li>694. Number of Distinct Islands</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>711. Number of Distinct Islands II</li> <li>718. Maximum Length of Repeated Subarray</li> </ul>"},{"location":"tags/#hash-table","title":"Hash Table","text":"<ul> <li>1. Two Sum</li> <li>1001. Grid Illumination</li> <li>1002. Find Common Characters</li> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1015. Smallest Integer Divisible by K</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1036. Escape a Large Maze</li> <li>1048. Longest String Chain</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>1054. Distant Barcodes</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1079. Letter Tile Possibilities</li> <li>1086. High Five</li> <li>1090. Largest Values From Labels</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1122. Relative Sort Array</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>1124. Longest Well-Performing Interval</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1133. Largest Unique Number</li> <li>1138. Alphabet Board Path</li> <li>1146. Snapshot Array</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1153. String Transforms Into Another String</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1165. Single-Row Keyboard</li> <li>1166. Design File System</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1171. Remove Zero Sum Consecutive Nodes from Linked List</li> <li>1172. Dinner Plate Stacks</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1181. Before and After Puzzle</li> <li>1189. Maximum Number of Balloons</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>12. Integer to Roman</li> <li>1202. Smallest String With Swaps</li> <li>1207. Unique Number of Occurrences</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>1224. Maximum Equal Frequency</li> <li>1244. Design A Leaderboard</li> <li>1248. Count Number of Nice Subarrays</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>126. Word Ladder II</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>127. Word Ladder</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>128. Longest Consecutive Sequence</li> <li>1282. Group the People Given the Group Size They Belong To</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>13. Roman to Integer</li> <li>1311. Get Watched Videos by Your Friends</li> <li>133. Clone Graph</li> <li>1331. Rank Transform of an Array</li> <li>1338. Reduce Array Size to The Half</li> <li>1345. Jump Game IV</li> <li>1346. Check If N and Its Double Exist</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1348. Tweet Counts Per Frequency</li> <li>1357. Apply Discount Every n Orders</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1370. Increasing Decreasing String</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>138. Copy List with Random Pointer</li> <li>1386. Cinema Seat Allocation</li> <li>139. Word Break</li> <li>1394. Find Lucky Integer in an Array</li> <li>1396. Design Underground System</li> <li>1399. Count Largest Group</li> <li>140. Word Break II</li> <li>1400. Construct K Palindrome Strings</li> <li>141. Linked List Cycle</li> <li>1410. HTML Entity Parser</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>142. Linked List Cycle II</li> <li>1426. Counting Elements</li> <li>1429. First Unique Number</li> <li>1436. Destination City</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>146. LRU Cache</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1487. Making File Names Unique</li> <li>1488. Avoid Flood in The City</li> <li>149. Max Points on a Line</li> <li>1490. Clone N-ary Tree</li> <li>1496. Path Crossing</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1500. Design a File Sharing System</li> <li>1506. Find Root of N-Ary Tree</li> <li>1512. Number of Good Pairs</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1540. Can Convert String in K Moves</li> <li>1542. Find Longest Awesome Substring</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1554. Strings Differ by One Character</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1590. Make Sum Divisible by P</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>160. Intersection of Two Linked Lists</li> <li>1600. Throne Inheritance</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1624. Largest Substring Between Two Equal Characters</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1640. Check Array Formation Through Concatenation</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1656. Design an Ordered Stream</li> <li>1657. Determine if Two Strings Are Close</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>166. Fraction to Recurring Decimal</li> <li>1660. Correct a Binary Tree</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1679. Max Number of K-Sum Pairs</li> <li>1684. Count the Number of Consistent Strings</li> <li>169. Majority Element</li> <li>1695. Maximum Erasure Value</li> <li>17. Letter Combinations of a Phone Number</li> <li>170. Two Sum III - Data structure design</li> <li>1711. Count Good Meals</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1726. Tuple with Same Product</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1740. Find Distance in a Binary Tree</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1743. Restore the Array From Adjacent Pairs</li> <li>1748. Sum of Unique Elements</li> <li>1756. Design Most Recently Used Queue</li> <li>1763. Longest Nice Substring</li> <li>1772. Sort Features by Popularity</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1796. Second Largest Digit in a String</li> <li>1797. Design Authentication Manager</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1805. Number of Different Integers in a String</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1814. Count Nice Pairs in an Array</li> <li>1817. Finding the Users Active Minutes</li> <li>1832. Check if the Sentence Is Pangram</li> <li>1836. Remove Duplicates From an Unsorted Linked List</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>187. Repeated DNA Sequences</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1906. Minimum Absolute Difference Queries</li> <li>1912. Design Movie Rental System</li> <li>1915. Number of Wonderful Substrings</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1935. Maximum Number of Words You Can Type</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>1948. Delete Duplicate Folders in System</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1993. Operations on Tree</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2007. Find Original Array From Doubled Array</li> <li>2013. Detect Squares</li> <li>202. Happy Number</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2032. Two Out of Three</li> <li>2034. Stock Price Fluctuation</li> <li>2043. Simple Bank System</li> <li>205. Isomorphic Strings</li> <li>2053. Kth Distinct String in an Array</li> <li>2062. Count Vowel Substrings of a String</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2080. Range Frequency Queries</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2085. Count Common Words With One Occurrence</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2103. Rings and Rods</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2121. Intervals Between Identical Elements</li> <li>2122. Recover the Original Array</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2166. Design Bitset</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>217. Contains Duplicate</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>219. Contains Duplicate II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2215. Find the Difference of Two Arrays</li> <li>2225. Find Players With Zero or One Losses</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2248. Intersection of Multiple Arrays</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2254. Design Video Sharing Platform</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2261. K Divisible Elements Subarrays</li> <li>2262. Total Appeal of A String</li> <li>2266. Count Number of Texts</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2287. Rearrange Characters to Make Target String</li> <li>229. Majority Element II</li> <li>2295. Replace Elements in an Array</li> <li>2301. Match Substring After Replacement</li> <li>2306. Naming a Company</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>2325. Decode the Message</li> <li>2336. Smallest Number in Infinite Set</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2347. Best Poker Hand</li> <li>2349. Design a Number Container System</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2351. First Letter to Appear Twice</li> <li>2352. Equal Row and Column Pairs</li> <li>2353. Design a Food Rating System</li> <li>2354. Number of Excellent Pairs</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2363. Merge Similar Items</li> <li>2364. Count Number of Bad Pairs</li> <li>2365. Task Scheduler II</li> <li>2367. Number of Arithmetic Triplets</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2370. Longest Ideal Subsequence</li> <li>2374. Node With Highest Edge Score</li> <li>2384. Largest Palindromic Number</li> <li>2395. Find Subarrays With Equal Sum</li> <li>2399. Check Distances Between Same Letters</li> <li>2404. Most Frequent Even Element</li> <li>2405. Optimal Partition of String</li> <li>2408. Design SQL</li> <li>2418. Sort the People</li> <li>242. Valid Anagram</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>244. Shortest Word Distance II</li> <li>2441. Largest Positive Integer That Exists With Its Negative</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2451. Odd String Difference</li> <li>2453. Destroy Sequential Targets</li> <li>2456. Most Popular Video Creator</li> <li>246. Strobogrammatic Number</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2465. Number of Distinct Averages</li> <li>2475. Number of Unequal Triplets in Array</li> <li>2488. Count Subarrays With Median K</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>249. Group Shifted Strings</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>2501. Longest Square Streak in an Array</li> <li>2502. Design Memory Allocator</li> <li>2506. Count Pairs Of Similar Strings</li> <li>2508. Add Edges to Make Degrees of All Nodes Even</li> <li>2512. Reward Top K Students</li> <li>2514. Count Anagrams</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2537. Count the Number of Good Subarrays</li> <li>2539. Count the Number of Good Subsequences</li> <li>2540. Minimum Common Value</li> <li>2547. Minimum Cost to Split an Array</li> <li>2549. Count Distinct Numbers on Board</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2561. Rearranging Fruits</li> <li>2564. Substring XOR Queries</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2584. Split the Array to Make Coprime Products</li> <li>264. Ugly Number II</li> <li>266. Palindrome Permutation</li> <li>267. Palindrome Permutation II</li> <li>268. Missing Number</li> <li>288. Unique Word Abbreviation</li> <li>290. Word Pattern</li> <li>291. Word Pattern II</li> <li>299. Bulls and Cows</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>311. Sparse Matrix Multiplication</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>336. Palindrome Pairs</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>347. Top K Frequent Elements</li> <li>348. Design Tic-Tac-Toe</li> <li>349. Intersection of Two Arrays</li> <li>350. Intersection of Two Arrays II</li> <li>355. Design Twitter</li> <li>356. Line Reflection</li> <li>358. Rearrange String k Distance Apart</li> <li>359. Logger Rate Limiter</li> <li>36. Valid Sudoku</li> <li>362. Design Hit Counter</li> <li>37. Sudoku Solver</li> <li>379. Design Phone Directory</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>383. Ransom Note</li> <li>387. First Unique Character in a String</li> <li>389. Find the Difference</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>398. Random Pick Index</li> <li>409. Longest Palindrome</li> <li>41. First Missing Positive</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>423. Reconstruct Original Digits from English</li> <li>424. Longest Repeating Character Replacement</li> <li>432. All O`one Data Structure</li> <li>433. Minimum Genetic Mutation</li> <li>438. Find All Anagrams in a String</li> <li>442. Find All Duplicates in an Array</li> <li>447. Number of Boomerangs</li> <li>448. Find All Numbers Disappeared in an Array</li> <li>451. Sort Characters By Frequency</li> <li>454. 4Sum II</li> <li>457. Circular Array Loop</li> <li>460. LFU Cache</li> <li>480. Sliding Window Median</li> <li>49. Group Anagrams</li> <li>491. Non-decreasing Subsequences</li> <li>496. Next Greater Element I</li> <li>500. Keyboard Row</li> <li>508. Most Frequent Subtree Sum</li> <li>519. Random Flip Matrix</li> <li>522. Longest Uncommon Subsequence II</li> <li>523. Continuous Subarray Sum</li> <li>525. Contiguous Array</li> <li>531. Lonely Pixel I</li> <li>532. K-diff Pairs in an Array</li> <li>533. Lonely Pixel II</li> <li>535. Encode and Decode TinyURL</li> <li>554. Brick Wall</li> <li>560. Subarray Sum Equals K</li> <li>567. Permutation in String</li> <li>575. Distribute Candies</li> <li>582. Kill Process</li> <li>588. Design In-Memory File System</li> <li>594. Longest Harmonious Subsequence</li> <li>599. Minimum Index Sum of Two Lists</li> <li>604. Design Compressed String Iterator</li> <li>609. Find Duplicate File in System</li> <li>616. Add Bold Tag in String</li> <li>621. Task Scheduler</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>635. Design Log Storage System</li> <li>645. Set Mismatch</li> <li>648. Replace Words</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>659. Split Array into Consecutive Subsequences</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>690. Employee Importance</li> <li>692. Top K Frequent Words</li> <li>694. Number of Distinct Islands</li> <li>697. Degree of an Array</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>710. Random Pick with Blacklist</li> <li>711. Number of Distinct Islands II</li> <li>720. Longest Word in Dictionary</li> <li>726. Number of Atoms</li> <li>73. Set Matrix Zeroes</li> <li>734. Sentence Similarity</li> <li>736. Parse Lisp Expression</li> <li>737. Sentence Similarity II</li> <li>740. Delete and Earn</li> <li>745. Prefix and Suffix Search</li> <li>748. Shortest Completing Word</li> <li>752. Open the Lock</li> <li>758. Bold Words in String</li> <li>76. Minimum Window Substring</li> <li>760. Find Anagram Mappings</li> <li>763. Partition Labels</li> <li>767. Reorganize String</li> <li>770. Basic Calculator IV</li> <li>771. Jewels and Stones</li> <li>781. Rabbits in Forest</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>804. Unique Morse Code Words</li> <li>811. Subdomain Visit Count</li> <li>815. Bus Routes</li> <li>817. Linked List Components</li> <li>819. Most Common Word</li> <li>820. Short Encoding of Words</li> <li>822. Card Flipping Game</li> <li>823. Binary Trees With Factors</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>846. Hand of Straights</li> <li>859. Buddy Strings</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>884. Uncommon Words from Two Sentences</li> <li>888. Fair Candy Swap</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>890. Find and Replace Pattern</li> <li>893. Groups of Special-Equivalent Strings</li> <li>895. Maximum Frequency Stack</li> <li>904. Fruit Into Baskets</li> <li>911. Online Election</li> <li>914. X of a Kind in a Deck of Cards</li> <li>916. Word Subsets</li> <li>923. 3Sum With Multiplicity</li> <li>929. Unique Email Addresses</li> <li>930. Binary Subarrays With Sum</li> <li>939. Minimum Area Rectangle</li> <li>953. Verifying an Alien Dictionary</li> <li>954. Array of Doubled Pairs</li> <li>957. Prison Cells After N Days</li> <li>961. N-Repeated Element in Size 2N Array</li> <li>966. Vowel Spellchecker</li> <li>970. Powerful Integers</li> <li>974. Subarray Sums Divisible by K</li> <li>981. Time Based Key-Value Store</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>992. Subarrays with K Different Integers</li> <li>997. Find the Town Judge</li> </ul>"},{"location":"tags/#heap-priority-queue","title":"Heap (Priority Queue)","text":"<ul> <li>1046. Last Stone Weight</li> <li>1054. Distant Barcodes</li> <li>1094. Car Pooling</li> <li>1102. Path With Maximum Minimum Value</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1172. Dinner Plate Stacks</li> <li>1183. Maximum Number of Ones</li> <li>1199. Minimum Time to Build Blocks</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1354. Construct Target Array With Multiple Sums</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1383. Maximum Performance of a Team</li> <li>1388. Pizza With 3n Slices</li> <li>1405. Longest Happy String</li> <li>1424. Diagonal Traverse II</li> <li>1425. Constrained Subsequence Sum</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1488. Avoid Flood in The City</li> <li>1499. Max Value of Equation</li> <li>1500. Design a File Sharing System</li> <li>1514. Path with Maximum Probability</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1631. Path With Minimum Effort</li> <li>1642. Furthest Building You Can Reach</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1675. Minimize Deviation in Array</li> <li>1686. Stone Game VI</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1696. Jump Game VI</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1753. Maximum Score From Removing Stones</li> <li>1776. Car Fleet II</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1792. Maximum Average Pass Ratio</li> <li>1801. Number of Orders in the Backlog</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1825. Finding MK Average</li> <li>1834. Single-Threaded CPU</li> <li>1845. Seat Reservation Manager</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1882. Process Tasks Using Servers</li> <li>1912. Design Movie Rental System</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>1962. Remove Stones to Minimize the Total</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2034. Stock Price Fluctuation</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>215. Kth Largest Element in an Array</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>218. The Skyline Problem</li> <li>2182. Construct String With Repeat Limit</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>2231. Largest Number After Digit Swaps by Parity</li> <li>2233. Maximum Product After K Increments</li> <li>2285. Maximum Total Importance of Roads</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>23. Merge k Sorted Lists</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2336. Smallest Number in Infinite Set</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2349. Design a Number Container System</li> <li>2353. Design a Food Rating System</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2386. Find the K-Sum of an Array</li> <li>239. Sliding Window Maximum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2402. Meeting Rooms III</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2424. Longest Uploaded Prefix</li> <li>2454. Next Greater Element IV</li> <li>2456. Most Popular Video Creator</li> <li>2462. Total Cost to Hire K Workers</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2512. Reward Top K Students</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2532. Time to Cross a Bridge</li> <li>2542. Maximum Subsequence Score</li> <li>2551. Put Marbles in Bags</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>264. Ugly Number II</li> <li>272. Closest Binary Search Tree Value II</li> <li>295. Find Median from Data Stream</li> <li>347. Top K Frequent Elements</li> <li>355. Design Twitter</li> <li>358. Rearrange String k Distance Apart</li> <li>373. Find K Pairs with Smallest Sums</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>407. Trapping Rain Water II</li> <li>420. Strong Password Checker</li> <li>451. Sort Characters By Frequency</li> <li>480. Sliding Window Median</li> <li>499. The Maze III</li> <li>502. IPO</li> <li>505. The Maze II</li> <li>506. Relative Ranks</li> <li>621. Task Scheduler</li> <li>630. Course Schedule III</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>658. Find K Closest Elements</li> <li>659. Split Array into Consecutive Subsequences</li> <li>675. Cut Off Trees for Golf Event</li> <li>692. Top K Frequent Words</li> <li>703. Kth Largest Element in a Stream</li> <li>743. Network Delay Time</li> <li>759. Employee Free Time</li> <li>767. Reorganize String</li> <li>778. Swim in Rising Water</li> <li>786. K-th Smallest Prime Fraction</li> <li>787. Cheapest Flights Within K Stops</li> <li>855. Exam Room</li> <li>857. Minimum Cost to Hire K Workers</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>871. Minimum Number of Refueling Stops</li> <li>882. Reachable Nodes In Subdivided Graph</li> <li>912. Sort an Array</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#interactive","title":"Interactive","text":"<ul> <li>1095. Find in Mountain Array</li> <li>1236. Web Crawler</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1274. Number of Ships in a Rectangle</li> <li>1428. Leftmost Column with at Least a One</li> <li>1533. Find the Index of the Large Integer</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>157. Read N Characters Given Read4</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>277. Find the Celebrity</li> <li>278. First Bad Version</li> <li>374. Guess Number Higher or Lower</li> <li>489. Robot Room Cleaner</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>843. Guess the Word</li> </ul>"},{"location":"tags/#iterator","title":"Iterator","text":"<ul> <li>1286. Iterator for Combination</li> <li>1586. Binary Search Tree Iterator II</li> <li>173. Binary Search Tree Iterator</li> <li>251. Flatten 2D Vector</li> <li>281. Zigzag Iterator</li> <li>284. Peeking Iterator</li> <li>341. Flatten Nested List Iterator</li> <li>604. Design Compressed String Iterator</li> <li>900. RLE Iterator</li> </ul>"},{"location":"tags/#line-sweep","title":"Line Sweep","text":"<ul> <li>1851. Minimum Interval to Include Each Query</li> <li>218. The Skyline Problem</li> <li>391. Perfect Rectangle</li> <li>850. Rectangle Area II</li> </ul>"},{"location":"tags/#linked-list","title":"Linked List","text":"<ul> <li>1019. Next Greater Node In Linked List</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>114. Flatten Binary Tree to Linked List</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1171. Remove Zero Sum Consecutive Nodes from Linked List</li> <li>1206. Design Skiplist</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1290. Convert Binary Number in a Linked List to Integer</li> <li>1367. Linked List in Binary Tree</li> <li>138. Copy List with Random Pointer</li> <li>141. Linked List Cycle</li> <li>142. Linked List Cycle II</li> <li>143. Reorder List</li> <li>146. LRU Cache</li> <li>147. Insertion Sort List</li> <li>1472. Design Browser History</li> <li>1474. Delete N Nodes After M Nodes of a Linked List</li> <li>148. Sort List</li> <li>160. Intersection of Two Linked Lists</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>1669. Merge In Between Linked Lists</li> <li>1670. Design Front Middle Back Queue</li> <li>1721. Swapping Nodes in a Linked List</li> <li>1836. Remove Duplicates From an Unsorted Linked List</li> <li>19. Remove Nth Node From End of List</li> <li>2. Add Two Numbers</li> <li>203. Remove Linked List Elements</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2058. Find the Minimum and Maximum Number of Nodes Between Critical Points</li> <li>206. Reverse Linked List</li> <li>2074. Reverse Nodes in Even Length Groups</li> <li>2095. Delete the Middle Node of a Linked List</li> <li>21. Merge Two Sorted Lists</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2181. Merge Nodes in Between Zeros</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>2296. Design a Text Editor</li> <li>23. Merge k Sorted Lists</li> <li>2326. Spiral Matrix IV</li> <li>234. Palindrome Linked List</li> <li>237. Delete Node in a Linked List</li> <li>24. Swap Nodes in Pairs</li> <li>2487. Remove Nodes From Linked List</li> <li>25. Reverse Nodes in k-Group</li> <li>328. Odd Even Linked List</li> <li>355. Design Twitter</li> <li>369. Plus One Linked List</li> <li>379. Design Phone Directory</li> <li>382. Linked List Random Node</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>432. All O`one Data Structure</li> <li>445. Add Two Numbers II</li> <li>460. LFU Cache</li> <li>61. Rotate List</li> <li>622. Design Circular Queue</li> <li>641. Design Circular Deque</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>707. Design Linked List</li> <li>708. Insert into a Sorted Circular Linked List</li> <li>716. Max Stack</li> <li>725. Split Linked List in Parts</li> <li>817. Linked List Components</li> <li>82. Remove Duplicates from Sorted List II</li> <li>83. Remove Duplicates from Sorted List</li> <li>86. Partition List</li> <li>876. Middle of the Linked List</li> <li>92. Reverse Linked List II</li> </ul>"},{"location":"tags/#math","title":"Math","text":"<ul> <li>1006. Clumsy Factorial</li> <li>1012. Numbers With Repeated Digits</li> <li>1015. Smallest Integer Divisible by K</li> <li>1017. Convert to Base -2</li> <li>1025. Divisor Game</li> <li>1030. Matrix Cells in Distance Order</li> <li>1033. Moving Stones Until Consecutive</li> <li>1037. Valid Boomerang</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1041. Robot Bounded In Circle</li> <li>1056. Confusing Number</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1067. Digit Count in Range</li> <li>1071. Greatest Common Divisor of Strings</li> <li>1073. Adding Two Negabinary Numbers</li> <li>1085. Sum of Digits in the Minimum Number</li> <li>1088. Confusing Number II</li> <li>1093. Statistics from a Large Sample</li> <li>1103. Distribute Candies to People</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>1118. Number of Days in a Month</li> <li>1131. Maximum of Absolute Value Expression</li> <li>1134. Armstrong Number</li> <li>1137. N-th Tribonacci Number</li> <li>1140. Stone Game II</li> <li>1154. Day of the Year</li> <li>1175. Prime Arrangements</li> <li>1180. Count Substrings with Only One Distinct Letter</li> <li>1185. Day of the Week</li> <li>1199. Minimum Time to Build Blocks</li> <li>12. Integer to Roman</li> <li>1201. Ugly Number III</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1228. Missing Number In Arithmetic Progression</li> <li>1230. Toss Strange Coins</li> <li>1232. Check If It Is a Straight Line</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1248. Count Number of Nice Subarrays</li> <li>1250. Check If It Is a Good Array</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1256. Encode Number</li> <li>1259. Handshakes That Don't Cross</li> <li>1266. Minimum Time Visiting All Points</li> <li>1271. Hexspeak</li> <li>1276. Number of Burgers with No Waste of Ingredients</li> <li>1281. Subtract the Product and Sum of Digits of an Integer</li> <li>1290. Convert Binary Number in a Linked List to Integer</li> <li>13. Roman to Integer</li> <li>1304. Find N Unique Integers Sum up to Zero</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1317. Convert Integer to the Sum of Two No-Zero Integers</li> <li>1323. Maximum 69 Number</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1342. Number of Steps to Reduce a Number to Zero</li> <li>1344. Angle Between Hands of a Clock</li> <li>1352. Product of the Last K Numbers</li> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>1360. Number of Days Between Two Dates</li> <li>1362. Closest Divisors</li> <li>1390. Four Divisors</li> <li>1399. Count Largest Group</li> <li>1401. Circle and Rectangle Overlapping</li> <li>1406. Stone Game III</li> <li>1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K</li> <li>1427. Perform String Shifts</li> <li>1432. Max Difference You Can Get From Changing an Integer</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1447. Simplified Fractions</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1478. Allocate Mailboxes</li> <li>1486. XOR Operation in an Array</li> <li>149. Max Points on a Line</li> <li>1492. The kth Factor of n</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1510. Stone Game IV</li> <li>1512. Number of Good Pairs</li> <li>1513. Number of Substrings With Only 1s</li> <li>1515. Best Position for a Service Centre</li> <li>1518. Water Bottles</li> <li>1523. Count Odd Numbers in an Interval Range</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>1551. Minimum Operations to Make Array Equal</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1563. Stone Game V</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1573. Number of Ways to Split a String</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1610. Maximum Number of Visible Points</li> <li>1621. Number of Sets of K Non-Overlapping Line Segments</li> <li>1622. Fancy Sequence</li> <li>1627. Graph Connectivity With Threshold</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>1641. Count Sorted Vowel Strings</li> <li>1643. Kth Smallest Instructions</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>166. Fraction to Recurring Decimal</li> <li>168. Excel Sheet Column Title</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1686. Stone Game VI</li> <li>1688. Count of Matches in Tournament</li> <li>1690. Stone Game VII</li> <li>171. Excel Sheet Column Number</li> <li>1716. Calculate Money in Leetcode Bank</li> <li>172. Factorial Trailing Zeroes</li> <li>1728. Cat and Mouse II</li> <li>1735. Count Ways to Make Array With Product</li> <li>1739. Building Boxes</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1753. Maximum Score From Removing Stones</li> <li>1759. Count Number of Homogenous Substrings</li> <li>1766. Tree of Coprimes</li> <li>1776. Car Fleet II</li> <li>1780. Check if Number is a Sum of Powers of Three</li> <li>1799. Maximize Score After N Operations</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1808. Maximize Number of Nice Divisors</li> <li>1812. Determine Color of a Chessboard Square</li> <li>1814. Count Nice Pairs in an Array</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1822. Sign of the Product of an Array</li> <li>1823. Find the Winner of the Circular Game</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1837. Sum of Digits in Base K</li> <li>1840. Maximum Building Height</li> <li>1862. Sum of Floored Pairs</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1872. Stone Game VIII</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1884. Egg Drop With 2 Eggs and N Floors</li> <li>189. Rotate Array</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1903. Largest Odd Number in String</li> <li>1904. The Number of Full Rounds You Have Played</li> <li>1908. Game of Nim</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1922. Count Good Numbers</li> <li>1924. Erect the Fence II</li> <li>1925. Count Square Sum Triples</li> <li>1927. Sum Game</li> <li>1952. Three Divisors</li> <li>1954. Minimum Garden Perimeter to Collect Enough Apples</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>1994. The Number of Good Subsets</li> <li>1998. GCD Sort of an Array</li> <li>1999. Smallest Greater Multiple Made of Two Digits</li> <li>2. Add Two Numbers</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2019. The Score of Students Solving Math Expression</li> <li>202. Happy Number</li> <li>2028. Find Missing Observations</li> <li>2029. Stone Game IX</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>204. Count Primes</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2063. Vowels of All Substrings</li> <li>2081. Sum of k-Mirror Numbers</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2101. Detonate the Maximum Bombs</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>2117. Abbreviating the Product of a Range</li> <li>2119. A Number After a Double Reversal</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2139. Minimum Moves to Reach Target Score</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2162. Minimum Cost to Set Cooking Time</li> <li>2165. Smallest Value of the Rearranged Number</li> <li>2169. Count Operations to Obtain Zero</li> <li>2177. Find Three Consecutive Integers That Sum to a Given Number</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>2180. Count Integers With Even Digit Sum</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2189. Number of Ways to Build House of Cards</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2198. Number of Single Divisor Triplets</li> <li>2217. Find Palindrome With Fixed Length</li> <li>2221. Find Triangular Sum of an Array</li> <li>223. Rectangle Area</li> <li>2235. Add Two Integers</li> <li>224. Basic Calculator</li> <li>2240. Number of Ways to Buy Pens and Pencils</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>2266. Count Number of Texts</li> <li>2269. Find the K-Beauty of a Number</li> <li>227. Basic Calculator II</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>231. Power of Two</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2317. Maximum XOR After Operations</li> <li>233. Number of Digit One</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2348. Number of Zero-Filled Subarrays</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2376. Count Special Integers</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2396. Strictly Palindromic Number</li> <li>2400. Number of Ways to Reach a Position After Exactly k Steps</li> <li>2409. Count Days Spent Together</li> <li>241. Different Ways to Add Parentheses</li> <li>2413. Smallest Even Multiple</li> <li>2417. Closest Fair Integer</li> <li>2427. Number of Common Factors</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2440. Create Components With Same Value</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2443. Sum of Number and Its Reverse</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2450. Number of Distinct Binary Strings After Applying Operations</li> <li>2451. Odd String Difference</li> <li>2455. Average Value of Even Numbers That Are Divisible by Three</li> <li>2457. Minimum Addition to Make Integer Beautiful</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2469. Convert the Temperature</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2481. Minimum Cuts to Divide a Circle</li> <li>2485. Find the Pivot Integer</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2507. Smallest Value After Replacing With Sum of Prime Factors</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2514. Count Anagrams</li> <li>2520. Count the Digits That Divide a Number</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2523. Closest Prime Numbers in Range</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2525. Categorize Box According to Criteria</li> <li>2527. Find Xor-Beauty of Array</li> <li>2535. Difference Between Element Sum and Digit Sum of an Array</li> <li>2539. Count the Number of Good Subsequences</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2543. Check if Point Is Reachable</li> <li>2544. Alternating Digit Sum</li> <li>2549. Count Distinct Numbers on Board</li> <li>2550. Count Collisions of Monkeys on a Polygon</li> <li>2575. Find the Divisibility Array of a String</li> <li>2578. Split With Minimum Sum</li> <li>2579. Count Total Number of Colored Cells</li> <li>258. Add Digits</li> <li>2582. Pass the Pillow</li> <li>2584. Split the Array to Make Coprime Products</li> <li>263. Ugly Number</li> <li>264. Ugly Number II</li> <li>268. Missing Number</li> <li>273. Integer to English Words</li> <li>279. Perfect Squares</li> <li>282. Expression Add Operators</li> <li>29. Divide Two Integers</li> <li>292. Nim Game</li> <li>294. Flip Game II</li> <li>296. Best Meeting Point</li> <li>313. Super Ugly Number</li> <li>319. Bulb Switcher</li> <li>326. Power of Three</li> <li>335. Self Crossing</li> <li>342. Power of Four</li> <li>343. Integer Break</li> <li>356. Line Reflection</li> <li>357. Count Numbers with Unique Digits</li> <li>360. Sort Transformed Array</li> <li>365. Water and Jug Problem</li> <li>367. Valid Perfect Square</li> <li>368. Largest Divisible Subset</li> <li>369. Plus One Linked List</li> <li>371. Sum of Two Integers</li> <li>372. Super Pow</li> <li>375. Guess Number Higher or Lower II</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>382. Linked List Random Node</li> <li>384. Shuffle an Array</li> <li>390. Elimination Game</li> <li>396. Rotate Function</li> <li>398. Random Pick Index</li> <li>400. Nth Digit</li> <li>405. Convert a Number to Hexadecimal</li> <li>412. Fizz Buzz</li> <li>415. Add Strings</li> <li>423. Reconstruct Original Digits from English</li> <li>43. Multiply Strings</li> <li>441. Arranging Coins</li> <li>445. Add Two Numbers II</li> <li>447. Number of Boomerangs</li> <li>453. Minimum Moves to Equal Array Elements</li> <li>458. Poor Pigs</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>464. Can I Win</li> <li>469. Convex Polygon</li> <li>470. Implement Rand10() Using Rand7()</li> <li>477. Total Hamming Distance</li> <li>478. Generate Random Point in a Circle</li> <li>479. Largest Palindrome Product</li> <li>48. Rotate Image</li> <li>483. Smallest Good Base</li> <li>486. Predict the Winner</li> <li>492. Construct the Rectangle</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>50. Pow(x, n)</li> <li>504. Base 7</li> <li>507. Perfect Number</li> <li>509. Fibonacci Number</li> <li>519. Random Flip Matrix</li> <li>523. Continuous Subarray Sum</li> <li>528. Random Pick with Weight</li> <li>537. Complex Number Multiplication</li> <li>539. Minimum Time Difference</li> <li>553. Optimal Division</li> <li>556. Next Greater Element III</li> <li>564. Find the Closest Palindrome</li> <li>573. Squirrel Simulation</li> <li>587. Erect the Fence</li> <li>592. Fraction Addition and Subtraction</li> <li>593. Valid Square</li> <li>598. Range Addition II</li> <li>60. Permutation Sequence</li> <li>62. Unique Paths</li> <li>625. Minimum Factorization</li> <li>628. Maximum Product of Three Numbers</li> <li>633. Sum of Square Numbers</li> <li>634. Find the Derangement of An Array</li> <li>640. Solve the Equation</li> <li>650. 2 Keys Keyboard</li> <li>651. 4 Keys Keyboard</li> <li>66. Plus One</li> <li>660. Remove 9</li> <li>667. Beautiful Arrangement II</li> <li>668. Kth Smallest Number in Multiplication Table</li> <li>67. Add Binary</li> <li>670. Maximum Swap</li> <li>672. Bulb Switcher II</li> <li>679. 24 Game</li> <li>69. Sqrt(x)</li> <li>7. Reverse Integer</li> <li>70. Climbing Stairs</li> <li>710. Random Pick with Blacklist</li> <li>728. Self Dividing Numbers</li> <li>738. Monotone Increasing Digits</li> <li>750. Number Of Corner Rectangles</li> <li>754. Reach a Number</li> <li>762. Prime Number of Set Bits in Binary Representation</li> <li>770. Basic Calculator IV</li> <li>772. Basic Calculator III</li> <li>775. Global and Local Inversions</li> <li>779. K-th Symbol in Grammar</li> <li>780. Reaching Points</li> <li>781. Rabbits in Forest</li> <li>782. Transform to Chessboard</li> <li>788. Rotated Digits</li> <li>789. Escape The Ghosts</li> <li>793. Preimage Size of Factorial Zeroes Function</li> <li>800. Similar RGB Color</li> <li>805. Split Array With Same Average</li> <li>808. Soup Servings</li> <li>810. Chalkboard XOR Game</li> <li>812. Largest Triangle Area</li> <li>829. Consecutive Numbers Sum</li> <li>836. Rectangle Overlap</li> <li>837. New 21 Game</li> <li>840. Magic Squares In Grid</li> <li>843. Guess the Word</li> <li>858. Mirror Reflection</li> <li>866. Prime Palindrome</li> <li>869. Reordered Power of 2</li> <li>877. Stone Game</li> <li>878. Nth Magical Number</li> <li>883. Projection Area of 3D Shapes</li> <li>887. Super Egg Drop</li> <li>89. Gray Code</li> <li>891. Sum of Subsequence Widths</li> <li>892. Surface Area of 3D Shapes</li> <li>899. Orderly Queue</li> <li>9. Palindrome Number</li> <li>902. Numbers At Most N Given Digit Set</li> <li>906. Super Palindromes</li> <li>908. Smallest Range I</li> <li>910. Smallest Range II</li> <li>913. Cat and Mouse</li> <li>914. X of a Kind in a Deck of Cards</li> <li>920. Number of Music Playlists</li> <li>927. Three Equal Parts</li> <li>932. Beautiful Array</li> <li>939. Minimum Area Rectangle</li> <li>952. Largest Component Size by Common Factor</li> <li>957. Prison Cells After N Days</li> <li>96. Unique Binary Search Trees</li> <li>963. Minimum Area Rectangle II</li> <li>964. Least Operators to Express Number</li> <li>970. Powerful Integers</li> <li>972. Equal Rational Numbers</li> <li>973. K Closest Points to Origin</li> <li>976. Largest Perimeter Triangle</li> <li>989. Add to Array-Form of Integer</li> <li>991. Broken Calculator</li> <li>996. Number of Squareful Arrays</li> </ul>"},{"location":"tags/#matrix","title":"Matrix","text":"<ul> <li>1020. Number of Enclaves</li> <li>1030. Matrix Cells in Distance Order</li> <li>1034. Coloring A Border</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1102. Path With Maximum Minimum Value</li> <li>1139. Largest 1-Bordered Square</li> <li>1162. As Far from Land as Possible</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1219. Path with Maximum Gold</li> <li>1222. Queens That Can Attack the King</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1254. Number of Closed Islands</li> <li>1260. Shift 2D Grid</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1267. Count Servers that Communicate</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1277. Count Square Submatrices with All Ones</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1289. Minimum Falling Path Sum II</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>130. Surrounded Regions</li> <li>1301. Number of Paths with Max Score</li> <li>1314. Matrix Block Sum</li> <li>1329. Sort the Matrix Diagonally</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1349. Maximum Students Taking Exam</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1380. Lucky Numbers in a Matrix</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1428. Leftmost Column with at Least a One</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1463. Cherry Pickup II</li> <li>1476. Subrectangle Queries</li> <li>1504. Count Submatrices With All Ones</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1572. Matrix Diagonal Sum</li> <li>1582. Special Positions in a Binary Matrix</li> <li>1591. Strange Printer II</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1672. Richest Customer Wealth</li> <li>1706. Where Will the Ball Fall</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1728. Cat and Mouse II</li> <li>1730. Shortest Path to Get Food</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>174. Dungeon Game</li> <li>1765. Map of Highest Peak</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1861. Rotating the Box</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1886. Determine Whether Matrix Can Be Obtained By Rotation</li> <li>1895. Largest Magic Square</li> <li>1901. Find a Peak Element II</li> <li>1905. Count Sub Islands</li> <li>1914. Cyclically Rotating a Grid</li> <li>1926. Nearest Exit from Entrance in Maze</li> <li>1958. Check if Move is Legal</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1975. Maximum Matrix Sum</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1992. Find All Groups of Farmland</li> <li>200. Number of Islands</li> <li>2017. Grid Game</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>212. Word Search II</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2132. Stamping the Grid</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>221. Maximal Square</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2258. Escape the Spreading Fire</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2319. Check if Matrix Is X-Matrix</li> <li>2326. Spiral Matrix IV</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2352. Equal Row and Column Pairs</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2373. Largest Local Values in a Matrix</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2392. Build a Matrix With Conditions</li> <li>2397. Maximum Rows Covered by Columns</li> <li>240. Search a 2D Matrix II</li> <li>2428. Maximum Sum of an Hourglass</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2536. Increment Submatrices by One</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>286. Walls and Gates</li> <li>289. Game of Life</li> <li>296. Best Meeting Point</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>304. Range Sum Query 2D - Immutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>311. Sparse Matrix Multiplication</li> <li>317. Shortest Distance from All Buildings</li> <li>329. Longest Increasing Path in a Matrix</li> <li>348. Design Tic-Tac-Toe</li> <li>353. Design Snake Game</li> <li>36. Valid Sudoku</li> <li>361. Bomb Enemy</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>37. Sudoku Solver</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>407. Trapping Rain Water II</li> <li>417. Pacific Atlantic Water Flow</li> <li>419. Battleships in a Board</li> <li>422. Valid Word Square</li> <li>427. Construct Quad Tree</li> <li>463. Island Perimeter</li> <li>48. Rotate Image</li> <li>498. Diagonal Traverse</li> <li>529. Minesweeper</li> <li>531. Lonely Pixel I</li> <li>533. Lonely Pixel II</li> <li>54. Spiral Matrix</li> <li>542. 01 Matrix</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>566. Reshape the Matrix</li> <li>568. Maximum Vacation Days</li> <li>59. Spiral Matrix II</li> <li>63. Unique Paths II</li> <li>64. Minimum Path Sum</li> <li>661. Image Smoother</li> <li>675. Cut Off Trees for Golf Event</li> <li>695. Max Area of Island</li> <li>723. Candy Crush</li> <li>73. Set Matrix Zeroes</li> <li>733. Flood Fill</li> <li>74. Search a 2D Matrix</li> <li>741. Cherry Pickup</li> <li>749. Contain Virus</li> <li>750. Number Of Corner Rectangles</li> <li>766. Toeplitz Matrix</li> <li>773. Sliding Puzzle</li> <li>778. Swim in Rising Water</li> <li>782. Transform to Chessboard</li> <li>79. Word Search</li> <li>803. Bricks Falling When Hit</li> <li>807. Max Increase to Keep City Skyline</li> <li>827. Making A Large Island</li> <li>832. Flipping an Image</li> <li>835. Image Overlap</li> <li>840. Magic Squares In Grid</li> <li>85. Maximal Rectangle</li> <li>861. Score After Flipping Matrix</li> <li>864. Shortest Path to Get All Keys</li> <li>867. Transpose Matrix</li> <li>883. Projection Area of 3D Shapes</li> <li>885. Spiral Matrix III</li> <li>892. Surface Area of 3D Shapes</li> <li>909. Snakes and Ladders</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>931. Minimum Falling Path Sum</li> <li>934. Shortest Bridge</li> <li>980. Unique Paths III</li> <li>994. Rotting Oranges</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"tags/#memoization","title":"Memoization","text":"<ul> <li>1137. N-th Tribonacci Number</li> <li>1387. Sort Integers by The Power Value</li> <li>139. Word Break</li> <li>140. Word Break II</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1553. Minimum Number of Days to Eat N Oranges</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1575. Count All Possible Routes</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1659. Maximize Grid Happiness</li> <li>1728. Cat and Mouse II</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1900. The Earliest and Latest Rounds Where Players Compete</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2312. Selling Pieces of Wood</li> <li>2318. Number of Distinct Roll Sequences</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>241. Different Ways to Add Parentheses</li> <li>294. Flip Game II</li> <li>329. Longest Increasing Path in a Matrix</li> <li>397. Integer Replacement</li> <li>464. Can I Win</li> <li>488. Zuma Game</li> <li>509. Fibonacci Number</li> <li>546. Remove Boxes</li> <li>638. Shopping Offers</li> <li>698. Partition to K Equal Sum Subsets</li> <li>70. Climbing Stairs</li> <li>894. All Possible Full Binary Trees</li> <li>913. Cat and Mouse</li> </ul>"},{"location":"tags/#merge-sort","title":"Merge Sort","text":"<ul> <li>148. Sort List</li> <li>1649. Create Sorted Array through Instructions</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2179. Count Good Triplets in an Array</li> <li>23. Merge k Sorted Lists</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>493. Reverse Pairs</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#minimum-spanning-tree","title":"Minimum Spanning Tree","text":"<ul> <li>1135. Connecting Cities With Minimum Cost</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1584. Min Cost to Connect All Points</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> </ul>"},{"location":"tags/#monotonic-queue","title":"Monotonic Queue","text":"<ul> <li>1425. Constrained Subsequence Sum</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1499. Max Value of Equation</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1696. Jump Game VI</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>239. Sliding Window Maximum</li> <li>2407. Longest Increasing Subsequence II</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>918. Maximum Sum Circular Subarray</li> </ul>"},{"location":"tags/#monotonic-stack","title":"Monotonic Stack","text":"<ul> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1019. Next Greater Node In Linked List</li> <li>1063. Number of Valid Subarrays</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1124. Longest Well-Performing Interval</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>1504. Count Submatrices With All Ones</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1762. Buildings With an Ocean View</li> <li>1776. Car Fleet II</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1856. Maximum Subarray Min-Product</li> <li>1944. Number of Visible People in a Queue</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1996. The Number of Weak Characters in the Game</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2104. Sum of Subarray Ranges</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>2297. Jump Game VIII</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2454. Next Greater Element IV</li> <li>2487. Remove Nodes From Linked List</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>316. Remove Duplicate Letters</li> <li>321. Create Maximum Number</li> <li>402. Remove K Digits</li> <li>42. Trapping Rain Water</li> <li>456. 132 Pattern</li> <li>496. Next Greater Element I</li> <li>503. Next Greater Element II</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>654. Maximum Binary Tree</li> <li>739. Daily Temperatures</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>84. Largest Rectangle in Histogram</li> <li>85. Maximal Rectangle</li> <li>853. Car Fleet</li> <li>901. Online Stock Span</li> <li>907. Sum of Subarray Minimums</li> <li>962. Maximum Width Ramp</li> <li>975. Odd Even Jump</li> </ul>"},{"location":"tags/#number-theory","title":"Number Theory","text":"<ul> <li>1201. Ugly Number III</li> <li>1250. Check If It Is a Good Array</li> <li>1447. Simplified Fractions</li> <li>1735. Count Ways to Make Array With Product</li> <li>1799. Maximize Score After N Operations</li> <li>1819. Number of Different Subsequences GCDs</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>204. Count Primes</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2413. Smallest Even Multiple</li> <li>2427. Number of Common Factors</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2507. Smallest Value After Replacing With Sum of Prime Factors</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2523. Closest Prime Numbers in Range</li> <li>2543. Check if Point Is Reachable</li> <li>258. Add Digits</li> <li>2584. Split the Array to Make Coprime Products</li> <li>858. Mirror Reflection</li> <li>914. X of a Kind in a Deck of Cards</li> </ul>"},{"location":"tags/#ordered-set","title":"Ordered Set","text":"<ul> <li>1348. Tweet Counts Per Frequency</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1649. Create Sorted Array through Instructions</li> <li>1675. Minimize Deviation in Array</li> <li>1756. Design Most Recently Used Queue</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1825. Finding MK Average</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1912. Design Movie Rental System</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>2021. Brightest Position on Street</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2034. Stock Price Fluctuation</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2158. Amount of New Area Painted Each Day</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>220. Contains Duplicate III</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2254. Design Video Sharing Platform</li> <li>2276. Count Integers in Intervals</li> <li>2349. Design a Number Container System</li> <li>2353. Design a Food Rating System</li> <li>2363. Merge Similar Items</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>352. Data Stream as Disjoint Intervals</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>456. 132 Pattern</li> <li>493. Reverse Pairs</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>635. Design Log Storage System</li> <li>683. K Empty Slots</li> <li>699. Falling Squares</li> <li>715. Range Module</li> <li>716. Max Stack</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>850. Rectangle Area II</li> <li>855. Exam Room</li> <li>895. Maximum Frequency Stack</li> <li>975. Odd Even Jump</li> </ul>"},{"location":"tags/#prefix-sum","title":"Prefix Sum","text":"<ul> <li>1004. Max Consecutive Ones III</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1094. Car Pooling</li> <li>1109. Corporate Flight Bookings</li> <li>1124. Longest Well-Performing Interval</li> <li>1177. Can Make Palindrome from Substring</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1310. XOR Queries of a Subarray</li> <li>1314. Matrix Block Sum</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1413. Minimum Value to Get Positive Step by Step Sum</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1480. Running Sum of 1d Array</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>1590. Make Sum Divisible by P</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1732. Find the Highest Altitude</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1744. Can You Eat Your Favorite Candy on Your Favorite Day?</li> <li>1788. Maximize the Beauty of the Garden</li> <li>1829. Maximum XOR for Each Query</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1856. Maximum Subarray Min-Product</li> <li>1862. Sum of Floored Pairs</li> <li>1871. Jump Game VII</li> <li>1872. Stone Game VIII</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1895. Largest Magic Square</li> <li>1915. Number of Wonderful Substrings</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1943. Describe the Painting</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1991. Find the Middle Index in Array</li> <li>2017. Grid Game</li> <li>2021. Brightest Position on Street</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2055. Plates Between Candles</li> <li>2067. Number of Equal Count Substrings</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>209. Minimum Size Subarray Sum</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2121. Intervals Between Identical Elements</li> <li>2132. Stamping the Grid</li> <li>2145. Count the Hidden Sequences</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>2214. Minimum Health to Beat Game</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2219. Maximum Sum Score of Array</li> <li>2222. Number of Ways to Select Buildings</li> <li>2237. Count Positions on Street With Required Brightness</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2256. Minimum Average Difference</li> <li>2270. Number of Ways to Split Array</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>238. Product of Array Except Self</li> <li>2381. Shifting Letters II</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2420. Find All Good Indices</li> <li>2428. Maximum Sum of an Hourglass</li> <li>2438. Range Product Queries of Powers</li> <li>2439. Minimize Maximum of Array</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2483. Minimum Penalty for a Shop</li> <li>2485. Find the Pivot Integer</li> <li>2488. Count Subarrays With Median K</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>2528. Maximize the Minimum Powered City</li> <li>253. Meeting Rooms II</li> <li>2536. Increment Submatrices by One</li> <li>2552. Count Increasing Quadruplets</li> <li>2559. Count Vowel Strings in Ranges</li> <li>2574. Left and Right Sum Differences</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>370. Range Addition</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>523. Continuous Subarray Sum</li> <li>525. Contiguous Array</li> <li>528. Random Pick with Weight</li> <li>548. Split Array with Equal Sum</li> <li>560. Subarray Sum Equals K</li> <li>644. Maximum Average Subarray II</li> <li>724. Find Pivot Index</li> <li>798. Smallest Rotation with Highest Score</li> <li>813. Largest Sum of Averages</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>930. Binary Subarrays With Sum</li> <li>974. Subarray Sums Divisible by K</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> </ul>"},{"location":"tags/#probability-and-statistics","title":"Probability and Statistics","text":"<ul> <li>1093. Statistics from a Large Sample</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1230. Toss Strange Coins</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>470. Implement Rand10() Using Rand7()</li> <li>808. Soup Servings</li> <li>837. New 21 Game</li> </ul>"},{"location":"tags/#queue","title":"Queue","text":"<ul> <li>1352. Product of the Last K Numbers</li> <li>1425. Constrained Subsequence Sum</li> <li>1429. First Unique Number</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1499. Max Value of Equation</li> <li>1670. Design Front Middle Back Queue</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1696. Jump Game VI</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1823. Find the Winner of the Circular Game</li> <li>1825. Finding MK Average</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2073. Time Needed to Buy Tickets</li> <li>225. Implement Stack using Queues</li> <li>232. Implement Queue using Stacks</li> <li>2327. Number of People Aware of a Secret</li> <li>239. Sliding Window Maximum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2407. Longest Increasing Subsequence II</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2528. Maximize the Minimum Powered City</li> <li>2534. Time Taken to Cross the Door</li> <li>281. Zigzag Iterator</li> <li>341. Flatten Nested List Iterator</li> <li>346. Moving Average from Data Stream</li> <li>353. Design Snake Game</li> <li>362. Design Hit Counter</li> <li>379. Design Phone Directory</li> <li>387. First Unique Character in a String</li> <li>622. Design Circular Queue</li> <li>641. Design Circular Deque</li> <li>649. Dota2 Senate</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>918. Maximum Sum Circular Subarray</li> <li>933. Number of Recent Calls</li> <li>936. Stamping The Sequence</li> <li>950. Reveal Cards In Increasing Order</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> </ul>"},{"location":"tags/#quickselect","title":"Quickselect","text":"<ul> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>215. Kth Largest Element in an Array</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>324. Wiggle Sort II</li> <li>347. Top K Frequent Elements</li> <li>973. K Closest Points to Origin</li> </ul>"},{"location":"tags/#radix-sort","title":"Radix Sort","text":"<ul> <li>164. Maximum Gap</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>912. Sort an Array</li> </ul>"},{"location":"tags/#randomized","title":"Randomized","text":"<ul> <li>1515. Best Position for a Service Centre</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>382. Linked List Random Node</li> <li>384. Shuffle an Array</li> <li>398. Random Pick Index</li> <li>470. Implement Rand10() Using Rand7()</li> <li>478. Generate Random Point in a Circle</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>519. Random Flip Matrix</li> <li>528. Random Pick with Weight</li> <li>710. Random Pick with Blacklist</li> </ul>"},{"location":"tags/#recursion","title":"Recursion","text":"<ul> <li>10. Regular Expression Matching</li> <li>1106. Parsing A Boolean Expression</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>143. Reorder List</li> <li>1545. Find Kth Bit in Nth Binary String</li> <li>1808. Maximize Number of Nice Divisors</li> <li>1823. Find the Winner of the Circular Game</li> <li>1922. Count Good Numbers</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>2. Add Two Numbers</li> <li>203. Remove Linked List Elements</li> <li>206. Reverse Linked List</li> <li>21. Merge Two Sorted Lists</li> <li>2212. Maximum Points in an Archery Competition</li> <li>224. Basic Calculator</li> <li>231. Power of Two</li> <li>233. Number of Digit One</li> <li>234. Palindrome Linked List</li> <li>24. Swap Nodes in Pairs</li> <li>241. Different Ways to Add Parentheses</li> <li>247. Strobogrammatic Number II</li> <li>248. Strobogrammatic Number III</li> <li>2487. Remove Nodes From Linked List</li> <li>25. Reverse Nodes in k-Group</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>2550. Count Collisions of Monkeys on a Polygon</li> <li>273. Integer to English Words</li> <li>326. Power of Three</li> <li>342. Power of Four</li> <li>390. Elimination Game</li> <li>394. Decode String</li> <li>439. Ternary Expression Parser</li> <li>44. Wildcard Matching</li> <li>486. Predict the Winner</li> <li>50. Pow(x, n)</li> <li>509. Fibonacci Number</li> <li>544. Output Contest Matches</li> <li>60. Permutation Sequence</li> <li>736. Parse Lisp Expression</li> <li>761. Special Binary String</li> <li>770. Basic Calculator IV</li> <li>772. Basic Calculator III</li> <li>776. Split BST</li> <li>779. K-th Symbol in Grammar</li> <li>894. All Possible Full Binary Trees</li> </ul>"},{"location":"tags/#rejection-sampling","title":"Rejection Sampling","text":"<ul> <li>470. Implement Rand10() Using Rand7()</li> <li>478. Generate Random Point in a Circle</li> </ul>"},{"location":"tags/#reservoir-sampling","title":"Reservoir Sampling","text":"<ul> <li>382. Linked List Random Node</li> <li>398. Random Pick Index</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>519. Random Flip Matrix</li> </ul>"},{"location":"tags/#rolling-hash","title":"Rolling Hash","text":"<ul> <li>1044. Longest Duplicate Substring</li> <li>1062. Longest Repeating Substring</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1316. Distinct Echo Substrings</li> <li>1392. Longest Happy Prefix</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1554. Strings Differ by One Character</li> <li>1698. Number of Distinct Substrings in a String</li> <li>187. Repeated DNA Sequences</li> <li>1923. Longest Common Subpath</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>214. Shortest Palindrome</li> <li>2156. Find Substring With Given Hash Value</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2223. Sum of Scores of Built Strings</li> <li>2261. K Divisible Elements Subarrays</li> <li>2430. Maximum Deletions on a String</li> <li>718. Maximum Length of Repeated Subarray</li> </ul>"},{"location":"tags/#segment-tree","title":"Segment Tree","text":"<ul> <li>1157. Online Majority Element In Subarray</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1622. Fancy Sequence</li> <li>1649. Create Sorted Array through Instructions</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2080. Range Frequency Queries</li> <li>2158. Amount of New Area Painted Each Day</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2276. Count Integers in Intervals</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2424. Longest Uploaded Prefix</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2519. Count the Number of K-Big Indices</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>315. Count of Smaller Numbers After Self</li> <li>327. Count of Range Sum</li> <li>406. Queue Reconstruction by Height</li> <li>493. Reverse Pairs</li> <li>673. Number of Longest Increasing Subsequence</li> <li>699. Falling Squares</li> <li>715. Range Module</li> <li>729. My Calendar I</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>850. Rectangle Area II</li> </ul>"},{"location":"tags/#shell","title":"Shell","text":"<ul> <li>192. Word Frequency</li> <li>193. Valid Phone Numbers</li> <li>194. Transpose File</li> <li>195. Tenth Line</li> </ul>"},{"location":"tags/#shortest-path","title":"Shortest Path","text":"<ul> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1514. Path with Maximum Probability</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2093. Minimum Cost to Reach City With Discounts</li> <li>2203. Minimum Weighted Subgraph With the Required Paths</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2297. Jump Game VIII</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>399. Evaluate Division</li> <li>499. The Maze III</li> <li>505. The Maze II</li> <li>743. Network Delay Time</li> <li>787. Cheapest Flights Within K Stops</li> <li>882. Reachable Nodes In Subdivided Graph</li> </ul>"},{"location":"tags/#simulation","title":"Simulation","text":"<ul> <li>1006. Clumsy Factorial</li> <li>1041. Robot Bounded In Circle</li> <li>1094. Car Pooling</li> <li>1103. Distribute Candies to People</li> <li>1222. Queens That Can Attack the King</li> <li>1243. Array Transformation</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1260. Shift 2D Grid</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1324. Print Words Vertically</li> <li>1389. Create Target Array in the Given Order</li> <li>1409. Queries on a Permutation With Key</li> <li>1441. Build an Array With Stack Operations</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1518. Water Bottles</li> <li>1535. Find the Winner of an Array Game</li> <li>1560. Most Visited Sector in  a Circular Track</li> <li>1562. Find Latest Group of Size M</li> <li>157. Read N Characters Given Read4</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1583. Count Unhappy Friends</li> <li>1599. Maximum Profit of Operating a Centennial Wheel</li> <li>1603. Design Parking System</li> <li>1646. Get Maximum in Generated Array</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1688. Count of Matches in Tournament</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1701. Average Waiting Time</li> <li>1706. Where Will the Ball Fall</li> <li>1801. Number of Orders in the Backlog</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1823. Find the Winner of the Circular Game</li> <li>1860. Incremental Memory Leak</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1914. Cyclically Rotating a Grid</li> <li>1920. Build Array from Permutation</li> <li>1945. Sum of Digits of String After Convert</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2028. Find Missing Observations</li> <li>2043. Simple Bank System</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2069. Walking Robot Simulation II</li> <li>2073. Time Needed to Buy Tickets</li> <li>2075. Decode the Slanted Ciphertext</li> <li>2105. Watering Plants II</li> <li>2109. Adding Spaces to a String</li> <li>2120. Execution of All Suffix Instructions Staying in a Grid</li> <li>2138. Divide a String Into Groups of Size k</li> <li>2149. Rearrange Array Elements by Sign</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2161. Partition Array According to Given Pivot</li> <li>2169. Count Operations to Obtain Zero</li> <li>2177. Find Three Consecutive Integers That Sum to a Given Number</li> <li>2180. Count Integers With Even Digit Sum</li> <li>2181. Merge Nodes in Between Zeros</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2221. Find Triangular Sum of an Array</li> <li>2243. Calculate Digit Sum of a String</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2293. Min Max Game</li> <li>2295. Replace Elements in an Array</li> <li>2296. Design a Text Editor</li> <li>2303. Calculate Amount Paid in Taxes</li> <li>2326. Spiral Matrix IV</li> <li>2327. Number of People Aware of a Secret</li> <li>2352. Equal Row and Column Pairs</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2365. Task Scheduler II</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2390. Removing Stars From a String</li> <li>2460. Apply Operations to an Array</li> <li>2462. Total Cost to Hire K Workers</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2502. Design Memory Allocator</li> <li>2532. Time to Cross a Bridge</li> <li>2534. Time Taken to Cross the Door</li> <li>2549. Count Distinct Numbers on Board</li> <li>2553. Separate the Digits in an Array</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2562. Find the Array Concatenation Value</li> <li>258. Add Digits</li> <li>2582. Pass the Pillow</li> <li>289. Game of Life</li> <li>412. Fizz Buzz</li> <li>415. Add Strings</li> <li>418. Sentence Screen Fitting</li> <li>43. Multiply Strings</li> <li>495. Teemo Attacking</li> <li>498. Diagonal Traverse</li> <li>537. Complex Number Multiplication</li> <li>54. Spiral Matrix</li> <li>544. Output Contest Matches</li> <li>566. Reshape the Matrix</li> <li>59. Spiral Matrix II</li> <li>592. Fraction Addition and Subtraction</li> <li>640. Solve the Equation</li> <li>657. Robot Return to Origin</li> <li>67. Add Binary</li> <li>68. Text Justification</li> <li>682. Baseball Game</li> <li>723. Candy Crush</li> <li>749. Contain Virus</li> <li>755. Pour Water</li> <li>832. Flipping an Image</li> <li>844. Backspace String Compare</li> <li>867. Transpose Matrix</li> <li>874. Walking Robot Simulation</li> <li>885. Spiral Matrix III</li> <li>946. Validate Stack Sequences</li> <li>950. Reveal Cards In Increasing Order</li> <li>985. Sum of Even Numbers After Queries</li> <li>999. Available Captures for Rook</li> </ul>"},{"location":"tags/#sliding-window","title":"Sliding Window","text":"<ul> <li>1004. Max Consecutive Ones III</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1044. Longest Duplicate Substring</li> <li>1052. Grumpy Bookstore Owner</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1151. Minimum Swaps to Group All 1's Together</li> <li>1156. Swap For Longest Repeated Character Substring</li> <li>1176. Diet Plan Performance</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1234. Replace the Substring for Balanced String</li> <li>1248. Count Number of Nice Subarrays</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1425. Constrained Subsequence Sum</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1456. Maximum Number of Vowels in a Substring of Given Length</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1499. Max Value of Equation</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1610. Maximum Number of Visible Points</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1695. Maximum Erasure Value</li> <li>1696. Jump Game VI</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1763. Longest Nice Substring</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1839. Longest Substring Of All Vowels in Order</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>187. Repeated DNA Sequences</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>2024. Maximize the Confusion of an Exam</li> <li>209. Minimum Size Subarray Sum</li> <li>2090. K Radius Subarray Averages</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2134. Minimum Swaps to Group All 1's Together II</li> <li>2156. Find Substring With Given Hash Value</li> <li>219. Contains Duplicate II</li> <li>220. Contains Duplicate III</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2269. Find the K-Beauty of a Number</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2379. Minimum Recolors to Get K Consecutive Black Blocks</li> <li>239. Sliding Window Maximum</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2401. Longest Nice Subarray</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2528. Maximize the Minimum Powered City</li> <li>2537. Count the Number of Good Subarrays</li> <li>2555. Maximize Win From Two Segments</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>424. Longest Repeating Character Replacement</li> <li>438. Find All Anagrams in a String</li> <li>480. Sliding Window Median</li> <li>487. Max Consecutive Ones II</li> <li>567. Permutation in String</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>643. Maximum Average Subarray I</li> <li>658. Find K Closest Elements</li> <li>683. K Empty Slots</li> <li>713. Subarray Product Less Than K</li> <li>718. Maximum Length of Repeated Subarray</li> <li>727. Minimum Window Subsequence</li> <li>76. Minimum Window Substring</li> <li>837. New 21 Game</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>904. Fruit Into Baskets</li> <li>930. Binary Subarrays With Sum</li> <li>978. Longest Turbulent Subarray</li> <li>992. Subarrays with K Different Integers</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> </ul>"},{"location":"tags/#sorting","title":"Sorting","text":"<ul> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1029. Two City Scheduling</li> <li>1030. Matrix Cells in Distance Order</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1051. Height Checker</li> <li>1054. Distant Barcodes</li> <li>1057. Campus Bikes</li> <li>1065. Index Pairs of a String</li> <li>1086. High Five</li> <li>1090. Largest Values From Labels</li> <li>1094. Car Pooling</li> <li>1099. Two Sum Less Than K</li> <li>1122. Relative Sort Array</li> <li>1133. Largest Unique Number</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1181. Before and After Puzzle</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1200. Minimum Absolute Difference</li> <li>1229. Meeting Scheduler</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1244. Design A Leaderboard</li> <li>1288. Remove Covered Intervals</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1329. Sort the Matrix Diagonally</li> <li>1331. Rank Transform of an Array</li> <li>1333. Filter Restaurants by Vegan-Friendly, Price and Distance</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>1340. Jump Game V</li> <li>1346. Check If N and Its Double Exist</li> <li>1348. Tweet Counts Per Frequency</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1383. Maximum Performance of a Team</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1387. Sort Integers by The Power Value</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1424. Diagonal Traverse II</li> <li>1433. Check If a String Can Break Another String</li> <li>1451. Rearrange Words in a Sentence</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>147. Insertion Sort List</li> <li>1471. The k Strongest Values in an Array</li> <li>1478. Allocate Mailboxes</li> <li>148. Sort List</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1491. Average Salary Excluding the Minimum and Maximum Salary</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>15. 3Sum</li> <li>1502. Can Make Arithmetic Progression From Sequence</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>16. 3Sum Closest</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1610. Maximum Number of Visible Points</li> <li>1619. Mean of Array After Removing Some Elements</li> <li>1626. Best Team With No Conflicts</li> <li>1630. Arithmetic Subarrays</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1637. Widest Vertical Area Between Two Points Containing No Points</li> <li>164. Maximum Gap</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1657. Determine if Two Strings Are Close</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>1679. Max Number of K-Sum Pairs</li> <li>1686. Stone Game VI</li> <li>169. Majority Element</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1710. Maximum Units on a Truck</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1772. Sort Features by Popularity</li> <li>179. Largest Number</li> <li>18. 4Sum</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1833. Maximum Ice Cream Bars</li> <li>1834. Single-Threaded CPU</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1847. Closest Room</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1859. Sorting the Sentence</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1885. Count Pairs in Two Arrays</li> <li>1887. Reduction Operations to Make the Array Elements Equal</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>1913. Maximum Product Difference Between Two Pairs</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1996. The Number of Weak Characters in the Game</li> <li>1998. GCD Sort of an Array</li> <li>2007. Find Original Array From Doubled Array</li> <li>2008. Maximum Earnings From Taxi</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2037. Minimum Number of Moves to Seat Everyone</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2089. Find Target Indices After Sorting Array</li> <li>2092. Find All People With Secret</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>2122. Recover the Original Array</li> <li>2126. Destroying Asteroids</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2141. Maximum Running Time of N Computers</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2148. Count Elements With Strictly Smaller and Greater Elements</li> <li>215. Kth Largest Element in an Array</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2164. Sort Even and Odd Indices Independently</li> <li>2165. Smallest Value of the Rearranged Number</li> <li>217. Contains Duplicate</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2191. Sort the Jumbled Numbers</li> <li>2195. Append K Integers With Minimal Sum</li> <li>220. Contains Duplicate III</li> <li>2225. Find Players With Zero or One Losses</li> <li>2231. Largest Number After Digit Swaps by Parity</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2268. Minimum Number of Keypresses</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2274. Maximum Consecutive Floors Without Special Floors</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2285. Maximum Total Importance of Roads</li> <li>229. Majority Element II</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2363. Merge Similar Items</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2386. Find the K-Sum of an Array</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>2402. Meeting Rooms III</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2418. Sort the People</li> <li>242. Valid Anagram</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>2454. Next Greater Element IV</li> <li>2456. Most Popular Video Creator</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>2463. Minimum Total Distance Traveled</li> <li>2465. Number of Distinct Averages</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2501. Longest Square Streak in an Array</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2512. Reward Top K Students</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>252. Meeting Rooms</li> <li>253. Meeting Rooms II</li> <li>2542. Maximum Subsequence Score</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2551. Put Marbles in Bags</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2563. Count the Number of Fair Pairs</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2578. Split With Minimum Sum</li> <li>2580. Count Ways to Group Overlapping Ranges</li> <li>259. 3Sum Smaller</li> <li>268. Missing Number</li> <li>274. H-Index</li> <li>280. Wiggle Sort</li> <li>295. Find Median from Data Stream</li> <li>296. Best Meeting Point</li> <li>324. Wiggle Sort II</li> <li>347. Top K Frequent Elements</li> <li>349. Intersection of Two Arrays</li> <li>350. Intersection of Two Arrays II</li> <li>354. Russian Doll Envelopes</li> <li>358. Rearrange String k Distance Apart</li> <li>360. Sort Transformed Array</li> <li>368. Largest Divisible Subset</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>389. Find the Difference</li> <li>406. Queue Reconstruction by Height</li> <li>414. Third Maximum Number</li> <li>435. Non-overlapping Intervals</li> <li>436. Find Right Interval</li> <li>451. Sort Characters By Frequency</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>455. Assign Cookies</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>475. Heaters</li> <li>49. Group Anagrams</li> <li>502. IPO</li> <li>506. Relative Ranks</li> <li>522. Longest Uncommon Subsequence II</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>527. Word Abbreviation</li> <li>532. K-diff Pairs in an Array</li> <li>539. Minimum Time Difference</li> <li>56. Merge Intervals</li> <li>561. Array Partition</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>594. Longest Harmonious Subsequence</li> <li>611. Valid Triangle Number</li> <li>621. Task Scheduler</li> <li>628. Maximum Product of Three Numbers</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>645. Set Mismatch</li> <li>646. Maximum Length of Pair Chain</li> <li>658. Find K Closest Elements</li> <li>692. Top K Frequent Words</li> <li>710. Random Pick with Blacklist</li> <li>719. Find K-th Smallest Pair Distance</li> <li>720. Longest Word in Dictionary</li> <li>726. Number of Atoms</li> <li>747. Largest Number At Least Twice of Others</li> <li>75. Sort Colors</li> <li>757. Set Intersection Size At Least Two</li> <li>759. Employee Free Time</li> <li>767. Reorganize String</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>786. K-th Smallest Prime Fraction</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>833. Find And Replace in String</li> <li>846. Hand of Straights</li> <li>853. Car Fleet</li> <li>857. Minimum Cost to Hire K Workers</li> <li>869. Reordered Power of 2</li> <li>870. Advantage Shuffle</li> <li>88. Merge Sorted Array</li> <li>881. Boats to Save People</li> <li>888. Fair Candy Swap</li> <li>891. Sum of Subsequence Widths</li> <li>899. Orderly Queue</li> <li>905. Sort Array By Parity</li> <li>910. Smallest Range II</li> <li>912. Sort an Array</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>937. Reorder Data in Log Files</li> <li>939. Minimum Area Rectangle</li> <li>945. Minimum Increment to Make Array Unique</li> <li>948. Bag of Tokens</li> <li>950. Reveal Cards In Increasing Order</li> <li>954. Array of Doubled Pairs</li> <li>969. Pancake Sorting</li> <li>973. K Closest Points to Origin</li> <li>976. Largest Perimeter Triangle</li> <li>977. Squares of a Sorted Array</li> </ul>"},{"location":"tags/#stack","title":"Stack","text":"<ul> <li>1003. Check If Word Is Valid After Substitutions</li> <li>1006. Clumsy Factorial</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1019. Next Greater Node In Linked List</li> <li>1021. Remove Outermost Parentheses</li> <li>1047. Remove All Adjacent Duplicates In String</li> <li>1063. Number of Valid Subarrays</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1096. Brace Expansion II</li> <li>1106. Parsing A Boolean Expression</li> <li>1111. Maximum Nesting Depth of Two Valid Parentheses Strings</li> <li>1124. Longest Well-Performing Interval</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1172. Dinner Plate Stacks</li> <li>1190. Reverse Substrings Between Each Pair of Parentheses</li> <li>1209. Remove All Adjacent Duplicates in String II</li> <li>1214. Two Sum BSTs</li> <li>1249. Minimum Remove to Make Valid Parentheses</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1381. Design a Stack With Increment Operation</li> <li>143. Reorder List</li> <li>144. Binary Tree Preorder Traversal</li> <li>1441. Build an Array With Stack Operations</li> <li>145. Binary Tree Postorder Traversal</li> <li>1472. Design Browser History</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1504. Count Submatrices With All Ones</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1544. Make The String Great</li> <li>155. Min Stack</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1586. Binary Search Tree Iterator II</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1598. Crawler Log Folder</li> <li>1614. Maximum Nesting Depth of the Parentheses</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1700. Number of Students Unable to Eat Lunch</li> <li>1717. Maximum Score From Removing Substrings</li> <li>173. Binary Search Tree Iterator</li> <li>1756. Design Most Recently Used Queue</li> <li>1762. Buildings With an Ocean View</li> <li>1776. Car Fleet II</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1856. Maximum Subarray Min-Product</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1944. Number of Visible People in a Queue</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>1996. The Number of Weak Characters in the Game</li> <li>20. Valid Parentheses</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2104. Sum of Subarray Ranges</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2211. Count Collisions on a Road</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>224. Basic Calculator</li> <li>225. Implement Stack using Queues</li> <li>2254. Design Video Sharing Platform</li> <li>227. Basic Calculator II</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>2296. Design a Text Editor</li> <li>2297. Jump Game VIII</li> <li>232. Implement Queue using Stacks</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>234. Palindrome Linked List</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2375. Construct Smallest Number From DI String</li> <li>2390. Removing Stars From a String</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2454. Next Greater Element IV</li> <li>2487. Remove Nodes From Linked List</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>272. Closest Binary Search Tree Value II</li> <li>316. Remove Duplicate Letters</li> <li>32. Longest Valid Parentheses</li> <li>321. Create Maximum Number</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>341. Flatten Nested List Iterator</li> <li>364. Nested List Weight Sum II</li> <li>385. Mini Parser</li> <li>388. Longest Absolute File Path</li> <li>394. Decode String</li> <li>402. Remove K Digits</li> <li>42. Trapping Rain Water</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>439. Ternary Expression Parser</li> <li>445. Add Two Numbers II</li> <li>456. 132 Pattern</li> <li>484. Find Permutation</li> <li>496. Next Greater Element I</li> <li>503. Next Greater Element II</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>589. N-ary Tree Preorder Traversal</li> <li>590. N-ary Tree Postorder Traversal</li> <li>591. Tag Validator</li> <li>636. Exclusive Time of Functions</li> <li>654. Maximum Binary Tree</li> <li>678. Valid Parenthesis String</li> <li>682. Baseball Game</li> <li>71. Simplify Path</li> <li>716. Max Stack</li> <li>726. Number of Atoms</li> <li>735. Asteroid Collision</li> <li>736. Parse Lisp Expression</li> <li>739. Daily Temperatures</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>770. Basic Calculator IV</li> <li>772. Basic Calculator III</li> <li>84. Largest Rectangle in Histogram</li> <li>844. Backspace String Compare</li> <li>85. Maximal Rectangle</li> <li>853. Car Fleet</li> <li>856. Score of Parentheses</li> <li>880. Decoded String at Index</li> <li>895. Maximum Frequency Stack</li> <li>897. Increasing Order Search Tree</li> <li>901. Online Stock Span</li> <li>907. Sum of Subarray Minimums</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>936. Stamping The Sequence</li> <li>94. Binary Tree Inorder Traversal</li> <li>946. Validate Stack Sequences</li> <li>962. Maximum Width Ramp</li> <li>975. Odd Even Jump</li> </ul>"},{"location":"tags/#string","title":"String","text":"<ul> <li>10. Regular Expression Matching</li> <li>1002. Find Common Characters</li> <li>1003. Check If Word Is Valid After Substitutions</li> <li>1016. Binary String With Substrings Representing 1 To N</li> <li>1021. Remove Outermost Parentheses</li> <li>1023. Camelcase Matching</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>1032. Stream of Characters</li> <li>1041. Robot Bounded In Circle</li> <li>1044. Longest Duplicate Substring</li> <li>1047. Remove All Adjacent Duplicates In String</li> <li>1048. Longest String Chain</li> <li>1055. Shortest Way to Form String</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1061. Lexicographically Smallest Equivalent String</li> <li>1062. Longest Repeating Substring</li> <li>1065. Index Pairs of a String</li> <li>1071. Greatest Common Divisor of Strings</li> <li>1078. Occurrences After Bigram</li> <li>1079. Letter Tile Possibilities</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1087. Brace Expansion</li> <li>1092. Shortest Common Supersequence</li> <li>1096. Brace Expansion II</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1106. Parsing A Boolean Expression</li> <li>1108. Defanging an IP Address</li> <li>1111. Maximum Nesting Depth of Two Valid Parentheses Strings</li> <li>1119. Remove Vowels from a String</li> <li>1138. Alphabet Board Path</li> <li>1143. Longest Common Subsequence</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>115. Distinct Subsequences</li> <li>1153. String Transforms Into Another String</li> <li>1154. Day of the Year</li> <li>1156. Swap For Longest Repeated Character Substring</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1163. Last Substring in Lexicographical Order</li> <li>1165. Single-Row Keyboard</li> <li>1166. Design File System</li> <li>1169. Invalid Transactions</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1180. Count Substrings with Only One Distinct Letter</li> <li>1181. Before and After Puzzle</li> <li>1189. Maximum Number of Balloons</li> <li>1190. Reverse Substrings Between Each Pair of Parentheses</li> <li>12. Integer to Roman</li> <li>1202. Smallest String With Swaps</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1209. Remove All Adjacent Duplicates in String II</li> <li>1216. Valid Palindrome III</li> <li>1221. Split a String in Balanced Strings</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1234. Replace the Substring for Balanced String</li> <li>1236. Web Crawler</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1249. Minimum Remove to Make Valid Parentheses</li> <li>125. Valid Palindrome</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1256. Encode Number</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>126. Word Ladder II</li> <li>1268. Search Suggestions System</li> <li>127. Word Ladder</li> <li>1271. Hexspeak</li> <li>1278. Palindrome Partitioning III</li> <li>1286. Iterator for Combination</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>13. Roman to Integer</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1309. Decrypt String from Alphabet to Integer Mapping</li> <li>131. Palindrome Partitioning</li> <li>1312. Minimum Insertion Steps to Make a String Palindrome</li> <li>1316. Distinct Echo Substrings</li> <li>132. Palindrome Partitioning II</li> <li>1320. Minimum Distance to Type a Word Using Two Fingers</li> <li>1324. Print Words Vertically</li> <li>1328. Break a Palindrome</li> <li>1332. Remove Palindromic Subsequences</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1360. Number of Days Between Two Dates</li> <li>1366. Rank Teams by Votes</li> <li>1370. Increasing Decreasing String</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1374. Generate a String With Characters That Have Odd Counts</li> <li>139. Word Break</li> <li>1392. Longest Happy Prefix</li> <li>1396. Design Underground System</li> <li>1397. Find All Good Strings</li> <li>14. Longest Common Prefix</li> <li>140. Word Break II</li> <li>1400. Construct K Palindrome Strings</li> <li>1404. Number of Steps to Reduce a Number in Binary Representation to One</li> <li>1405. Longest Happy String</li> <li>1408. String Matching in an Array</li> <li>1410. HTML Entity Parser</li> <li>1415. The k-th Lexicographical String of All Happy Strings of Length n</li> <li>1416. Restore The Array</li> <li>1417. Reformat The String</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1419. Minimum Number of Frogs Croaking</li> <li>1422. Maximum Score After Splitting a String</li> <li>1427. Perform String Shifts</li> <li>1433. Check If a String Can Break Another String</li> <li>1436. Destination City</li> <li>1446. Consecutive Characters</li> <li>1447. Simplified Fractions</li> <li>1451. Rearrange Words in a Sentence</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence</li> <li>1456. Maximum Number of Vowels in a Substring of Given Length</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1487. Making File Names Unique</li> <li>1496. Path Crossing</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1507. Reformat Date</li> <li>151. Reverse Words in a String</li> <li>1513. Number of Substrings With Only 1s</li> <li>1520. Maximum Number of Non-Overlapping Substrings</li> <li>1525. Number of Good Ways to Split a String</li> <li>1528. Shuffle String</li> <li>1529. Minimum Suffix Flips</li> <li>1531. String Compression II</li> <li>1540. Can Convert String in K Moves</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1542. Find Longest Awesome Substring</li> <li>1544. Make The String Great</li> <li>1545. Find Kth Bit in Nth Binary String</li> <li>1554. Strings Differ by One Character</li> <li>1556. Thousand Separator</li> <li>157. Read N Characters Given Read4</li> <li>1573. Number of Ways to Split a String</li> <li>1576. Replace All ?'s to Avoid Consecutive Repeating Characters</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1592. Rearrange Spaces Between Words</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1598. Crawler Log Folder</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>161. One Edit Distance</li> <li>1614. Maximum Nesting Depth of the Parentheses</li> <li>1616. Split Two Strings to Make Palindrome</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1624. Largest Substring Between Two Equal Characters</li> <li>1625. Lexicographically Smallest String After Applying Operations</li> <li>1629. Slowest Key</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>165. Compare Version Numbers</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1657. Determine if Two Strings Are Close</li> <li>166. Fraction to Recurring Decimal</li> <li>1662. Check If Two String Arrays are Equivalent</li> <li>1663. Smallest String With A Given Numeric Value</li> <li>1668. Maximum Repeating Substring</li> <li>1678. Goal Parser Interpretation</li> <li>168. Excel Sheet Column Title</li> <li>1682. Longest Palindromic Subsequence II</li> <li>1684. Count the Number of Consistent Strings</li> <li>1689. Partitioning Into Minimum Number Of Deci-Binary Numbers</li> <li>1694. Reformat Phone Number</li> <li>1698. Number of Distinct Substrings in a String</li> <li>17. Letter Combinations of a Phone Number</li> <li>1702. Maximum Binary String After Change</li> <li>1704. Determine if String Halves Are Alike</li> <li>171. Excel Sheet Column Number</li> <li>1717. Maximum Score From Removing Substrings</li> <li>1736. Latest Time by Replacing Hidden Digits</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1745. Palindrome Partitioning IV</li> <li>1750. Minimum Length of String After Deleting Similar Ends</li> <li>1754. Largest Merge Of Two Strings</li> <li>1758. Minimum Changes To Make Alternating Binary String</li> <li>1759. Count Number of Homogenous Substrings</li> <li>1763. Longest Nice Substring</li> <li>1768. Merge Strings Alternately</li> <li>1769. Minimum Number of Operations to Move All Balls to Each Box</li> <li>1771. Maximize Palindrome Length From Subsequences</li> <li>1772. Sort Features by Popularity</li> <li>1773. Count Items Matching a Rule</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1784. Check if Binary String Has at Most One Segment of Ones</li> <li>179. Largest Number</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1796. Second Largest Digit in a String</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1805. Number of Different Integers in a String</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1812. Determine Color of a Chessboard Square</li> <li>1813. Sentence Similarity III</li> <li>1816. Truncate Sentence</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1832. Check if the Sentence Is Pangram</li> <li>1839. Longest Substring Of All Vowels in Order</li> <li>1842. Next Palindrome Using Same Digits</li> <li>1844. Replace All Digits with Characters</li> <li>1849. Splitting a String Into Descending Consecutive Values</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1859. Sorting the Sentence</li> <li>186. Reverse Words in a String II</li> <li>1864. Minimum Number of Swaps to Make the Binary String Alternating</li> <li>1869. Longer Contiguous Segments of Ones than Zeros</li> <li>187. Repeated DNA Sequences</li> <li>1871. Jump Game VII</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1880. Check if Word Equals Summation of Two Words</li> <li>1881. Maximum Value after Insertion</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1898. Maximum Number of Removable Characters</li> <li>1903. Largest Odd Number in String</li> <li>1904. The Number of Full Rounds You Have Played</li> <li>1910. Remove All Occurrences of a Substring</li> <li>1915. Number of Wonderful Substrings</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1933. Check if String Is Decomposable Into Value-Equal Substrings</li> <li>1935. Maximum Number of Words You Can Type</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>1945. Sum of Digits of String After Convert</li> <li>1946. Largest Number After Mutating Substring</li> <li>1948. Delete Duplicate Folders in System</li> <li>1957. Delete Characters to Make Fancy String</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>1961. Check If String Is a Prefix of Array</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>1967. Number of Strings That Appear as Substrings in Word</li> <li>1974. Minimum Time to Type Word Using Special Typewriter</li> <li>1977. Number of Ways to Separate Numbers</li> <li>1980. Find Unique Binary String</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1987. Number of Unique Good Subsequences</li> <li>20. Valid Parentheses</li> <li>2000. Reverse Prefix of Word</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2019. The Score of Students Solving Math Expression</li> <li>2023. Number of Pairs of Strings With Concatenation Equal to Target</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2027. Minimum Moves to Convert String</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>2042. Check if Numbers Are Ascending in a Sentence</li> <li>2047. Number of Valid Words in a Sentence</li> <li>205. Isomorphic Strings</li> <li>2053. Kth Distinct String in an Array</li> <li>2055. Plates Between Candles</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2060. Check if an Original String Exists Given Two Encoded Strings</li> <li>2062. Count Vowel Substrings of a String</li> <li>2063. Vowels of All Substrings</li> <li>2067. Number of Equal Count Substrings</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>2075. Decode the Slanted Ciphertext</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2085. Count Common Words With One Occurrence</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2103. Rings and Rods</li> <li>2108. Find First Palindromic String in the Array</li> <li>2109. Adding Spaces to a String</li> <li>211. Design Add and Search Words Data Structure</li> <li>2114. Maximum Number of Words Found in Sentences</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>212. Word Search II</li> <li>2120. Execution of All Suffix Instructions Staying in a Grid</li> <li>2124. Check if All A's Appears Before All B's</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2129. Capitalize the Title</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2138. Divide a String Into Groups of Size k</li> <li>214. Shortest Palindrome</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2156. Find Substring With Given Hash Value</li> <li>2157. Groups of Strings</li> <li>2167. Minimum Time to Remove All Cars Containing Illegal Goods</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2182. Construct String With Repeat Limit</li> <li>2185. Counting Words With a Given Prefix</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2194. Cells in a Range on an Excel Sheet</li> <li>22. Generate Parentheses</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>2211. Count Collisions on a Road</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2222. Number of Ways to Select Buildings</li> <li>2223. Sum of Scores of Built Strings</li> <li>2224. Minimum Number of Operations to Convert Time</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2232. Minimize Result by Adding Parentheses to Expression</li> <li>224. Basic Calculator</li> <li>2243. Calculate Digit Sum of a String</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2255. Count Prefixes of a Given String</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>2262. Total Appeal of A String</li> <li>2264. Largest 3-Same-Digit Number in String</li> <li>2266. Count Number of Texts</li> <li>2268. Minimum Number of Keypresses</li> <li>2269. Find the K-Beauty of a Number</li> <li>227. Basic Calculator II</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2278. Percentage of Letter in String</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2287. Rearrange Characters to Make Target String</li> <li>2288. Apply Discount to Prices</li> <li>2296. Design a Text Editor</li> <li>2299. Strong Password Checker II</li> <li>2301. Match Substring After Replacement</li> <li>2306. Naming a Company</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2315. Count Asterisks</li> <li>2325. Decode the Message</li> <li>2330. Valid Palindrome IV</li> <li>2337. Move Pieces to Obtain a String</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2351. First Letter to Appear Twice</li> <li>2370. Longest Ideal Subsequence</li> <li>2375. Construct Smallest Number From DI String</li> <li>2379. Minimum Recolors to Get K Consecutive Black Blocks</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2381. Shifting Letters II</li> <li>2384. Largest Palindromic Number</li> <li>2390. Removing Stars From a String</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2399. Check Distances Between Same Letters</li> <li>2405. Optimal Partition of String</li> <li>2408. Design SQL</li> <li>2409. Count Days Spent Together</li> <li>241. Different Ways to Add Parentheses</li> <li>2414. Length of the Longest Alphabetical Continuous Substring</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2418. Sort the People</li> <li>242. Valid Anagram</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>243. Shortest Word Distance</li> <li>2430. Maximum Deletions on a String</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2437. Number of Valid Clock Times</li> <li>244. Shortest Word Distance II</li> <li>2446. Determine if Two Events Have Conflict</li> <li>245. Shortest Word Distance III</li> <li>2450. Number of Distinct Binary Strings After Applying Operations</li> <li>2451. Odd String Difference</li> <li>2452. Words Within Two Edits of Dictionary</li> <li>2456. Most Popular Video Creator</li> <li>246. Strobogrammatic Number</li> <li>2468. Split Message Based on Limit</li> <li>247. Strobogrammatic Number II</li> <li>2472. Maximum Number of Non-overlapping Palindrome Substrings</li> <li>2478. Number of Beautiful Partitions</li> <li>248. Strobogrammatic Number III</li> <li>2483. Minimum Penalty for a Shop</li> <li>2484. Count Palindromic Subsequences</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>249. Group Shifted Strings</li> <li>2490. Circular Sentence</li> <li>2496. Maximum Value of a String in an Array</li> <li>2506. Count Pairs Of Similar Strings</li> <li>2512. Reward Top K Students</li> <li>2514. Count Anagrams</li> <li>2515. Shortest Distance to Target String in a Circular Array</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2539. Count the Number of Good Subsequences</li> <li>2546. Apply Bitwise Operations to Make Strings Equal</li> <li>2559. Count Vowel Strings in Ranges</li> <li>2564. Substring XOR Queries</li> <li>2565. Subsequence With the Minimum Score</li> <li>257. Binary Tree Paths</li> <li>2575. Find the Divisibility Array of a String</li> <li>266. Palindrome Permutation</li> <li>267. Palindrome Permutation II</li> <li>269. Alien Dictionary</li> <li>271. Encode and Decode Strings</li> <li>273. Integer to English Words</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>282. Expression Add Operators</li> <li>288. Unique Word Abbreviation</li> <li>290. Word Pattern</li> <li>291. Word Pattern II</li> <li>293. Flip Game</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>299. Bulls and Cows</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>301. Remove Invalid Parentheses</li> <li>306. Additive Number</li> <li>316. Remove Duplicate Letters</li> <li>318. Maximum Product of Word Lengths</li> <li>32. Longest Valid Parentheses</li> <li>320. Generalized Abbreviation</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>336. Palindrome Pairs</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>344. Reverse String</li> <li>345. Reverse Vowels of a String</li> <li>358. Rearrange String k Distance Apart</li> <li>38. Count and Say</li> <li>383. Ransom Note</li> <li>385. Mini Parser</li> <li>387. First Unique Character in a String</li> <li>388. Longest Absolute File Path</li> <li>389. Find the Difference</li> <li>392. Is Subsequence</li> <li>394. Decode String</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>402. Remove K Digits</li> <li>408. Valid Word Abbreviation</li> <li>409. Longest Palindrome</li> <li>411. Minimum Unique Word Abbreviation</li> <li>412. Fizz Buzz</li> <li>415. Add Strings</li> <li>418. Sentence Screen Fitting</li> <li>420. Strong Password Checker</li> <li>423. Reconstruct Original Digits from English</li> <li>424. Longest Repeating Character Replacement</li> <li>425. Word Squares</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>43. Multiply Strings</li> <li>433. Minimum Genetic Mutation</li> <li>434. Number of Segments in a String</li> <li>438. Find All Anagrams in a String</li> <li>439. Ternary Expression Parser</li> <li>44. Wildcard Matching</li> <li>443. String Compression</li> <li>449. Serialize and Deserialize BST</li> <li>451. Sort Characters By Frequency</li> <li>459. Repeated Substring Pattern</li> <li>466. Count The Repetitions</li> <li>467. Unique Substrings in Wraparound String</li> <li>468. Validate IP Address</li> <li>471. Encode String with Shortest Length</li> <li>472. Concatenated Words</li> <li>474. Ones and Zeroes</li> <li>481. Magical String</li> <li>482. License Key Formatting</li> <li>484. Find Permutation</li> <li>488. Zuma Game</li> <li>49. Group Anagrams</li> <li>5. Longest Palindromic Substring</li> <li>500. Keyboard Row</li> <li>514. Freedom Trail</li> <li>516. Longest Palindromic Subsequence</li> <li>520. Detect Capital</li> <li>521. Longest Uncommon Subsequence I</li> <li>522. Longest Uncommon Subsequence II</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>527. Word Abbreviation</li> <li>535. Encode and Decode TinyURL</li> <li>536. Construct Binary Tree from String</li> <li>537. Complex Number Multiplication</li> <li>539. Minimum Time Difference</li> <li>541. Reverse String II</li> <li>544. Output Contest Matches</li> <li>551. Student Attendance Record I</li> <li>555. Split Concatenated Strings</li> <li>556. Next Greater Element III</li> <li>557. Reverse Words in a String III</li> <li>564. Find the Closest Palindrome</li> <li>567. Permutation in String</li> <li>58. Length of Last Word</li> <li>583. Delete Operation for Two Strings</li> <li>588. Design In-Memory File System</li> <li>591. Tag Validator</li> <li>592. Fraction Addition and Subtraction</li> <li>599. Minimum Index Sum of Two Lists</li> <li>6. Zigzag Conversion</li> <li>604. Design Compressed String Iterator</li> <li>606. Construct String from Binary Tree</li> <li>609. Find Duplicate File in System</li> <li>616. Add Bold Tag in String</li> <li>635. Design Log Storage System</li> <li>639. Decode Ways II</li> <li>640. Solve the Equation</li> <li>642. Design Search Autocomplete System</li> <li>647. Palindromic Substrings</li> <li>648. Replace Words</li> <li>649. Dota2 Senate</li> <li>65. Valid Number</li> <li>657. Robot Return to Origin</li> <li>664. Strange Printer</li> <li>67. Add Binary</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>678. Valid Parenthesis String</li> <li>68. Text Justification</li> <li>680. Valid Palindrome II</li> <li>681. Next Closest Time</li> <li>686. Repeated String Match</li> <li>691. Stickers to Spell Word</li> <li>692. Top K Frequent Words</li> <li>696. Count Binary Substrings</li> <li>709. To Lower Case</li> <li>71. Simplify Path</li> <li>712. Minimum ASCII Delete Sum for Two Strings</li> <li>72. Edit Distance</li> <li>720. Longest Word in Dictionary</li> <li>721. Accounts Merge</li> <li>722. Remove Comments</li> <li>726. Number of Atoms</li> <li>727. Minimum Window Subsequence</li> <li>730. Count Different Palindromic Subsequences</li> <li>734. Sentence Similarity</li> <li>736. Parse Lisp Expression</li> <li>737. Sentence Similarity II</li> <li>745. Prefix and Suffix Search</li> <li>748. Shortest Completing Word</li> <li>751. IP to CIDR</li> <li>752. Open the Lock</li> <li>758. Bold Words in String</li> <li>76. Minimum Window Substring</li> <li>761. Special Binary String</li> <li>763. Partition Labels</li> <li>767. Reorganize String</li> <li>770. Basic Calculator IV</li> <li>771. Jewels and Stones</li> <li>772. Basic Calculator III</li> <li>777. Swap Adjacent in LR String</li> <li>784. Letter Case Permutation</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>794. Valid Tic-Tac-Toe State</li> <li>796. Rotate String</li> <li>8. String to Integer (atoi)</li> <li>800. Similar RGB Color</li> <li>804. Unique Morse Code Words</li> <li>806. Number of Lines To Write String</li> <li>809. Expressive Words</li> <li>811. Subdomain Visit Count</li> <li>816. Ambiguous Coordinates</li> <li>819. Most Common Word</li> <li>820. Short Encoding of Words</li> <li>821. Shortest Distance to a Character</li> <li>824. Goat Latin</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>830. Positions of Large Groups</li> <li>831. Masking Personal Information</li> <li>833. Find And Replace in String</li> <li>838. Push Dominoes</li> <li>839. Similar String Groups</li> <li>842. Split Array into Fibonacci Sequence</li> <li>843. Guess the Word</li> <li>844. Backspace String Compare</li> <li>848. Shifting Letters</li> <li>854. K-Similar Strings</li> <li>856. Score of Parentheses</li> <li>859. Buddy Strings</li> <li>87. Scramble String</li> <li>880. Decoded String at Index</li> <li>884. Uncommon Words from Two Sentences</li> <li>890. Find and Replace Pattern</li> <li>893. Groups of Special-Equivalent Strings</li> <li>899. Orderly Queue</li> <li>902. Numbers At Most N Given Digit Set</li> <li>91. Decode Ways</li> <li>916. Word Subsets</li> <li>917. Reverse Only Letters</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>925. Long Pressed Name</li> <li>926. Flip String to Monotone Increasing</li> <li>929. Unique Email Addresses</li> <li>93. Restore IP Addresses</li> <li>936. Stamping The Sequence</li> <li>937. Reorder Data in Log Files</li> <li>940. Distinct Subsequences II</li> <li>942. DI String Match</li> <li>943. Find the Shortest Superstring</li> <li>944. Delete Columns to Make Sorted</li> <li>949. Largest Time for Given Digits</li> <li>953. Verifying an Alien Dictionary</li> <li>955. Delete Columns to Make Sorted II</li> <li>960. Delete Columns to Make Sorted III</li> <li>966. Vowel Spellchecker</li> <li>97. Interleaving String</li> <li>972. Equal Rational Numbers</li> <li>981. Time Based Key-Value Store</li> <li>984. String Without AAA or BBB</li> <li>988. Smallest String Starting From Leaf</li> <li>990. Satisfiability of Equality Equations</li> </ul>"},{"location":"tags/#string-matching","title":"String Matching","text":"<ul> <li>1023. Camelcase Matching</li> <li>1392. Longest Happy Prefix</li> <li>1397. Find All Good Strings</li> <li>1408. String Matching in an Array</li> <li>1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence</li> <li>1668. Maximum Repeating Substring</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>214. Shortest Palindrome</li> <li>2223. Sum of Scores of Built Strings</li> <li>2301. Match Substring After Replacement</li> <li>2430. Maximum Deletions on a String</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>459. Repeated Substring Pattern</li> <li>572. Subtree of Another Tree</li> <li>616. Add Bold Tag in String</li> <li>686. Repeated String Match</li> <li>758. Bold Words in String</li> <li>796. Rotate String</li> </ul>"},{"location":"tags/#strongly-connected-component","title":"Strongly Connected Component","text":"<ul> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1568. Minimum Number of Days to Disconnect Island</li> </ul>"},{"location":"tags/#suffix-array","title":"Suffix Array","text":"<ul> <li>1044. Longest Duplicate Substring</li> <li>1062. Longest Repeating Substring</li> <li>1698. Number of Distinct Substrings in a String</li> <li>1923. Longest Common Subpath</li> <li>1977. Number of Ways to Separate Numbers</li> <li>2223. Sum of Scores of Built Strings</li> </ul>"},{"location":"tags/#topological-sort","title":"Topological Sort","text":"<ul> <li>1136. Parallel Courses</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1245. Tree Diameter</li> <li>1462. Course Schedule IV</li> <li>1591. Strange Printer II</li> <li>1632. Rank Transform of a Matrix</li> <li>1728. Cat and Mouse II</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>2050. Parallel Courses III</li> <li>207. Course Schedule</li> <li>210. Course Schedule II</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2360. Longest Cycle in a Graph</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2392. Build a Matrix With Conditions</li> <li>269. Alien Dictionary</li> <li>310. Minimum Height Trees</li> <li>329. Longest Increasing Path in a Matrix</li> <li>444. Sequence Reconstruction</li> <li>631. Design Excel Sum Formula</li> <li>802. Find Eventual Safe States</li> <li>851. Loud and Rich</li> <li>913. Cat and Mouse</li> </ul>"},{"location":"tags/#tree","title":"Tree","text":"<ul> <li>100. Same Tree</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>101. Symmetric Tree</li> <li>102. Binary Tree Level Order Traversal</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>104. Maximum Depth of Binary Tree</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>107. Binary Tree Level Order Traversal II</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>110. Balanced Binary Tree</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>113. Path Sum II</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1145. Binary Tree Coloring Game</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1214. Two Sum BSTs</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1245. Tree Diameter</li> <li>1257. Smallest Common Region</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1273. Delete Tree Nodes</li> <li>129. Sum Root to Leaf Numbers</li> <li>1302. Deepest Leaves Sum</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1325. Delete Leaves With a Given Value</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>1361. Validate Binary Tree Nodes</li> <li>1367. Linked List in Binary Tree</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>1382. Balance a Binary Search Tree</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>144. Binary Tree Preorder Traversal</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>145. Binary Tree Postorder Traversal</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1469. Find All The Lonely Nodes</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1490. Clone N-ary Tree</li> <li>1506. Find Root of N-Ary Tree</li> <li>1516. Move Sub-Tree of N-Ary Tree</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>1522. Diameter of N-Ary Tree</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>156. Binary Tree Upside Down</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1586. Binary Search Tree Iterator II</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1600. Throne Inheritance</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1609. Even Odd Tree</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1660. Correct a Binary Tree</li> <li>1666. Change the Root of a Binary Tree</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>1719. Number Of Ways To Reconstruct A Tree</li> <li>173. Binary Search Tree Iterator</li> <li>1740. Find Distance in a Binary Tree</li> <li>1766. Tree of Coprimes</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>199. Binary Tree Right Side View</li> <li>1993. Operations on Tree</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2049. Count Nodes With the Highest Score</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2196. Create Binary Tree From Descriptions</li> <li>222. Count Complete Tree Nodes</li> <li>2236. Root Equals Sum of Children</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>226. Invert Binary Tree</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>2277. Closest Node to Path in Tree</li> <li>230. Kth Smallest Element in a BST</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2421. Number of Good Paths</li> <li>2440. Create Components With Same Value</li> <li>2445. Number of Nodes With Value One</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2467. Most Profitable Path in a Tree</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>250. Count Univalue Subtrees</li> <li>2509. Cycle Length Queries in a Tree</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>257. Binary Tree Paths</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>270. Closest Binary Search Tree Value</li> <li>272. Closest Binary Search Tree Value II</li> <li>285. Inorder Successor in BST</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>333. Largest BST Subtree</li> <li>337. House Robber III</li> <li>341. Flatten Nested List Iterator</li> <li>366. Find Leaves of Binary Tree</li> <li>404. Sum of Left Leaves</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>427. Construct Quad Tree</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>429. N-ary Tree Level Order Traversal</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>437. Path Sum III</li> <li>449. Serialize and Deserialize BST</li> <li>450. Delete Node in a BST</li> <li>501. Find Mode in Binary Search Tree</li> <li>508. Most Frequent Subtree Sum</li> <li>510. Inorder Successor in BST II</li> <li>513. Find Bottom Left Tree Value</li> <li>515. Find Largest Value in Each Tree Row</li> <li>530. Minimum Absolute Difference in BST</li> <li>536. Construct Binary Tree from String</li> <li>538. Convert BST to Greater Tree</li> <li>543. Diameter of Binary Tree</li> <li>545. Boundary of Binary Tree</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>558. Logical OR of Two Binary Grids Represented as Quad-Trees</li> <li>559. Maximum Depth of N-ary Tree</li> <li>563. Binary Tree Tilt</li> <li>572. Subtree of Another Tree</li> <li>582. Kill Process</li> <li>589. N-ary Tree Preorder Traversal</li> <li>590. N-ary Tree Postorder Traversal</li> <li>606. Construct String from Binary Tree</li> <li>617. Merge Two Binary Trees</li> <li>623. Add One Row to Tree</li> <li>637. Average of Levels in Binary Tree</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>654. Maximum Binary Tree</li> <li>655. Print Binary Tree</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>666. Path Sum IV</li> <li>669. Trim a Binary Search Tree</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>687. Longest Univalue Path</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>703. Kth Largest Element in a Stream</li> <li>742. Closest Leaf in a Binary Tree</li> <li>776. Split BST</li> <li>783. Minimum Distance Between BST Nodes</li> <li>814. Binary Tree Pruning</li> <li>834. Sum of Distances in Tree</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>872. Leaf-Similar Trees</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>894. All Possible Full Binary Trees</li> <li>897. Increasing Order Search Tree</li> <li>919. Complete Binary Tree Inserter</li> <li>938. Range Sum of BST</li> <li>94. Binary Tree Inorder Traversal</li> <li>95. Unique Binary Search Trees II</li> <li>951. Flip Equivalent Binary Trees</li> <li>958. Check Completeness of a Binary Tree</li> <li>96. Unique Binary Search Trees</li> <li>965. Univalued Binary Tree</li> <li>968. Binary Tree Cameras</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>99. Recover Binary Search Tree</li> <li>993. Cousins in Binary Tree</li> <li>998. Maximum Binary Tree II</li> </ul>"},{"location":"tags/#trie","title":"Trie","text":"<ul> <li>1023. Camelcase Matching</li> <li>1032. Stream of Characters</li> <li>1065. Index Pairs of a String</li> <li>1166. Design File System</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1268. Search Suggestions System</li> <li>1316. Distinct Echo Substrings</li> <li>139. Word Break</li> <li>14. Longest Common Prefix</li> <li>140. Word Break II</li> <li>1698. Number of Distinct Substrings in a String</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1858. Longest Word With All Prefixes</li> <li>1938. Maximum Genetic Difference Query</li> <li>1948. Delete Duplicate Folders in System</li> <li>208. Implement Trie (Prefix Tree)</li> <li>211. Design Add and Search Words Data Structure</li> <li>212. Word Search II</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2261. K Divisible Elements Subarrays</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>336. Palindrome Pairs</li> <li>386. Lexicographical Numbers</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>425. Word Squares</li> <li>440. K-th Smallest in Lexicographical Order</li> <li>472. Concatenated Words</li> <li>527. Word Abbreviation</li> <li>588. Design In-Memory File System</li> <li>616. Add Bold Tag in String</li> <li>642. Design Search Autocomplete System</li> <li>648. Replace Words</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>692. Top K Frequent Words</li> <li>720. Longest Word in Dictionary</li> <li>745. Prefix and Suffix Search</li> <li>758. Bold Words in String</li> <li>792. Number of Matching Subsequences</li> <li>820. Short Encoding of Words</li> </ul>"},{"location":"tags/#two-pointers","title":"Two Pointers","text":"<ul> <li>1023. Camelcase Matching</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1048. Longest String Chain</li> <li>1055. Shortest Way to Form String</li> <li>1089. Duplicate Zeros</li> <li>1099. Two Sum Less Than K</li> <li>11. Container With Most Water</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1163. Last Substring in Lexicographical Order</li> <li>1214. Two Sum BSTs</li> <li>1229. Meeting Scheduler</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>125. Valid Palindrome</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1332. Remove Palindromic Subsequences</li> <li>1346. Check If N and Its Double Exist</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>141. Linked List Cycle</li> <li>142. Linked List Cycle II</li> <li>143. Reorder List</li> <li>1471. The k Strongest Values in an Array</li> <li>148. Sort List</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>15. 3Sum</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>151. Reverse Words in a String</li> <li>1537. Get the Maximum Score</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>16. 3Sum Closest</li> <li>160. Intersection of Two Linked Lists</li> <li>161. One Edit Distance</li> <li>1616. Split Two Strings to Make Palindrome</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>165. Compare Version Numbers</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1679. Max Number of K-Sum Pairs</li> <li>170. Two Sum III - Data structure design</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1721. Swapping Nodes in a Linked List</li> <li>1750. Minimum Length of String After Deleting Similar Ends</li> <li>1754. Largest Merge Of Two Strings</li> <li>1755. Closest Subsequence Sum</li> <li>1768. Merge Strings Alternately</li> <li>1782. Count Pairs Of Nodes</li> <li>1793. Maximum Score of a Good Subarray</li> <li>18. 4Sum</li> <li>1813. Sentence Similarity III</li> <li>1826. Faulty Sensor</li> <li>1842. Next Palindrome Using Same Digits</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>186. Reverse Words in a String II</li> <li>1861. Rotating the Box</li> <li>1868. Product of Two Run-Length Encoded Arrays</li> <li>1871. Jump Game VII</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>189. Rotate Array</li> <li>19. Remove Nth Node From End of List</li> <li>1963. Minimum Number of Swaps to Make the String Balanced</li> <li>2000. Reverse Prefix of Word</li> <li>202. Happy Number</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2095. Delete the Middle Node of a Linked List</li> <li>2105. Watering Plants II</li> <li>2108. Find First Palindromic String in the Array</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2149. Rearrange Array Elements by Sign</li> <li>2161. Partition Array According to Given Pivot</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2330. Valid Palindrome IV</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2337. Move Pieces to Obtain a String</li> <li>234. Palindrome Linked List</li> <li>2367. Number of Arithmetic Triplets</li> <li>2396. Strictly Palindromic Number</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>244. Shortest Word Distance II</li> <li>246. Strobogrammatic Number</li> <li>2462. Total Cost to Hire K Workers</li> <li>2465. Number of Distinct Averages</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>251. Flatten 2D Vector</li> <li>2511. Maximum Enemy Forts That Can Be Captured</li> <li>253. Meeting Rooms II</li> <li>2540. Minimum Common Value</li> <li>2562. Find the Array Concatenation Value</li> <li>2563. Count the Number of Fair Pairs</li> <li>2565. Subsequence With the Minimum Score</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>259. 3Sum Smaller</li> <li>26. Remove Duplicates from Sorted Array</li> <li>27. Remove Element</li> <li>272. Closest Binary Search Tree Value II</li> <li>277. Find the Celebrity</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>283. Move Zeroes</li> <li>287. Find the Duplicate Number</li> <li>295. Find Median from Data Stream</li> <li>31. Next Permutation</li> <li>344. Reverse String</li> <li>345. Reverse Vowels of a String</li> <li>349. Intersection of Two Arrays</li> <li>350. Intersection of Two Arrays II</li> <li>360. Sort Transformed Array</li> <li>392. Is Subsequence</li> <li>408. Valid Word Abbreviation</li> <li>42. Trapping Rain Water</li> <li>443. String Compression</li> <li>455. Assign Cookies</li> <li>457. Circular Array Loop</li> <li>475. Heaters</li> <li>481. Magical String</li> <li>522. Longest Uncommon Subsequence II</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>532. K-diff Pairs in an Array</li> <li>541. Reverse String II</li> <li>556. Next Greater Element III</li> <li>557. Reverse Words in a String III</li> <li>567. Permutation in String</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>61. Rotate List</li> <li>611. Valid Triangle Number</li> <li>633. Sum of Square Numbers</li> <li>653. Two Sum IV - Input is a BST</li> <li>658. Find K Closest Elements</li> <li>680. Valid Palindrome II</li> <li>696. Count Binary Substrings</li> <li>719. Find K-th Smallest Pair Distance</li> <li>723. Candy Crush</li> <li>75. Sort Colors</li> <li>763. Partition Labels</li> <li>777. Swap Adjacent in LR String</li> <li>795. Number of Subarrays with Bounded Maximum</li> <li>80. Remove Duplicates from Sorted Array II</li> <li>809. Expressive Words</li> <li>82. Remove Duplicates from Sorted List II</li> <li>821. Shortest Distance to a Character</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>832. Flipping an Image</li> <li>838. Push Dominoes</li> <li>844. Backspace String Compare</li> <li>845. Longest Mountain in Array</li> <li>86. Partition List</li> <li>870. Advantage Shuffle</li> <li>876. Middle of the Linked List</li> <li>88. Merge Sorted Array</li> <li>881. Boats to Save People</li> <li>905. Sort Array By Parity</li> <li>917. Reverse Only Letters</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>925. Long Pressed Name</li> <li>942. DI String Match</li> <li>948. Bag of Tokens</li> <li>969. Pancake Sorting</li> <li>977. Squares of a Sorted Array</li> <li>986. Interval List Intersections</li> </ul>"},{"location":"tags/#union-find","title":"Union Find","text":"<ul> <li>1020. Number of Enclaves</li> <li>1061. Lexicographically Smallest Equivalent String</li> <li>1101. The Earliest Moment When Everyone Become Friends</li> <li>1102. Path With Maximum Minimum Value</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1202. Smallest String With Swaps</li> <li>1254. Number of Closed Islands</li> <li>1258. Synonymous Sentences</li> <li>1267. Count Servers that Communicate</li> <li>128. Longest Consecutive Sequence</li> <li>130. Surrounded Regions</li> <li>1319. Number of Operations to Make Network Connected</li> <li>1361. Validate Binary Tree Nodes</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>1559. Detect Cycles in 2D Grid</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>1579. Remove Max Number of Edges to Keep Graph Fully Traversable</li> <li>1584. Min Cost to Connect All Points</li> <li>1627. Graph Connectivity With Threshold</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> <li>1905. Count Sub Islands</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>1998. GCD Sort of an Array</li> <li>200. Number of Islands</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2076. Process Restricted Friend Requests</li> <li>2092. Find All People With Secret</li> <li>2157. Groups of Strings</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2307. Check for Contradictions in Equations</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2421. Number of Good Paths</li> <li>2424. Longest Uploaded Prefix</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>261. Graph Valid Tree</li> <li>305. Number of Islands II</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>399. Evaluate Division</li> <li>547. Number of Provinces</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>711. Number of Distinct Islands II</li> <li>721. Accounts Merge</li> <li>737. Sentence Similarity II</li> <li>765. Couples Holding Hands</li> <li>778. Swim in Rising Water</li> <li>785. Is Graph Bipartite?</li> <li>803. Bricks Falling When Hit</li> <li>827. Making A Large Island</li> <li>839. Similar String Groups</li> <li>886. Possible Bipartition</li> <li>924. Minimize Malware Spread</li> <li>928. Minimize Malware Spread II</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>952. Largest Component Size by Common Factor</li> <li>959. Regions Cut By Slashes</li> <li>990. Satisfiability of Equality Equations</li> </ul>"},{"location":"tags/#unsolved","title":"Unsolved","text":"<ul> <li>1. Two Sum</li> <li>10. Regular Expression Matching</li> <li>100. Same Tree</li> <li>1000. Minimum Cost to Merge Stones</li> <li>1001. Grid Illumination</li> <li>1002. Find Common Characters</li> <li>1003. Check If Word Is Valid After Substitutions</li> <li>1004. Max Consecutive Ones III</li> <li>1005. Maximize Sum Of Array After K Negations</li> <li>1006. Clumsy Factorial</li> <li>1007. Minimum Domino Rotations For Equal Row</li> <li>1008. Construct Binary Search Tree from Preorder Traversal</li> <li>1009. Complement of Base 10 Integer</li> <li>101. Symmetric Tree</li> <li>1010. Pairs of Songs With Total Durations Divisible by 60</li> <li>1011. Capacity To Ship Packages Within D Days</li> <li>1012. Numbers With Repeated Digits</li> <li>1013. Partition Array Into Three Parts With Equal Sum</li> <li>1014. Best Sightseeing Pair</li> <li>1015. Smallest Integer Divisible by K</li> <li>1016. Binary String With Substrings Representing 1 To N</li> <li>1017. Convert to Base -2</li> <li>1018. Binary Prefix Divisible By 5</li> <li>1019. Next Greater Node In Linked List</li> <li>102. Binary Tree Level Order Traversal</li> <li>1020. Number of Enclaves</li> <li>1021. Remove Outermost Parentheses</li> <li>1022. Sum of Root To Leaf Binary Numbers</li> <li>1023. Camelcase Matching</li> <li>1024. Video Stitching</li> <li>1025. Divisor Game</li> <li>1026. Maximum Difference Between Node and Ancestor</li> <li>1027. Longest Arithmetic Subsequence</li> <li>1028. Recover a Tree From Preorder Traversal</li> <li>1029. Two City Scheduling</li> <li>103. Binary Tree Zigzag Level Order Traversal</li> <li>1030. Matrix Cells in Distance Order</li> <li>1031. Maximum Sum of Two Non-Overlapping Subarrays</li> <li>1032. Stream of Characters</li> <li>1033. Moving Stones Until Consecutive</li> <li>1034. Coloring A Border</li> <li>1035. Uncrossed Lines</li> <li>1036. Escape a Large Maze</li> <li>1037. Valid Boomerang</li> <li>1038. Binary Search Tree to Greater Sum Tree</li> <li>1039. Minimum Score Triangulation of Polygon</li> <li>104. Maximum Depth of Binary Tree</li> <li>1040. Moving Stones Until Consecutive II</li> <li>1041. Robot Bounded In Circle</li> <li>1042. Flower Planting With No Adjacent</li> <li>1043. Partition Array for Maximum Sum</li> <li>1044. Longest Duplicate Substring</li> <li>1045. Customers Who Bought All Products</li> <li>1046. Last Stone Weight</li> <li>1047. Remove All Adjacent Duplicates In String</li> <li>1048. Longest String Chain</li> <li>1049. Last Stone Weight II</li> <li>105. Construct Binary Tree from Preorder and Inorder Traversal</li> <li>1050. Actors and Directors Who Cooperated At Least Three Times</li> <li>1051. Height Checker</li> <li>1052. Grumpy Bookstore Owner</li> <li>1053. Previous Permutation With One Swap</li> <li>1054. Distant Barcodes</li> <li>1055. Shortest Way to Form String</li> <li>1056. Confusing Number</li> <li>1057. Campus Bikes</li> <li>1058. Minimize Rounding Error to Meet Target</li> <li>1059. All Paths from Source Lead to Destination</li> <li>106. Construct Binary Tree from Inorder and Postorder Traversal</li> <li>1060. Missing Element in Sorted Array</li> <li>1061. Lexicographically Smallest Equivalent String</li> <li>1062. Longest Repeating Substring</li> <li>1063. Number of Valid Subarrays</li> <li>1064. Fixed Point</li> <li>1065. Index Pairs of a String</li> <li>1066. Campus Bikes II</li> <li>1067. Digit Count in Range</li> <li>1068. Product Sales Analysis I</li> <li>1069. Product Sales Analysis II</li> <li>107. Binary Tree Level Order Traversal II</li> <li>1070. Product Sales Analysis III</li> <li>1071. Greatest Common Divisor of Strings</li> <li>1072. Flip Columns For Maximum Number of Equal Rows</li> <li>1073. Adding Two Negabinary Numbers</li> <li>1074. Number of Submatrices That Sum to Target</li> <li>1075. Project Employees I</li> <li>1076. Project Employees II</li> <li>1077. Project Employees III</li> <li>1078. Occurrences After Bigram</li> <li>1079. Letter Tile Possibilities</li> <li>108. Convert Sorted Array to Binary Search Tree</li> <li>1080. Insufficient Nodes in Root to Leaf Paths</li> <li>1081. Smallest Subsequence of Distinct Characters</li> <li>1082. Sales Analysis I</li> <li>1083. Sales Analysis II</li> <li>1084. Sales Analysis III</li> <li>1085. Sum of Digits in the Minimum Number</li> <li>1086. High Five</li> <li>1087. Brace Expansion</li> <li>1088. Confusing Number II</li> <li>1089. Duplicate Zeros</li> <li>109. Convert Sorted List to Binary Search Tree</li> <li>1090. Largest Values From Labels</li> <li>1091. Shortest Path in Binary Matrix</li> <li>1092. Shortest Common Supersequence</li> <li>1093. Statistics from a Large Sample</li> <li>1094. Car Pooling</li> <li>1095. Find in Mountain Array</li> <li>1096. Brace Expansion II</li> <li>1097. Game Play Analysis V</li> <li>1098. Unpopular Books</li> <li>1099. Two Sum Less Than K</li> <li>11. Container With Most Water</li> <li>110. Balanced Binary Tree</li> <li>1100. Find K-Length Substrings With No Repeated Characters</li> <li>1101. The Earliest Moment When Everyone Become Friends</li> <li>1102. Path With Maximum Minimum Value</li> <li>1103. Distribute Candies to People</li> <li>1104. Path In Zigzag Labelled Binary Tree</li> <li>1105. Filling Bookcase Shelves</li> <li>1106. Parsing A Boolean Expression</li> <li>1107. New Users Daily Count</li> <li>1108. Defanging an IP Address</li> <li>1109. Corporate Flight Bookings</li> <li>111. Minimum Depth of Binary Tree</li> <li>1110. Delete Nodes And Return Forest</li> <li>1111. Maximum Nesting Depth of Two Valid Parentheses Strings</li> <li>1112. Highest Grade For Each Student</li> <li>1113. Reported Posts</li> <li>1114. Print in Order</li> <li>1115. Print FooBar Alternately</li> <li>1116. Print Zero Even Odd</li> <li>1117. Building H2O</li> <li>1118. Number of Days in a Month</li> <li>1119. Remove Vowels from a String</li> <li>112. Path Sum</li> <li>1120. Maximum Average Subtree</li> <li>1121. Divide Array Into Increasing Sequences</li> <li>1122. Relative Sort Array</li> <li>1123. Lowest Common Ancestor of Deepest Leaves</li> <li>1124. Longest Well-Performing Interval</li> <li>1125. Smallest Sufficient Team</li> <li>1126. Active Businesses</li> <li>1127. User Purchase Platform</li> <li>1128. Number of Equivalent Domino Pairs</li> <li>1129. Shortest Path with Alternating Colors</li> <li>113. Path Sum II</li> <li>1130. Minimum Cost Tree From Leaf Values</li> <li>1131. Maximum of Absolute Value Expression</li> <li>1132. Reported Posts II</li> <li>1133. Largest Unique Number</li> <li>1134. Armstrong Number</li> <li>1135. Connecting Cities With Minimum Cost</li> <li>1136. Parallel Courses</li> <li>1137. N-th Tribonacci Number</li> <li>1138. Alphabet Board Path</li> <li>1139. Largest 1-Bordered Square</li> <li>114. Flatten Binary Tree to Linked List</li> <li>1140. Stone Game II</li> <li>1141. User Activity for the Past 30 Days I</li> <li>1142. User Activity for the Past 30 Days II</li> <li>1143. Longest Common Subsequence</li> <li>1144. Decrease Elements To Make Array Zigzag</li> <li>1145. Binary Tree Coloring Game</li> <li>1146. Snapshot Array</li> <li>1147. Longest Chunked Palindrome Decomposition</li> <li>1148. Article Views I</li> <li>1149. Article Views II</li> <li>115. Distinct Subsequences</li> <li>1150. Check If a Number Is Majority Element in a Sorted Array</li> <li>1151. Minimum Swaps to Group All 1's Together</li> <li>1152. Analyze User Website Visit Pattern</li> <li>1153. String Transforms Into Another String</li> <li>1154. Day of the Year</li> <li>1155. Number of Dice Rolls With Target Sum</li> <li>1156. Swap For Longest Repeated Character Substring</li> <li>1157. Online Majority Element In Subarray</li> <li>1158. Market Analysis I</li> <li>1159. Market Analysis II</li> <li>116. Populating Next Right Pointers in Each Node</li> <li>1160. Find Words That Can Be Formed by Characters</li> <li>1161. Maximum Level Sum of a Binary Tree</li> <li>1162. As Far from Land as Possible</li> <li>1163. Last Substring in Lexicographical Order</li> <li>1164. Product Price at a Given Date</li> <li>1165. Single-Row Keyboard</li> <li>1166. Design File System</li> <li>1167. Minimum Cost to Connect Sticks</li> <li>1168. Optimize Water Distribution in a Village</li> <li>1169. Invalid Transactions</li> <li>117. Populating Next Right Pointers in Each Node II</li> <li>1170. Compare Strings by Frequency of the Smallest Character</li> <li>1171. Remove Zero Sum Consecutive Nodes from Linked List</li> <li>1172. Dinner Plate Stacks</li> <li>1173. Immediate Food Delivery I</li> <li>1174. Immediate Food Delivery II</li> <li>1175. Prime Arrangements</li> <li>1176. Diet Plan Performance</li> <li>1177. Can Make Palindrome from Substring</li> <li>1178. Number of Valid Words for Each Puzzle</li> <li>1179. Reformat Department Table</li> <li>118. Pascal's Triangle</li> <li>1180. Count Substrings with Only One Distinct Letter</li> <li>1181. Before and After Puzzle</li> <li>1182. Shortest Distance to Target Color</li> <li>1183. Maximum Number of Ones</li> <li>1184. Distance Between Bus Stops</li> <li>1185. Day of the Week</li> <li>1186. Maximum Subarray Sum with One Deletion</li> <li>1187. Make Array Strictly Increasing</li> <li>1188. Design Bounded Blocking Queue</li> <li>1189. Maximum Number of Balloons</li> <li>119. Pascal's Triangle II</li> <li>1190. Reverse Substrings Between Each Pair of Parentheses</li> <li>1191. K-Concatenation Maximum Sum</li> <li>1192. Critical Connections in a Network</li> <li>1193. Monthly Transactions I</li> <li>1194. Tournament Winners</li> <li>1195. Fizz Buzz Multithreaded</li> <li>1196. How Many Apples Can You Put into the Basket</li> <li>1197. Minimum Knight Moves</li> <li>1198. Find Smallest Common Element in All Rows</li> <li>1199. Minimum Time to Build Blocks</li> <li>12. Integer to Roman</li> <li>120. Triangle</li> <li>1200. Minimum Absolute Difference</li> <li>1201. Ugly Number III</li> <li>1202. Smallest String With Swaps</li> <li>1203. Sort Items by Groups Respecting Dependencies</li> <li>1204. Last Person to Fit in the Bus</li> <li>1205. Monthly Transactions II</li> <li>1206. Design Skiplist</li> <li>1207. Unique Number of Occurrences</li> <li>1208. Get Equal Substrings Within Budget</li> <li>1209. Remove All Adjacent Duplicates in String II</li> <li>121. Best Time to Buy and Sell Stock</li> <li>1210. Minimum Moves to Reach Target with Rotations</li> <li>1211. Queries Quality and Percentage</li> <li>1212. Team Scores in Football Tournament</li> <li>1213. Intersection of Three Sorted Arrays</li> <li>1214. Two Sum BSTs</li> <li>1215. Stepping Numbers</li> <li>1216. Valid Palindrome III</li> <li>1217. Minimum Cost to Move Chips to The Same Position</li> <li>1218. Longest Arithmetic Subsequence of Given Difference</li> <li>1219. Path with Maximum Gold</li> <li>122. Best Time to Buy and Sell Stock II</li> <li>1220. Count Vowels Permutation</li> <li>1221. Split a String in Balanced Strings</li> <li>1222. Queens That Can Attack the King</li> <li>1223. Dice Roll Simulation</li> <li>1224. Maximum Equal Frequency</li> <li>1225. Report Contiguous Dates</li> <li>1226. The Dining Philosophers</li> <li>1227. Airplane Seat Assignment Probability</li> <li>1228. Missing Number In Arithmetic Progression</li> <li>1229. Meeting Scheduler</li> <li>123. Best Time to Buy and Sell Stock III</li> <li>1230. Toss Strange Coins</li> <li>1231. Divide Chocolate</li> <li>1232. Check If It Is a Straight Line</li> <li>1233. Remove Sub-Folders from the Filesystem</li> <li>1234. Replace the Substring for Balanced String</li> <li>1235. Maximum Profit in Job Scheduling</li> <li>1236. Web Crawler</li> <li>1237. Find Positive Integer Solution for a Given Equation</li> <li>1238. Circular Permutation in Binary Representation</li> <li>1239. Maximum Length of a Concatenated String with Unique Characters</li> <li>124. Binary Tree Maximum Path Sum</li> <li>1240. Tiling a Rectangle with the Fewest Squares</li> <li>1241. Number of Comments per Post</li> <li>1242. Web Crawler Multithreaded</li> <li>1243. Array Transformation</li> <li>1244. Design A Leaderboard</li> <li>1245. Tree Diameter</li> <li>1246. Palindrome Removal</li> <li>1247. Minimum Swaps to Make Strings Equal</li> <li>1248. Count Number of Nice Subarrays</li> <li>1249. Minimum Remove to Make Valid Parentheses</li> <li>125. Valid Palindrome</li> <li>1250. Check If It Is a Good Array</li> <li>1251. Average Selling Price</li> <li>1252. Cells with Odd Values in a Matrix</li> <li>1253. Reconstruct a 2-Row Binary Matrix</li> <li>1254. Number of Closed Islands</li> <li>1255. Maximum Score Words Formed by Letters</li> <li>1256. Encode Number</li> <li>1257. Smallest Common Region</li> <li>1258. Synonymous Sentences</li> <li>1259. Handshakes That Don't Cross</li> <li>126. Word Ladder II</li> <li>1260. Shift 2D Grid</li> <li>1261. Find Elements in a Contaminated Binary Tree</li> <li>1262. Greatest Sum Divisible by Three</li> <li>1263. Minimum Moves to Move a Box to Their Target Location</li> <li>1264. Page Recommendations</li> <li>1265. Print Immutable Linked List in Reverse</li> <li>1266. Minimum Time Visiting All Points</li> <li>1267. Count Servers that Communicate</li> <li>1268. Search Suggestions System</li> <li>1269. Number of Ways to Stay in the Same Place After Some Steps</li> <li>127. Word Ladder</li> <li>1270. All People Report to the Given Manager</li> <li>1271. Hexspeak</li> <li>1272. Remove Interval</li> <li>1273. Delete Tree Nodes</li> <li>1274. Number of Ships in a Rectangle</li> <li>1275. Find Winner on a Tic Tac Toe Game</li> <li>1276. Number of Burgers with No Waste of Ingredients</li> <li>1277. Count Square Submatrices with All Ones</li> <li>1278. Palindrome Partitioning III</li> <li>1279. Traffic Light Controlled Intersection</li> <li>128. Longest Consecutive Sequence</li> <li>1280. Students and Examinations</li> <li>1281. Subtract the Product and Sum of Digits of an Integer</li> <li>1282. Group the People Given the Group Size They Belong To</li> <li>1283. Find the Smallest Divisor Given a Threshold</li> <li>1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix</li> <li>1285. Find the Start and End Number of Continuous Ranges</li> <li>1286. Iterator for Combination</li> <li>1287. Element Appearing More Than 25% In Sorted Array</li> <li>1288. Remove Covered Intervals</li> <li>1289. Minimum Falling Path Sum II</li> <li>129. Sum Root to Leaf Numbers</li> <li>1290. Convert Binary Number in a Linked List to Integer</li> <li>1291. Sequential Digits</li> <li>1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold</li> <li>1293. Shortest Path in a Grid with Obstacles Elimination</li> <li>1294. Weather Type in Each Country</li> <li>1295. Find Numbers with Even Number of Digits</li> <li>1296. Divide Array in Sets of K Consecutive Numbers</li> <li>1297. Maximum Number of Occurrences of a Substring</li> <li>1298. Maximum Candies You Can Get from Boxes</li> <li>1299. Replace Elements with Greatest Element on Right Side</li> <li>13. Roman to Integer</li> <li>130. Surrounded Regions</li> <li>1300. Sum of Mutated Array Closest to Target</li> <li>1301. Number of Paths with Max Score</li> <li>1302. Deepest Leaves Sum</li> <li>1303. Find the Team Size</li> <li>1304. Find N Unique Integers Sum up to Zero</li> <li>1305. All Elements in Two Binary Search Trees</li> <li>1306. Jump Game III</li> <li>1307. Verbal Arithmetic Puzzle</li> <li>1308. Running Total for Different Genders</li> <li>1309. Decrypt String from Alphabet to Integer Mapping</li> <li>131. Palindrome Partitioning</li> <li>1310. XOR Queries of a Subarray</li> <li>1311. Get Watched Videos by Your Friends</li> <li>1312. Minimum Insertion Steps to Make a String Palindrome</li> <li>1313. Decompress Run-Length Encoded List</li> <li>1314. Matrix Block Sum</li> <li>1315. Sum of Nodes with Even-Valued Grandparent</li> <li>1316. Distinct Echo Substrings</li> <li>1317. Convert Integer to the Sum of Two No-Zero Integers</li> <li>1318. Minimum Flips to Make a OR b Equal to c</li> <li>1319. Number of Operations to Make Network Connected</li> <li>132. Palindrome Partitioning II</li> <li>1320. Minimum Distance to Type a Word Using Two Fingers</li> <li>1321. Restaurant Growth</li> <li>1322. Ads Performance</li> <li>1323. Maximum 69 Number</li> <li>1324. Print Words Vertically</li> <li>1325. Delete Leaves With a Given Value</li> <li>1326. Minimum Number of Taps to Open to Water a Garden</li> <li>1327. List the Products Ordered in a Period</li> <li>1328. Break a Palindrome</li> <li>1329. Sort the Matrix Diagonally</li> <li>133. Clone Graph</li> <li>1330. Reverse Subarray To Maximize Array Value</li> <li>1331. Rank Transform of an Array</li> <li>1332. Remove Palindromic Subsequences</li> <li>1333. Filter Restaurants by Vegan-Friendly, Price and Distance</li> <li>1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance</li> <li>1335. Minimum Difficulty of a Job Schedule</li> <li>1336. Number of Transactions per Visit</li> <li>1337. The K Weakest Rows in a Matrix</li> <li>1338. Reduce Array Size to The Half</li> <li>1339. Maximum Product of Splitted Binary Tree</li> <li>134. Gas Station</li> <li>1340. Jump Game V</li> <li>1341. Movie Rating</li> <li>1342. Number of Steps to Reduce a Number to Zero</li> <li>1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold</li> <li>1344. Angle Between Hands of a Clock</li> <li>1345. Jump Game IV</li> <li>1346. Check If N and Its Double Exist</li> <li>1347. Minimum Number of Steps to Make Two Strings Anagram</li> <li>1348. Tweet Counts Per Frequency</li> <li>1349. Maximum Students Taking Exam</li> <li>135. Candy</li> <li>1350. Students With Invalid Departments</li> <li>1351. Count Negative Numbers in a Sorted Matrix</li> <li>1352. Product of the Last K Numbers</li> <li>1353. Maximum Number of Events That Can Be Attended</li> <li>1354. Construct Target Array With Multiple Sums</li> <li>1355. Activity Participants</li> <li>1356. Sort Integers by The Number of 1 Bits</li> <li>1357. Apply Discount Every n Orders</li> <li>1358. Number of Substrings Containing All Three Characters</li> <li>1359. Count All Valid Pickup and Delivery Options</li> <li>136. Single Number</li> <li>1360. Number of Days Between Two Dates</li> <li>1361. Validate Binary Tree Nodes</li> <li>1362. Closest Divisors</li> <li>1363. Largest Multiple of Three</li> <li>1364. Number of Trusted Contacts of a Customer</li> <li>1365. How Many Numbers Are Smaller Than the Current Number</li> <li>1366. Rank Teams by Votes</li> <li>1367. Linked List in Binary Tree</li> <li>1368. Minimum Cost to Make at Least One Valid Path in a Grid</li> <li>1369. Get the Second Most Recent Activity</li> <li>137. Single Number II</li> <li>1370. Increasing Decreasing String</li> <li>1371. Find the Longest Substring Containing Vowels in Even Counts</li> <li>1372. Longest ZigZag Path in a Binary Tree</li> <li>1373. Maximum Sum BST in Binary Tree</li> <li>1374. Generate a String With Characters That Have Odd Counts</li> <li>1375. Number of Times Binary String Is Prefix-Aligned</li> <li>1376. Time Needed to Inform All Employees</li> <li>1377. Frog Position After T Seconds</li> <li>1378. Replace Employee ID With The Unique Identifier</li> <li>1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree</li> <li>138. Copy List with Random Pointer</li> <li>1380. Lucky Numbers in a Matrix</li> <li>1381. Design a Stack With Increment Operation</li> <li>1382. Balance a Binary Search Tree</li> <li>1383. Maximum Performance of a Team</li> <li>1384. Total Sales Amount by Year</li> <li>1385. Find the Distance Value Between Two Arrays</li> <li>1386. Cinema Seat Allocation</li> <li>1387. Sort Integers by The Power Value</li> <li>1388. Pizza With 3n Slices</li> <li>1389. Create Target Array in the Given Order</li> <li>139. Word Break</li> <li>1390. Four Divisors</li> <li>1391. Check if There is a Valid Path in a Grid</li> <li>1392. Longest Happy Prefix</li> <li>1393. Capital Gain/Loss</li> <li>1394. Find Lucky Integer in an Array</li> <li>1395. Count Number of Teams</li> <li>1396. Design Underground System</li> <li>1397. Find All Good Strings</li> <li>1398. Customers Who Bought Products A and B but Not C</li> <li>1399. Count Largest Group</li> <li>14. Longest Common Prefix</li> <li>140. Word Break II</li> <li>1400. Construct K Palindrome Strings</li> <li>1401. Circle and Rectangle Overlapping</li> <li>1402. Reducing Dishes</li> <li>1403. Minimum Subsequence in Non-Increasing Order</li> <li>1404. Number of Steps to Reduce a Number in Binary Representation to One</li> <li>1405. Longest Happy String</li> <li>1406. Stone Game III</li> <li>1407. Top Travellers</li> <li>1408. String Matching in an Array</li> <li>1409. Queries on a Permutation With Key</li> <li>141. Linked List Cycle</li> <li>1410. HTML Entity Parser</li> <li>1411. Number of Ways to Paint N \u00d7 3 Grid</li> <li>1412. Find the Quiet Students in All Exams</li> <li>1413. Minimum Value to Get Positive Step by Step Sum</li> <li>1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K</li> <li>1415. The k-th Lexicographical String of All Happy Strings of Length n</li> <li>1416. Restore The Array</li> <li>1417. Reformat The String</li> <li>1418. Display Table of Food Orders in a Restaurant</li> <li>1419. Minimum Number of Frogs Croaking</li> <li>142. Linked List Cycle II</li> <li>1420. Build Array Where You Can Find The Maximum Exactly K Comparisons</li> <li>1421. NPV Queries</li> <li>1422. Maximum Score After Splitting a String</li> <li>1423. Maximum Points You Can Obtain from Cards</li> <li>1424. Diagonal Traverse II</li> <li>1425. Constrained Subsequence Sum</li> <li>1426. Counting Elements</li> <li>1427. Perform String Shifts</li> <li>1428. Leftmost Column with at Least a One</li> <li>1429. First Unique Number</li> <li>143. Reorder List</li> <li>1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree</li> <li>1431. Kids With the Greatest Number of Candies</li> <li>1432. Max Difference You Can Get From Changing an Integer</li> <li>1433. Check If a String Can Break Another String</li> <li>1434. Number of Ways to Wear Different Hats to Each Other</li> <li>1435. Create a Session Bar Chart</li> <li>1436. Destination City</li> <li>1437. Check If All 1's Are at Least Length K Places Away</li> <li>1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit</li> <li>1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows</li> <li>144. Binary Tree Preorder Traversal</li> <li>1440. Evaluate Boolean Expression</li> <li>1441. Build an Array With Stack Operations</li> <li>1442. Count Triplets That Can Form Two Arrays of Equal XOR</li> <li>1443. Minimum Time to Collect All Apples in a Tree</li> <li>1444. Number of Ways of Cutting a Pizza</li> <li>1445. Apples &amp; Oranges</li> <li>1446. Consecutive Characters</li> <li>1447. Simplified Fractions</li> <li>1448. Count Good Nodes in Binary Tree</li> <li>1449. Form Largest Integer With Digits That Add up to Target</li> <li>145. Binary Tree Postorder Traversal</li> <li>1450. Number of Students Doing Homework at a Given Time</li> <li>1451. Rearrange Words in a Sentence</li> <li>1452. People Whose List of Favorite Companies Is Not a Subset of Another List</li> <li>1453. Maximum Number of Darts Inside of a Circular Dartboard</li> <li>1454. Active Users</li> <li>1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence</li> <li>1456. Maximum Number of Vowels in a Substring of Given Length</li> <li>1457. Pseudo-Palindromic Paths in a Binary Tree</li> <li>1458. Max Dot Product of Two Subsequences</li> <li>1459. Rectangles Area</li> <li>146. LRU Cache</li> <li>1460. Make Two Arrays Equal by Reversing Subarrays</li> <li>1461. Check If a String Contains All Binary Codes of Size K</li> <li>1462. Course Schedule IV</li> <li>1463. Cherry Pickup II</li> <li>1464. Maximum Product of Two Elements in an Array</li> <li>1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</li> <li>1466. Reorder Routes to Make All Paths Lead to the City Zero</li> <li>1467. Probability of a Two Boxes Having The Same Number of Distinct Balls</li> <li>1468. Calculate Salaries</li> <li>1469. Find All The Lonely Nodes</li> <li>147. Insertion Sort List</li> <li>1470. Shuffle the Array</li> <li>1471. The k Strongest Values in an Array</li> <li>1472. Design Browser History</li> <li>1473. Paint House III</li> <li>1474. Delete N Nodes After M Nodes of a Linked List</li> <li>1475. Final Prices With a Special Discount in a Shop</li> <li>1476. Subrectangle Queries</li> <li>1477. Find Two Non-overlapping Sub-arrays Each With Target Sum</li> <li>1478. Allocate Mailboxes</li> <li>1479. Sales by Day of the Week</li> <li>148. Sort List</li> <li>1480. Running Sum of 1d Array</li> <li>1481. Least Number of Unique Integers after K Removals</li> <li>1482. Minimum Number of Days to Make m Bouquets</li> <li>1483. Kth Ancestor of a Tree Node</li> <li>1484. Group Sold Products By The Date</li> <li>1485. Clone Binary Tree With Random Pointer</li> <li>1486. XOR Operation in an Array</li> <li>1487. Making File Names Unique</li> <li>1488. Avoid Flood in The City</li> <li>1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree</li> <li>149. Max Points on a Line</li> <li>1490. Clone N-ary Tree</li> <li>1491. Average Salary Excluding the Minimum and Maximum Salary</li> <li>1492. The kth Factor of n</li> <li>1493. Longest Subarray of 1's After Deleting One Element</li> <li>1494. Parallel Courses II</li> <li>1495. Friendly Movies Streamed Last Month</li> <li>1496. Path Crossing</li> <li>1497. Check If Array Pairs Are Divisible by k</li> <li>1498. Number of Subsequences That Satisfy the Given Sum Condition</li> <li>1499. Max Value of Equation</li> <li>15. 3Sum</li> <li>150. Evaluate Reverse Polish Notation</li> <li>1500. Design a File Sharing System</li> <li>1501. Countries You Can Safely Invest In</li> <li>1502. Can Make Arithmetic Progression From Sequence</li> <li>1503. Last Moment Before All Ants Fall Out of a Plank</li> <li>1504. Count Submatrices With All Ones</li> <li>1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits</li> <li>1506. Find Root of N-Ary Tree</li> <li>1507. Reformat Date</li> <li>1508. Range Sum of Sorted Subarray Sums</li> <li>1509. Minimum Difference Between Largest and Smallest Value in Three Moves</li> <li>151. Reverse Words in a String</li> <li>1510. Stone Game IV</li> <li>1511. Customer Order Frequency</li> <li>1512. Number of Good Pairs</li> <li>1513. Number of Substrings With Only 1s</li> <li>1514. Path with Maximum Probability</li> <li>1515. Best Position for a Service Centre</li> <li>1516. Move Sub-Tree of N-Ary Tree</li> <li>1517. Find Users With Valid E-Mails</li> <li>1518. Water Bottles</li> <li>1519. Number of Nodes in the Sub-Tree With the Same Label</li> <li>152. Maximum Product Subarray</li> <li>1520. Maximum Number of Non-Overlapping Substrings</li> <li>1521. Find a Value of a Mysterious Function Closest to Target</li> <li>1522. Diameter of N-Ary Tree</li> <li>1523. Count Odd Numbers in an Interval Range</li> <li>1524. Number of Sub-arrays With Odd Sum</li> <li>1525. Number of Good Ways to Split a String</li> <li>1526. Minimum Number of Increments on Subarrays to Form a Target Array</li> <li>1527. Patients With a Condition</li> <li>1528. Shuffle String</li> <li>1529. Minimum Suffix Flips</li> <li>153. Find Minimum in Rotated Sorted Array</li> <li>1530. Number of Good Leaf Nodes Pairs</li> <li>1531. String Compression II</li> <li>1532. The Most Recent Three Orders</li> <li>1533. Find the Index of the Large Integer</li> <li>1534. Count Good Triplets</li> <li>1535. Find the Winner of an Array Game</li> <li>1536. Minimum Swaps to Arrange a Binary Grid</li> <li>1537. Get the Maximum Score</li> <li>1538. Guess the Majority in a Hidden Array</li> <li>1539. Kth Missing Positive Number</li> <li>154. Find Minimum in Rotated Sorted Array II</li> <li>1540. Can Convert String in K Moves</li> <li>1541. Minimum Insertions to Balance a Parentheses String</li> <li>1542. Find Longest Awesome Substring</li> <li>1543. Fix Product Name Format</li> <li>1544. Make The String Great</li> <li>1545. Find Kth Bit in Nth Binary String</li> <li>1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target</li> <li>1547. Minimum Cost to Cut a Stick</li> <li>1548. The Most Similar Path in a Graph</li> <li>1549. The Most Recent Orders for Each Product</li> <li>155. Min Stack</li> <li>1550. Three Consecutive Odds</li> <li>1551. Minimum Operations to Make Array Equal</li> <li>1552. Magnetic Force Between Two Balls</li> <li>1553. Minimum Number of Days to Eat N Oranges</li> <li>1554. Strings Differ by One Character</li> <li>1555. Bank Account Summary</li> <li>1556. Thousand Separator</li> <li>1557. Minimum Number of Vertices to Reach All Nodes</li> <li>1558. Minimum Numbers of Function Calls to Make Target Array</li> <li>1559. Detect Cycles in 2D Grid</li> <li>156. Binary Tree Upside Down</li> <li>1560. Most Visited Sector in  a Circular Track</li> <li>1561. Maximum Number of Coins You Can Get</li> <li>1562. Find Latest Group of Size M</li> <li>1563. Stone Game V</li> <li>1564. Put Boxes Into the Warehouse I</li> <li>1565. Unique Orders and Customers Per Month</li> <li>1566. Detect Pattern of Length M Repeated K or More Times</li> <li>1567. Maximum Length of Subarray With Positive Product</li> <li>1568. Minimum Number of Days to Disconnect Island</li> <li>1569. Number of Ways to Reorder Array to Get Same BST</li> <li>157. Read N Characters Given Read4</li> <li>1570. Dot Product of Two Sparse Vectors</li> <li>1571. Warehouse Manager</li> <li>1572. Matrix Diagonal Sum</li> <li>1573. Number of Ways to Split a String</li> <li>1574. Shortest Subarray to be Removed to Make Array Sorted</li> <li>1575. Count All Possible Routes</li> <li>1576. Replace All ?'s to Avoid Consecutive Repeating Characters</li> <li>1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</li> <li>1578. Minimum Time to Make Rope Colorful</li> <li>1579. Remove Max Number of Edges to Keep Graph Fully Traversable</li> <li>158. Read N Characters Given read4 II - Call Multiple Times</li> <li>1580. Put Boxes Into the Warehouse II</li> <li>1581. Customer Who Visited but Did Not Make Any Transactions</li> <li>1582. Special Positions in a Binary Matrix</li> <li>1583. Count Unhappy Friends</li> <li>1584. Min Cost to Connect All Points</li> <li>1585. Check If String Is Transformable With Substring Sort Operations</li> <li>1586. Binary Search Tree Iterator II</li> <li>1587. Bank Account Summary II</li> <li>1588. Sum of All Odd Length Subarrays</li> <li>1589. Maximum Sum Obtained of Any Permutation</li> <li>159. Longest Substring with At Most Two Distinct Characters</li> <li>1590. Make Sum Divisible by P</li> <li>1591. Strange Printer II</li> <li>1592. Rearrange Spaces Between Words</li> <li>1593. Split a String Into the Max Number of Unique Substrings</li> <li>1594. Maximum Non Negative Product in a Matrix</li> <li>1595. Minimum Cost to Connect Two Groups of Points</li> <li>1596. The Most Frequently Ordered Products for Each Customer</li> <li>1597. Build Binary Expression Tree From Infix Expression</li> <li>1598. Crawler Log Folder</li> <li>1599. Maximum Profit of Operating a Centennial Wheel</li> <li>16. 3Sum Closest</li> <li>160. Intersection of Two Linked Lists</li> <li>1600. Throne Inheritance</li> <li>1601. Maximum Number of Achievable Transfer Requests</li> <li>1602. Find Nearest Right Node in Binary Tree</li> <li>1603. Design Parking System</li> <li>1604. Alert Using Same Key-Card Three or More Times in a One Hour Period</li> <li>1605. Find Valid Matrix Given Row and Column Sums</li> <li>1606. Find Servers That Handled Most Number of Requests</li> <li>1607. Sellers With No Sales</li> <li>1608. Special Array With X Elements Greater Than or Equal X</li> <li>1609. Even Odd Tree</li> <li>161. One Edit Distance</li> <li>1610. Maximum Number of Visible Points</li> <li>1611. Minimum One Bit Operations to Make Integers Zero</li> <li>1612. Check If Two Expression Trees are Equivalent</li> <li>1613. Find the Missing IDs</li> <li>1614. Maximum Nesting Depth of the Parentheses</li> <li>1615. Maximal Network Rank</li> <li>1616. Split Two Strings to Make Palindrome</li> <li>1617. Count Subtrees With Max Distance Between Cities</li> <li>1618. Maximum Font to Fit a Sentence in a Screen</li> <li>1619. Mean of Array After Removing Some Elements</li> <li>162. Find Peak Element</li> <li>1620. Coordinate With Maximum Network Quality</li> <li>1621. Number of Sets of K Non-Overlapping Line Segments</li> <li>1622. Fancy Sequence</li> <li>1623. All Valid Triplets That Can Represent a Country</li> <li>1624. Largest Substring Between Two Equal Characters</li> <li>1626. Best Team With No Conflicts</li> <li>1627. Graph Connectivity With Threshold</li> <li>1628. Design an Expression Tree With Evaluate Function</li> <li>1629. Slowest Key</li> <li>163. Missing Ranges</li> <li>1630. Arithmetic Subarrays</li> <li>1631. Path With Minimum Effort</li> <li>1632. Rank Transform of a Matrix</li> <li>1633. Percentage of Users Attended a Contest</li> <li>1634. Add Two Polynomials Represented as Linked Lists</li> <li>1635. Hopper Company Queries I</li> <li>1636. Sort Array by Increasing Frequency</li> <li>1637. Widest Vertical Area Between Two Points Containing No Points</li> <li>1638. Count Substrings That Differ by One Character</li> <li>1639. Number of Ways to Form a Target String Given a Dictionary</li> <li>164. Maximum Gap</li> <li>1640. Check Array Formation Through Concatenation</li> <li>1641. Count Sorted Vowel Strings</li> <li>1642. Furthest Building You Can Reach</li> <li>1643. Kth Smallest Instructions</li> <li>1644. Lowest Common Ancestor of a Binary Tree II</li> <li>1645. Hopper Company Queries II</li> <li>1646. Get Maximum in Generated Array</li> <li>1647. Minimum Deletions to Make Character Frequencies Unique</li> <li>1648. Sell Diminishing-Valued Colored Balls</li> <li>1649. Create Sorted Array through Instructions</li> <li>165. Compare Version Numbers</li> <li>1650. Lowest Common Ancestor of a Binary Tree III</li> <li>1651. Hopper Company Queries III</li> <li>1652. Defuse the Bomb</li> <li>1653. Minimum Deletions to Make String Balanced</li> <li>1654. Minimum Jumps to Reach Home</li> <li>1655. Distribute Repeating Integers</li> <li>1656. Design an Ordered Stream</li> <li>1657. Determine if Two Strings Are Close</li> <li>1658. Minimum Operations to Reduce X to Zero</li> <li>1659. Maximize Grid Happiness</li> <li>166. Fraction to Recurring Decimal</li> <li>1660. Correct a Binary Tree</li> <li>1661. Average Time of Process per Machine</li> <li>1662. Check If Two String Arrays are Equivalent</li> <li>1663. Smallest String With A Given Numeric Value</li> <li>1664. Ways to Make a Fair Array</li> <li>1665. Minimum Initial Energy to Finish Tasks</li> <li>1666. Change the Root of a Binary Tree</li> <li>1667. Fix Names in a Table</li> <li>1668. Maximum Repeating Substring</li> <li>1669. Merge In Between Linked Lists</li> <li>167. Two Sum II - Input Array Is Sorted</li> <li>1670. Design Front Middle Back Queue</li> <li>1671. Minimum Number of Removals to Make Mountain Array</li> <li>1672. Richest Customer Wealth</li> <li>1673. Find the Most Competitive Subsequence</li> <li>1674. Minimum Moves to Make Array Complementary</li> <li>1675. Minimize Deviation in Array</li> <li>1676. Lowest Common Ancestor of a Binary Tree IV</li> <li>1677. Product's Worth Over Invoices</li> <li>1678. Goal Parser Interpretation</li> <li>1679. Max Number of K-Sum Pairs</li> <li>168. Excel Sheet Column Title</li> <li>1680. Concatenation of Consecutive Binary Numbers</li> <li>1681. Minimum Incompatibility</li> <li>1682. Longest Palindromic Subsequence II</li> <li>1683. Invalid Tweets</li> <li>1684. Count the Number of Consistent Strings</li> <li>1685. Sum of Absolute Differences in a Sorted Array</li> <li>1686. Stone Game VI</li> <li>1687. Delivering Boxes from Storage to Ports</li> <li>1688. Count of Matches in Tournament</li> <li>1689. Partitioning Into Minimum Number Of Deci-Binary Numbers</li> <li>169. Majority Element</li> <li>1690. Stone Game VII</li> <li>1691. Maximum Height by Stacking Cuboids</li> <li>1692. Count Ways to Distribute Candies</li> <li>1693. Daily Leads and Partners</li> <li>1694. Reformat Phone Number</li> <li>1695. Maximum Erasure Value</li> <li>1696. Jump Game VI</li> <li>1697. Checking Existence of Edge Length Limited Paths</li> <li>1698. Number of Distinct Substrings in a String</li> <li>1699. Number of Calls Between Two Persons</li> <li>17. Letter Combinations of a Phone Number</li> <li>170. Two Sum III - Data structure design</li> <li>1701. Average Waiting Time</li> <li>1702. Maximum Binary String After Change</li> <li>1703. Minimum Adjacent Swaps for K Consecutive Ones</li> <li>1704. Determine if String Halves Are Alike</li> <li>1705. Maximum Number of Eaten Apples</li> <li>1706. Where Will the Ball Fall</li> <li>1707. Maximum XOR With an Element From Array</li> <li>1708. Largest Subarray Length K</li> <li>1709. Biggest Window Between Visits</li> <li>171. Excel Sheet Column Number</li> <li>1710. Maximum Units on a Truck</li> <li>1711. Count Good Meals</li> <li>1712. Ways to Split Array Into Three Subarrays</li> <li>1713. Minimum Operations to Make a Subsequence</li> <li>1714. Sum Of Special Evenly-Spaced Elements In Array</li> <li>1715. Count Apples and Oranges</li> <li>1716. Calculate Money in Leetcode Bank</li> <li>1717. Maximum Score From Removing Substrings</li> <li>1718. Construct the Lexicographically Largest Valid Sequence</li> <li>1719. Number Of Ways To Reconstruct A Tree</li> <li>172. Factorial Trailing Zeroes</li> <li>1720. Decode XORed Array</li> <li>1721. Swapping Nodes in a Linked List</li> <li>1722. Minimize Hamming Distance After Swap Operations</li> <li>1723. Find Minimum Time to Finish All Jobs</li> <li>1724. Checking Existence of Edge Length Limited Paths II</li> <li>1725. Number Of Rectangles That Can Form The Largest Square</li> <li>1726. Tuple with Same Product</li> <li>1727. Largest Submatrix With Rearrangements</li> <li>1728. Cat and Mouse II</li> <li>1729. Find Followers Count</li> <li>173. Binary Search Tree Iterator</li> <li>1730. Shortest Path to Get Food</li> <li>1731. The Number of Employees Which Report to Each Employee</li> <li>1732. Find the Highest Altitude</li> <li>1733. Minimum Number of People to Teach</li> <li>1734. Decode XORed Permutation</li> <li>1735. Count Ways to Make Array With Product</li> <li>1736. Latest Time by Replacing Hidden Digits</li> <li>1737. Change Minimum Characters to Satisfy One of Three Conditions</li> <li>1738. Find Kth Largest XOR Coordinate Value</li> <li>1739. Building Boxes</li> <li>174. Dungeon Game</li> <li>1740. Find Distance in a Binary Tree</li> <li>1741. Find Total Time Spent by Each Employee</li> <li>1742. Maximum Number of Balls in a Box</li> <li>1743. Restore the Array From Adjacent Pairs</li> <li>1744. Can You Eat Your Favorite Candy on Your Favorite Day?</li> <li>1745. Palindrome Partitioning IV</li> <li>1746. Maximum Subarray Sum After One Operation</li> <li>1747. Leetflex Banned Accounts</li> <li>1748. Sum of Unique Elements</li> <li>1749. Maximum Absolute Sum of Any Subarray</li> <li>175. Combine Two Tables</li> <li>1750. Minimum Length of String After Deleting Similar Ends</li> <li>1751. Maximum Number of Events That Can Be Attended II</li> <li>1752. Check if Array Is Sorted and Rotated</li> <li>1753. Maximum Score From Removing Stones</li> <li>1754. Largest Merge Of Two Strings</li> <li>1755. Closest Subsequence Sum</li> <li>1756. Design Most Recently Used Queue</li> <li>1757. Recyclable and Low Fat Products</li> <li>1758. Minimum Changes To Make Alternating Binary String</li> <li>1759. Count Number of Homogenous Substrings</li> <li>176. Second Highest Salary</li> <li>1760. Minimum Limit of Balls in a Bag</li> <li>1761. Minimum Degree of a Connected Trio in a Graph</li> <li>1762. Buildings With an Ocean View</li> <li>1763. Longest Nice Substring</li> <li>1764. Form Array by Concatenating Subarrays of Another Array</li> <li>1765. Map of Highest Peak</li> <li>1766. Tree of Coprimes</li> <li>1767. Find the Subtasks That Did Not Execute</li> <li>1768. Merge Strings Alternately</li> <li>1769. Minimum Number of Operations to Move All Balls to Each Box</li> <li>177. Nth Highest Salary</li> <li>1770. Maximum Score from Performing Multiplication Operations</li> <li>1771. Maximize Palindrome Length From Subsequences</li> <li>1772. Sort Features by Popularity</li> <li>1773. Count Items Matching a Rule</li> <li>1774. Closest Dessert Cost</li> <li>1775. Equal Sum Arrays With Minimum Number of Operations</li> <li>1776. Car Fleet II</li> <li>1777. Product's Price for Each Store</li> <li>1778. Shortest Path in a Hidden Grid</li> <li>1779. Find Nearest Point That Has the Same X or Y Coordinate</li> <li>178. Rank Scores</li> <li>1780. Check if Number is a Sum of Powers of Three</li> <li>1781. Sum of Beauty of All Substrings</li> <li>1782. Count Pairs Of Nodes</li> <li>1783. Grand Slam Titles</li> <li>1784. Check if Binary String Has at Most One Segment of Ones</li> <li>1785. Minimum Elements to Add to Form a Given Sum</li> <li>1786. Number of Restricted Paths From First to Last Node</li> <li>1787. Make the XOR of All Segments Equal to Zero</li> <li>1788. Maximize the Beauty of the Garden</li> <li>1789. Primary Department for Each Employee</li> <li>179. Largest Number</li> <li>1790. Check if One String Swap Can Make Strings Equal</li> <li>1791. Find Center of Star Graph</li> <li>1792. Maximum Average Pass Ratio</li> <li>1793. Maximum Score of a Good Subarray</li> <li>1794. Count Pairs of Equal Substrings With Minimum Difference</li> <li>1795. Rearrange Products Table</li> <li>1796. Second Largest Digit in a String</li> <li>1797. Design Authentication Manager</li> <li>1798. Maximum Number of Consecutive Values You Can Make</li> <li>1799. Maximize Score After N Operations</li> <li>18. 4Sum</li> <li>180. Consecutive Numbers</li> <li>1800. Maximum Ascending Subarray Sum</li> <li>1801. Number of Orders in the Backlog</li> <li>1802. Maximum Value at a Given Index in a Bounded Array</li> <li>1803. Count Pairs With XOR in a Range</li> <li>1804. Implement Trie II (Prefix Tree)</li> <li>1805. Number of Different Integers in a String</li> <li>1806. Minimum Number of Operations to Reinitialize a Permutation</li> <li>1807. Evaluate the Bracket Pairs of a String</li> <li>1808. Maximize Number of Nice Divisors</li> <li>1809. Ad-Free Sessions</li> <li>181. Employees Earning More Than Their Managers</li> <li>1810. Minimum Path Cost in a Hidden Grid</li> <li>1811. Find Interview Candidates</li> <li>1812. Determine Color of a Chessboard Square</li> <li>1813. Sentence Similarity III</li> <li>1814. Count Nice Pairs in an Array</li> <li>1815. Maximum Number of Groups Getting Fresh Donuts</li> <li>1816. Truncate Sentence</li> <li>1817. Finding the Users Active Minutes</li> <li>1818. Minimum Absolute Sum Difference</li> <li>1819. Number of Different Subsequences GCDs</li> <li>182. Duplicate Emails</li> <li>1820. Maximum Number of Accepted Invitations</li> <li>1821. Find Customers With Positive Revenue this Year</li> <li>1822. Sign of the Product of an Array</li> <li>1823. Find the Winner of the Circular Game</li> <li>1824. Minimum Sideway Jumps</li> <li>1825. Finding MK Average</li> <li>1826. Faulty Sensor</li> <li>1827. Minimum Operations to Make the Array Increasing</li> <li>1828. Queries on Number of Points Inside a Circle</li> <li>1829. Maximum XOR for Each Query</li> <li>183. Customers Who Never Order</li> <li>1830. Minimum Number of Operations to Make String Sorted</li> <li>1831. Maximum Transaction Each Day</li> <li>1832. Check if the Sentence Is Pangram</li> <li>1833. Maximum Ice Cream Bars</li> <li>1834. Single-Threaded CPU</li> <li>1835. Find XOR Sum of All Pairs Bitwise AND</li> <li>1836. Remove Duplicates From an Unsorted Linked List</li> <li>1837. Sum of Digits in Base K</li> <li>1838. Frequency of the Most Frequent Element</li> <li>1839. Longest Substring Of All Vowels in Order</li> <li>184. Department Highest Salary</li> <li>1840. Maximum Building Height</li> <li>1841. League Statistics</li> <li>1842. Next Palindrome Using Same Digits</li> <li>1843. Suspicious Bank Accounts</li> <li>1844. Replace All Digits with Characters</li> <li>1845. Seat Reservation Manager</li> <li>1846. Maximum Element After Decreasing and Rearranging</li> <li>1847. Closest Room</li> <li>1848. Minimum Distance to the Target Element</li> <li>1849. Splitting a String Into Descending Consecutive Values</li> <li>185. Department Top Three Salaries</li> <li>1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number</li> <li>1851. Minimum Interval to Include Each Query</li> <li>1852. Distinct Numbers in Each Subarray</li> <li>1853. Convert Date Format</li> <li>1854. Maximum Population Year</li> <li>1855. Maximum Distance Between a Pair of Values</li> <li>1856. Maximum Subarray Min-Product</li> <li>1857. Largest Color Value in a Directed Graph</li> <li>1858. Longest Word With All Prefixes</li> <li>1859. Sorting the Sentence</li> <li>186. Reverse Words in a String II</li> <li>1860. Incremental Memory Leak</li> <li>1861. Rotating the Box</li> <li>1862. Sum of Floored Pairs</li> <li>1863. Sum of All Subset XOR Totals</li> <li>1864. Minimum Number of Swaps to Make the Binary String Alternating</li> <li>1865. Finding Pairs With a Certain Sum</li> <li>1866. Number of Ways to Rearrange Sticks With K Sticks Visible</li> <li>1867. Orders With Maximum Quantity Above Average</li> <li>1868. Product of Two Run-Length Encoded Arrays</li> <li>1869. Longer Contiguous Segments of Ones than Zeros</li> <li>187. Repeated DNA Sequences</li> <li>1870. Minimum Speed to Arrive on Time</li> <li>1871. Jump Game VII</li> <li>1872. Stone Game VIII</li> <li>1873. Calculate Special Bonus</li> <li>1874. Minimize Product Sum of Two Arrays</li> <li>1875. Group Employees of the Same Salary</li> <li>1876. Substrings of Size Three with Distinct Characters</li> <li>1877. Minimize Maximum Pair Sum in Array</li> <li>1878. Get Biggest Three Rhombus Sums in a Grid</li> <li>1879. Minimum XOR Sum of Two Arrays</li> <li>188. Best Time to Buy and Sell Stock IV</li> <li>1880. Check if Word Equals Summation of Two Words</li> <li>1881. Maximum Value after Insertion</li> <li>1882. Process Tasks Using Servers</li> <li>1883. Minimum Skips to Arrive at Meeting On Time</li> <li>1884. Egg Drop With 2 Eggs and N Floors</li> <li>1885. Count Pairs in Two Arrays</li> <li>1886. Determine Whether Matrix Can Be Obtained By Rotation</li> <li>1887. Reduction Operations to Make the Array Elements Equal</li> <li>1888. Minimum Number of Flips to Make the Binary String Alternating</li> <li>1889. Minimum Space Wasted From Packaging</li> <li>189. Rotate Array</li> <li>1890. The Latest Login in 2020</li> <li>1891. Cutting Ribbons</li> <li>1892. Page Recommendations II</li> <li>1893. Check if All the Integers in a Range Are Covered</li> <li>1894. Find the Student that Will Replace the Chalk</li> <li>1895. Largest Magic Square</li> <li>1896. Minimum Cost to Change the Final Value of Expression</li> <li>1897. Redistribute Characters to Make All Strings Equal</li> <li>1898. Maximum Number of Removable Characters</li> <li>1899. Merge Triplets to Form Target Triplet</li> <li>19. Remove Nth Node From End of List</li> <li>190. Reverse Bits</li> <li>1900. The Earliest and Latest Rounds Where Players Compete</li> <li>1901. Find a Peak Element II</li> <li>1902. Depth of BST Given Insertion Order</li> <li>1903. Largest Odd Number in String</li> <li>1904. The Number of Full Rounds You Have Played</li> <li>1905. Count Sub Islands</li> <li>1906. Minimum Absolute Difference Queries</li> <li>1907. Count Salary Categories</li> <li>1908. Game of Nim</li> <li>1909. Remove One Element to Make the Array Strictly Increasing</li> <li>191. Number of 1 Bits</li> <li>1910. Remove All Occurrences of a Substring</li> <li>1911. Maximum Alternating Subsequence Sum</li> <li>1912. Design Movie Rental System</li> <li>1913. Maximum Product Difference Between Two Pairs</li> <li>1914. Cyclically Rotating a Grid</li> <li>1915. Number of Wonderful Substrings</li> <li>1916. Count Ways to Build Rooms in an Ant Colony</li> <li>1917. Leetcodify Friends Recommendations</li> <li>1918. Kth Smallest Subarray Sum</li> <li>1919. Leetcodify Similar Friends</li> <li>192. Word Frequency</li> <li>1920. Build Array from Permutation</li> <li>1921. Eliminate Maximum Number of Monsters</li> <li>1922. Count Good Numbers</li> <li>1923. Longest Common Subpath</li> <li>1924. Erect the Fence II</li> <li>1925. Count Square Sum Triples</li> <li>1927. Sum Game</li> <li>1928. Minimum Cost to Reach Destination in Time</li> <li>1929. Concatenation of Array</li> <li>193. Valid Phone Numbers</li> <li>1930. Unique Length-3 Palindromic Subsequences</li> <li>1931. Painting a Grid With Three Different Colors</li> <li>1932. Merge BSTs to Create Single BST</li> <li>1933. Check if String Is Decomposable Into Value-Equal Substrings</li> <li>1934. Confirmation Rate</li> <li>1935. Maximum Number of Words You Can Type</li> <li>1936. Add Minimum Number of Rungs</li> <li>1937. Maximum Number of Points with Cost</li> <li>1938. Maximum Genetic Difference Query</li> <li>1939. Users That Actively Request Confirmation Messages</li> <li>194. Transpose File</li> <li>1940. Longest Common Subsequence Between Sorted Arrays</li> <li>1941. Check if All Characters Have Equal Number of Occurrences</li> <li>1942. The Number of the Smallest Unoccupied Chair</li> <li>1943. Describe the Painting</li> <li>1944. Number of Visible People in a Queue</li> <li>1945. Sum of Digits of String After Convert</li> <li>1946. Largest Number After Mutating Substring</li> <li>1947. Maximum Compatibility Score Sum</li> <li>1948. Delete Duplicate Folders in System</li> <li>1949. Strong Friendship</li> <li>195. Tenth Line</li> <li>1950. Maximum of Minimum Values in All Subarrays</li> <li>1951. All the Pairs With the Maximum Number of Common Followers</li> <li>1952. Three Divisors</li> <li>1953. Maximum Number of Weeks for Which You Can Work</li> <li>1954. Minimum Garden Perimeter to Collect Enough Apples</li> <li>1955. Count Number of Special Subsequences</li> <li>1956. Minimum Time For K Virus Variants to Spread</li> <li>1957. Delete Characters to Make Fancy String</li> <li>1959. Minimum Total Space Wasted With K Resizing Operations</li> <li>196. Delete Duplicate Emails</li> <li>1960. Maximum Product of the Length of Two Palindromic Substrings</li> <li>1961. Check If String Is a Prefix of Array</li> <li>1962. Remove Stones to Minimize the Total</li> <li>1964. Find the Longest Valid Obstacle Course at Each Position</li> <li>1965. Employees With Missing Information</li> <li>1966. Binary Searchable Numbers in an Unsorted Array</li> <li>1967. Number of Strings That Appear as Substrings in Word</li> <li>1968. Array With Elements Not Equal to Average of Neighbors</li> <li>1969. Minimum Non-Zero Product of the Array Elements</li> <li>197. Rising Temperature</li> <li>1970. Last Day Where You Can Still Cross</li> <li>1971. Find if Path Exists in Graph</li> <li>1972. First and Last Call On the Same Day</li> <li>1973. Count Nodes Equal to Sum of Descendants</li> <li>1975. Maximum Matrix Sum</li> <li>1976. Number of Ways to Arrive at Destination</li> <li>1977. Number of Ways to Separate Numbers</li> <li>1978. Employees Whose Manager Left the Company</li> <li>1979. Find Greatest Common Divisor of Array</li> <li>198. House Robber</li> <li>1980. Find Unique Binary String</li> <li>1981. Minimize the Difference Between Target and Chosen Elements</li> <li>1982. Find Array Given Subset Sums</li> <li>1983. Widest Pair of Indices With Equal Range Sum</li> <li>1984. Minimum Difference Between Highest and Lowest of K Scores</li> <li>1985. Find the Kth Largest Integer in the Array</li> <li>1986. Minimum Number of Work Sessions to Finish the Tasks</li> <li>1987. Number of Unique Good Subsequences</li> <li>1988. Find Cutoff Score for Each School</li> <li>1989. Maximum Number of People That Can Be Caught in Tag</li> <li>199. Binary Tree Right Side View</li> <li>1990. Count the Number of Experiments</li> <li>1991. Find the Middle Index in Array</li> <li>1992. Find All Groups of Farmland</li> <li>1993. Operations on Tree</li> <li>1994. The Number of Good Subsets</li> <li>1995. Count Special Quadruplets</li> <li>1996. The Number of Weak Characters in the Game</li> <li>1997. First Day Where You Have Been in All the Rooms</li> <li>1998. GCD Sort of an Array</li> <li>1999. Smallest Greater Multiple Made of Two Digits</li> <li>2. Add Two Numbers</li> <li>20. Valid Parentheses</li> <li>200. Number of Islands</li> <li>2000. Reverse Prefix of Word</li> <li>2001. Number of Pairs of Interchangeable Rectangles</li> <li>2002. Maximum Product of the Length of Two Palindromic Subsequences</li> <li>2003. Smallest Missing Genetic Value in Each Subtree</li> <li>2004. The Number of Seniors and Juniors to Join the Company</li> <li>2005. Subtree Removal Game with Fibonacci Tree</li> <li>2006. Count Number of Pairs With Absolute Difference K</li> <li>2007. Find Original Array From Doubled Array</li> <li>2008. Maximum Earnings From Taxi</li> <li>2009. Minimum Number of Operations to Make Array Continuous</li> <li>201. Bitwise AND of Numbers Range</li> <li>2010. The Number of Seniors and Juniors to Join the Company II</li> <li>2011. Final Value of Variable After Performing Operations</li> <li>2012. Sum of Beauty in the Array</li> <li>2013. Detect Squares</li> <li>2014. Longest Subsequence Repeated k Times</li> <li>2015. Average Height of Buildings in Each Segment</li> <li>2016. Maximum Difference Between Increasing Elements</li> <li>2017. Grid Game</li> <li>2018. Check if Word Can Be Placed In Crossword</li> <li>2019. The Score of Students Solving Math Expression</li> <li>202. Happy Number</li> <li>2020. Number of Accounts That Did Not Stream</li> <li>2021. Brightest Position on Street</li> <li>2022. Convert 1D Array Into 2D Array</li> <li>2023. Number of Pairs of Strings With Concatenation Equal to Target</li> <li>2024. Maximize the Confusion of an Exam</li> <li>2025. Maximum Number of Ways to Partition an Array</li> <li>2026. Low-Quality Problems</li> <li>2027. Minimum Moves to Convert String</li> <li>2028. Find Missing Observations</li> <li>2029. Stone Game IX</li> <li>203. Remove Linked List Elements</li> <li>2030. Smallest K-Length Subsequence With Occurrences of a Letter</li> <li>2031. Count Subarrays With More Ones Than Zeros</li> <li>2032. Two Out of Three</li> <li>2033. Minimum Operations to Make a Uni-Value Grid</li> <li>2034. Stock Price Fluctuation</li> <li>2035. Partition Array Into Two Arrays to Minimize Sum Difference</li> <li>2036. Maximum Alternating Subarray Sum</li> <li>2037. Minimum Number of Moves to Seat Everyone</li> <li>2038. Remove Colored Pieces if Both Neighbors are the Same Color</li> <li>2039. The Time When the Network Becomes Idle</li> <li>204. Count Primes</li> <li>2040. Kth Smallest Product of Two Sorted Arrays</li> <li>2041. Accepted Candidates From the Interviews</li> <li>2042. Check if Numbers Are Ascending in a Sentence</li> <li>2043. Simple Bank System</li> <li>2044. Count Number of Maximum Bitwise-OR Subsets</li> <li>2045. Second Minimum Time to Reach Destination</li> <li>2046. Sort Linked List Already Sorted Using Absolute Values</li> <li>2047. Number of Valid Words in a Sentence</li> <li>2048. Next Greater Numerically Balanced Number</li> <li>2049. Count Nodes With the Highest Score</li> <li>205. Isomorphic Strings</li> <li>2050. Parallel Courses III</li> <li>2051. The Category of Each Member in the Store</li> <li>2052. Minimum Cost to Separate Sentence Into Rows</li> <li>2053. Kth Distinct String in an Array</li> <li>2054. Two Best Non-Overlapping Events</li> <li>2055. Plates Between Candles</li> <li>2056. Number of Valid Move Combinations On Chessboard</li> <li>2057. Smallest Index With Equal Value</li> <li>2058. Find the Minimum and Maximum Number of Nodes Between Critical Points</li> <li>2059. Minimum Operations to Convert Number</li> <li>206. Reverse Linked List</li> <li>2060. Check if an Original String Exists Given Two Encoded Strings</li> <li>2061. Number of Spaces Cleaning Robot Cleaned</li> <li>2062. Count Vowel Substrings of a String</li> <li>2063. Vowels of All Substrings</li> <li>2064. Minimized Maximum of Products Distributed to Any Store</li> <li>2065. Maximum Path Quality of a Graph</li> <li>2066. Account Balance</li> <li>2067. Number of Equal Count Substrings</li> <li>2068. Check Whether Two Strings are Almost Equivalent</li> <li>2069. Walking Robot Simulation II</li> <li>207. Course Schedule</li> <li>2070. Most Beautiful Item for Each Query</li> <li>2071. Maximum Number of Tasks You Can Assign</li> <li>2072. The Winner University</li> <li>2073. Time Needed to Buy Tickets</li> <li>2074. Reverse Nodes in Even Length Groups</li> <li>2075. Decode the Slanted Ciphertext</li> <li>2076. Process Restricted Friend Requests</li> <li>2077. Paths in Maze That Lead to Same Room</li> <li>2078. Two Furthest Houses With Different Colors</li> <li>2079. Watering Plants</li> <li>208. Implement Trie (Prefix Tree)</li> <li>2080. Range Frequency Queries</li> <li>2081. Sum of k-Mirror Numbers</li> <li>2082. The Number of Rich Customers</li> <li>2083. Substrings That Begin and End With the Same Letter</li> <li>2084. Drop Type 1 Orders for Customers With Type 0 Orders</li> <li>2085. Count Common Words With One Occurrence</li> <li>2086. Minimum Number of Food Buckets to Feed the Hamsters</li> <li>2087. Minimum Cost Homecoming of a Robot in a Grid</li> <li>2088. Count Fertile Pyramids in a Land</li> <li>2089. Find Target Indices After Sorting Array</li> <li>209. Minimum Size Subarray Sum</li> <li>2090. K Radius Subarray Averages</li> <li>2091. Removing Minimum and Maximum From Array</li> <li>2092. Find All People With Secret</li> <li>2093. Minimum Cost to Reach City With Discounts</li> <li>2094. Finding 3-Digit Even Numbers</li> <li>2095. Delete the Middle Node of a Linked List</li> <li>2096. Step-By-Step Directions From a Binary Tree Node to Another</li> <li>2097. Valid Arrangement of Pairs</li> <li>2098. Subsequence of Size K With the Largest Even Sum</li> <li>2099. Find Subsequence of Length K With the Largest Sum</li> <li>21. Merge Two Sorted Lists</li> <li>210. Course Schedule II</li> <li>2100. Find Good Days to Rob the Bank</li> <li>2101. Detonate the Maximum Bombs</li> <li>2102. Sequentially Ordinal Rank Tracker</li> <li>2103. Rings and Rods</li> <li>2104. Sum of Subarray Ranges</li> <li>2105. Watering Plants II</li> <li>2106. Maximum Fruits Harvested After at Most K Steps</li> <li>2107. Number of Unique Flavors After Sharing K Candies</li> <li>2108. Find First Palindromic String in the Array</li> <li>2109. Adding Spaces to a String</li> <li>211. Design Add and Search Words Data Structure</li> <li>2110. Number of Smooth Descent Periods of a Stock</li> <li>2111. Minimum Operations to Make the Array K-Increasing</li> <li>2112. The Airport With the Most Traffic</li> <li>2113. Elements in Array After Removing and Replacing Elements</li> <li>2114. Maximum Number of Words Found in Sentences</li> <li>2115. Find All Possible Recipes from Given Supplies</li> <li>2116. Check if a Parentheses String Can Be Valid</li> <li>2117. Abbreviating the Product of a Range</li> <li>2118. Build the Equation</li> <li>2119. A Number After a Double Reversal</li> <li>212. Word Search II</li> <li>2120. Execution of All Suffix Instructions Staying in a Grid</li> <li>2121. Intervals Between Identical Elements</li> <li>2122. Recover the Original Array</li> <li>2123. Minimum Operations to Remove Adjacent Ones in Matrix</li> <li>2124. Check if All A's Appears Before All B's</li> <li>2125. Number of Laser Beams in a Bank</li> <li>2126. Destroying Asteroids</li> <li>2127. Maximum Employees to Be Invited to a Meeting</li> <li>2128. Remove All Ones With Row and Column Flips</li> <li>2129. Capitalize the Title</li> <li>213. House Robber II</li> <li>2130. Maximum Twin Sum of a Linked List</li> <li>2131. Longest Palindrome by Concatenating Two Letter Words</li> <li>2132. Stamping the Grid</li> <li>2133. Check if Every Row and Column Contains All Numbers</li> <li>2134. Minimum Swaps to Group All 1's Together II</li> <li>2135. Count Words Obtained After Adding a Letter</li> <li>2136. Earliest Possible Day of Full Bloom</li> <li>2137. Pour Water Between Buckets to Make Water Levels Equal</li> <li>2138. Divide a String Into Groups of Size k</li> <li>2139. Minimum Moves to Reach Target Score</li> <li>214. Shortest Palindrome</li> <li>2140. Solving Questions With Brainpower</li> <li>2141. Maximum Running Time of N Computers</li> <li>2142. The Number of Passengers in Each Bus I</li> <li>2143. Choose Numbers From Two Arrays in Range</li> <li>2144. Minimum Cost of Buying Candies With Discount</li> <li>2145. Count the Hidden Sequences</li> <li>2146. K Highest Ranked Items Within a Price Range</li> <li>2147. Number of Ways to Divide a Long Corridor</li> <li>2148. Count Elements With Strictly Smaller and Greater Elements</li> <li>2149. Rearrange Array Elements by Sign</li> <li>215. Kth Largest Element in an Array</li> <li>2150. Find All Lonely Numbers in the Array</li> <li>2151. Maximum Good People Based on Statements</li> <li>2152. Minimum Number of Lines to Cover Points</li> <li>2153. The Number of Passengers in Each Bus II</li> <li>2154. Keep Multiplying Found Values by Two</li> <li>2155. All Divisions With the Highest Score of a Binary Array</li> <li>2156. Find Substring With Given Hash Value</li> <li>2157. Groups of Strings</li> <li>2158. Amount of New Area Painted Each Day</li> <li>2159. Order Two Columns Independently</li> <li>216. Combination Sum III</li> <li>2160. Minimum Sum of Four Digit Number After Splitting Digits</li> <li>2161. Partition Array According to Given Pivot</li> <li>2162. Minimum Cost to Set Cooking Time</li> <li>2163. Minimum Difference in Sums After Removal of Elements</li> <li>2164. Sort Even and Odd Indices Independently</li> <li>2165. Smallest Value of the Rearranged Number</li> <li>2166. Design Bitset</li> <li>2167. Minimum Time to Remove All Cars Containing Illegal Goods</li> <li>2168. Unique Substrings With Equal Digit Frequency</li> <li>2169. Count Operations to Obtain Zero</li> <li>217. Contains Duplicate</li> <li>2170. Minimum Operations to Make the Array Alternating</li> <li>2171. Removing Minimum Number of Magic Beans</li> <li>2172. Maximum AND Sum of Array</li> <li>2173. Longest Winning Streak</li> <li>2174. Remove All Ones With Row and Column Flips II</li> <li>2175. The Change in Global Rankings</li> <li>2176. Count Equal and Divisible Pairs in an Array</li> <li>2178. Maximum Split of Positive Even Integers</li> <li>2179. Count Good Triplets in an Array</li> <li>218. The Skyline Problem</li> <li>2180. Count Integers With Even Digit Sum</li> <li>2181. Merge Nodes in Between Zeros</li> <li>2182. Construct String With Repeat Limit</li> <li>2183. Count Array Pairs Divisible by K</li> <li>2184. Number of Ways to Build Sturdy Brick Wall</li> <li>2185. Counting Words With a Given Prefix</li> <li>2186. Minimum Number of Steps to Make Two Strings Anagram II</li> <li>2187. Minimum Time to Complete Trips</li> <li>2188. Minimum Time to Finish the Race</li> <li>2189. Number of Ways to Build House of Cards</li> <li>219. Contains Duplicate II</li> <li>2190. Most Frequent Number Following Key In an Array</li> <li>2191. Sort the Jumbled Numbers</li> <li>2192. All Ancestors of a Node in a Directed Acyclic Graph</li> <li>2193. Minimum Number of Moves to Make Palindrome</li> <li>2194. Cells in a Range on an Excel Sheet</li> <li>2195. Append K Integers With Minimal Sum</li> <li>2196. Create Binary Tree From Descriptions</li> <li>2197. Replace Non-Coprime Numbers in Array</li> <li>2198. Number of Single Divisor Triplets</li> <li>2199. Finding the Topic of Each Post</li> <li>22. Generate Parentheses</li> <li>220. Contains Duplicate III</li> <li>2200. Find All K-Distant Indices in an Array</li> <li>2201. Count Artifacts That Can Be Extracted</li> <li>2202. Maximize the Topmost Element After K Moves</li> <li>2203. Minimum Weighted Subgraph With the Required Paths</li> <li>2204. Distance to a Cycle in Undirected Graph</li> <li>2205. The Number of Users That Are Eligible for Discount</li> <li>2206. Divide Array Into Equal Pairs</li> <li>2207. Maximize Number of Subsequences in a String</li> <li>2208. Minimum Operations to Halve Array Sum</li> <li>2209. Minimum White Tiles After Covering With Carpets</li> <li>221. Maximal Square</li> <li>2210. Count Hills and Valleys in an Array</li> <li>2211. Count Collisions on a Road</li> <li>2212. Maximum Points in an Archery Competition</li> <li>2213. Longest Substring of One Repeating Character</li> <li>2214. Minimum Health to Beat Game</li> <li>2215. Find the Difference of Two Arrays</li> <li>2216. Minimum Deletions to Make Array Beautiful</li> <li>2217. Find Palindrome With Fixed Length</li> <li>2218. Maximum Value of K Coins From Piles</li> <li>2219. Maximum Sum Score of Array</li> <li>222. Count Complete Tree Nodes</li> <li>2220. Minimum Bit Flips to Convert Number</li> <li>2221. Find Triangular Sum of an Array</li> <li>2222. Number of Ways to Select Buildings</li> <li>2223. Sum of Scores of Built Strings</li> <li>2224. Minimum Number of Operations to Convert Time</li> <li>2225. Find Players With Zero or One Losses</li> <li>2226. Maximum Candies Allocated to K Children</li> <li>2227. Encrypt and Decrypt Strings</li> <li>2228. Users With Two Purchases Within Seven Days</li> <li>2229. Check if an Array Is Consecutive</li> <li>223. Rectangle Area</li> <li>2230. The Users That Are Eligible for Discount</li> <li>2231. Largest Number After Digit Swaps by Parity</li> <li>2232. Minimize Result by Adding Parentheses to Expression</li> <li>2233. Maximum Product After K Increments</li> <li>2234. Maximum Total Beauty of the Gardens</li> <li>2235. Add Two Integers</li> <li>2236. Root Equals Sum of Children</li> <li>2237. Count Positions on Street With Required Brightness</li> <li>2238. Number of Times a Driver Was a Passenger</li> <li>2239. Find Closest Number to Zero</li> <li>224. Basic Calculator</li> <li>2240. Number of Ways to Buy Pens and Pencils</li> <li>2241. Design an ATM Machine</li> <li>2242. Maximum Score of a Node Sequence</li> <li>2243. Calculate Digit Sum of a String</li> <li>2244. Minimum Rounds to Complete All Tasks</li> <li>2245. Maximum Trailing Zeros in a Cornered Path</li> <li>2246. Longest Path With Different Adjacent Characters</li> <li>2247. Maximum Cost of Trip With K Highways</li> <li>2248. Intersection of Multiple Arrays</li> <li>2249. Count Lattice Points Inside a Circle</li> <li>225. Implement Stack using Queues</li> <li>2250. Count Number of Rectangles Containing Each Point</li> <li>2251. Number of Flowers in Full Bloom</li> <li>2252. Dynamic Pivoting of a Table</li> <li>2253. Dynamic Unpivoting of a Table</li> <li>2254. Design Video Sharing Platform</li> <li>2255. Count Prefixes of a Given String</li> <li>2256. Minimum Average Difference</li> <li>2257. Count Unguarded Cells in the Grid</li> <li>2258. Escape the Spreading Fire</li> <li>2259. Remove Digit From Number to Maximize Result</li> <li>226. Invert Binary Tree</li> <li>2260. Minimum Consecutive Cards to Pick Up</li> <li>2261. K Divisible Elements Subarrays</li> <li>2262. Total Appeal of A String</li> <li>2263. Make Array Non-decreasing or Non-increasing</li> <li>2264. Largest 3-Same-Digit Number in String</li> <li>2265. Count Nodes Equal to Average of Subtree</li> <li>2266. Count Number of Texts</li> <li>2267.  Check if There Is a Valid Parentheses String Path</li> <li>2268. Minimum Number of Keypresses</li> <li>2269. Find the K-Beauty of a Number</li> <li>227. Basic Calculator II</li> <li>2270. Number of Ways to Split Array</li> <li>2271. Maximum White Tiles Covered by a Carpet</li> <li>2272. Substring With Largest Variance</li> <li>2273. Find Resultant Array After Removing Anagrams</li> <li>2274. Maximum Consecutive Floors Without Special Floors</li> <li>2275. Largest Combination With Bitwise AND Greater Than Zero</li> <li>2276. Count Integers in Intervals</li> <li>2277. Closest Node to Path in Tree</li> <li>2278. Percentage of Letter in String</li> <li>2279. Maximum Bags With Full Capacity of Rocks</li> <li>228. Summary Ranges</li> <li>2280. Minimum Lines to Represent a Line Chart</li> <li>2281. Sum of Total Strength of Wizards</li> <li>2282. Number of People That Can Be Seen in a Grid</li> <li>2283. Check if Number Has Equal Digit Count and Digit Value</li> <li>2284. Sender With Largest Word Count</li> <li>2285. Maximum Total Importance of Roads</li> <li>2286. Booking Concert Tickets in Groups</li> <li>2287. Rearrange Characters to Make Target String</li> <li>2288. Apply Discount to Prices</li> <li>2289. Steps to Make Array Non-decreasing</li> <li>229. Majority Element II</li> <li>2290. Minimum Obstacle Removal to Reach Corner</li> <li>2291. Maximum Profit From Trading Stocks</li> <li>2292. Products With Three or More Orders in Two Consecutive Years</li> <li>2293. Min Max Game</li> <li>2294. Partition Array Such That Maximum Difference Is K</li> <li>2295. Replace Elements in an Array</li> <li>2296. Design a Text Editor</li> <li>2297. Jump Game VIII</li> <li>2298. Tasks Count in the Weekend</li> <li>2299. Strong Password Checker II</li> <li>23. Merge k Sorted Lists</li> <li>230. Kth Smallest Element in a BST</li> <li>2300. Successful Pairs of Spells and Potions</li> <li>2301. Match Substring After Replacement</li> <li>2302. Count Subarrays With Score Less Than K</li> <li>2303. Calculate Amount Paid in Taxes</li> <li>2304. Minimum Path Cost in a Grid</li> <li>2305. Fair Distribution of Cookies</li> <li>2306. Naming a Company</li> <li>2307. Check for Contradictions in Equations</li> <li>2308. Arrange Table by Gender</li> <li>2309. Greatest English Letter in Upper and Lower Case</li> <li>231. Power of Two</li> <li>2310. Sum of Numbers With Units Digit K</li> <li>2311. Longest Binary Subsequence Less Than or Equal to K</li> <li>2312. Selling Pieces of Wood</li> <li>2313. Minimum Flips in Binary Tree to Get Result</li> <li>2314. The First Day of the Maximum Recorded Degree in Each City</li> <li>2315. Count Asterisks</li> <li>2316. Count Unreachable Pairs of Nodes in an Undirected Graph</li> <li>2317. Maximum XOR After Operations</li> <li>2318. Number of Distinct Roll Sequences</li> <li>2319. Check if Matrix Is X-Matrix</li> <li>232. Implement Queue using Stacks</li> <li>2320. Count Number of Ways to Place Houses</li> <li>2321. Maximum Score Of Spliced Array</li> <li>2322. Minimum Score After Removals on a Tree</li> <li>2323. Find Minimum Time to Finish All Jobs II</li> <li>2324. Product Sales Analysis IV</li> <li>2325. Decode the Message</li> <li>2326. Spiral Matrix IV</li> <li>2327. Number of People Aware of a Secret</li> <li>2328. Number of Increasing Paths in a Grid</li> <li>2329. Product Sales Analysis V</li> <li>233. Number of Digit One</li> <li>2330. Valid Palindrome IV</li> <li>2331. Evaluate Boolean Binary Tree</li> <li>2332. The Latest Time to Catch a Bus</li> <li>2333. Minimum Sum of Squared Difference</li> <li>2334. Subarray With Elements Greater Than Varying Threshold</li> <li>2335. Minimum Amount of Time to Fill Cups</li> <li>2336. Smallest Number in Infinite Set</li> <li>2337. Move Pieces to Obtain a String</li> <li>2338. Count the Number of Ideal Arrays</li> <li>2339. All the Matches of the League</li> <li>234. Palindrome Linked List</li> <li>2340. Minimum Adjacent Swaps to Make a Valid Array</li> <li>2341. Maximum Number of Pairs in Array</li> <li>2342. Max Sum of a Pair With Equal Sum of Digits</li> <li>2343. Query Kth Smallest Trimmed Number</li> <li>2344. Minimum Deletions to Make Array Divisible</li> <li>2345. Finding the Number of Visible Mountains</li> <li>2346. Compute the Rank as a Percentage</li> <li>2347. Best Poker Hand</li> <li>2348. Number of Zero-Filled Subarrays</li> <li>2349. Design a Number Container System</li> <li>235. Lowest Common Ancestor of a Binary Search Tree</li> <li>2350. Shortest Impossible Sequence of Rolls</li> <li>2351. First Letter to Appear Twice</li> <li>2352. Equal Row and Column Pairs</li> <li>2353. Design a Food Rating System</li> <li>2354. Number of Excellent Pairs</li> <li>2355. Maximum Number of Books You Can Take</li> <li>2356. Number of Unique Subjects Taught by Each Teacher</li> <li>2357. Make Array Zero by Subtracting Equal Amounts</li> <li>2358. Maximum Number of Groups Entering a Competition</li> <li>2359. Find Closest Node to Given Two Nodes</li> <li>236. Lowest Common Ancestor of a Binary Tree</li> <li>2360. Longest Cycle in a Graph</li> <li>2361. Minimum Costs Using the Train Line</li> <li>2362. Generate the Invoice</li> <li>2363. Merge Similar Items</li> <li>2364. Count Number of Bad Pairs</li> <li>2365. Task Scheduler II</li> <li>2366. Minimum Replacements to Sort the Array</li> <li>2367. Number of Arithmetic Triplets</li> <li>2368. Reachable Nodes With Restrictions</li> <li>2369. Check if There is a Valid Partition For The Array</li> <li>237. Delete Node in a Linked List</li> <li>2370. Longest Ideal Subsequence</li> <li>2371. Minimize Maximum Value in a Grid</li> <li>2372. Calculate the Influence of Each Salesperson</li> <li>2373. Largest Local Values in a Matrix</li> <li>2374. Node With Highest Edge Score</li> <li>2375. Construct Smallest Number From DI String</li> <li>2376. Count Special Integers</li> <li>2377. Sort the Olympic Table</li> <li>2378. Choose Edges to Maximize Score in a Tree</li> <li>2379. Minimum Recolors to Get K Consecutive Black Blocks</li> <li>238. Product of Array Except Self</li> <li>2380. Time Needed to Rearrange a Binary String</li> <li>2381. Shifting Letters II</li> <li>2382. Maximum Segment Sum After Removals</li> <li>2383. Minimum Hours of Training to Win a Competition</li> <li>2384. Largest Palindromic Number</li> <li>2385. Amount of Time for Binary Tree to Be Infected</li> <li>2386. Find the K-Sum of an Array</li> <li>2387. Median of a Row Wise Sorted Matrix</li> <li>2388. Change Null Values in a Table to the Previous Value</li> <li>2389. Longest Subsequence With Limited Sum</li> <li>239. Sliding Window Maximum</li> <li>2390. Removing Stars From a String</li> <li>2391. Minimum Amount of Time to Collect Garbage</li> <li>2392. Build a Matrix With Conditions</li> <li>2393. Count Strictly Increasing Subarrays</li> <li>2394. Employees With Deductions</li> <li>2395. Find Subarrays With Equal Sum</li> <li>2396. Strictly Palindromic Number</li> <li>2397. Maximum Rows Covered by Columns</li> <li>2398. Maximum Number of Robots Within Budget</li> <li>2399. Check Distances Between Same Letters</li> <li>24. Swap Nodes in Pairs</li> <li>240. Search a 2D Matrix II</li> <li>2401. Longest Nice Subarray</li> <li>2402. Meeting Rooms III</li> <li>2403. Minimum Time to Kill All Monsters</li> <li>2404. Most Frequent Even Element</li> <li>2405. Optimal Partition of String</li> <li>2406. Divide Intervals Into Minimum Number of Groups</li> <li>2407. Longest Increasing Subsequence II</li> <li>2408. Design SQL</li> <li>2409. Count Days Spent Together</li> <li>241. Different Ways to Add Parentheses</li> <li>2410. Maximum Matching of Players With Trainers</li> <li>2411. Smallest Subarrays With Maximum Bitwise OR</li> <li>2412. Minimum Money Required Before Transactions</li> <li>2413. Smallest Even Multiple</li> <li>2414. Length of the Longest Alphabetical Continuous Substring</li> <li>2415. Reverse Odd Levels of Binary Tree</li> <li>2416. Sum of Prefix Scores of Strings</li> <li>2417. Closest Fair Integer</li> <li>2418. Sort the People</li> <li>2419. Longest Subarray With Maximum Bitwise AND</li> <li>242. Valid Anagram</li> <li>2420. Find All Good Indices</li> <li>2421. Number of Good Paths</li> <li>2422. Merge Operations to Turn Array Into a Palindrome</li> <li>2423. Remove Letter To Equalize Frequency</li> <li>2424. Longest Uploaded Prefix</li> <li>2425. Bitwise XOR of All Pairings</li> <li>2426. Number of Pairs Satisfying Inequality</li> <li>2427. Number of Common Factors</li> <li>2428. Maximum Sum of an Hourglass</li> <li>2429. Minimize XOR</li> <li>243. Shortest Word Distance</li> <li>2430. Maximum Deletions on a String</li> <li>2431. Maximize Total Tastiness of Purchased Fruits</li> <li>2432. The Employee That Worked on the Longest Task</li> <li>2433. Find The Original Array of Prefix Xor</li> <li>2434. Using a Robot to Print the Lexicographically Smallest String</li> <li>2435. Paths in Matrix Whose Sum Is Divisible by K</li> <li>2436. Minimum Split Into Subarrays With GCD Greater Than One</li> <li>2437. Number of Valid Clock Times</li> <li>2438. Range Product Queries of Powers</li> <li>2439. Minimize Maximum of Array</li> <li>244. Shortest Word Distance II</li> <li>2440. Create Components With Same Value</li> <li>2441. Largest Positive Integer That Exists With Its Negative</li> <li>2442. Count Number of Distinct Integers After Reverse Operations</li> <li>2443. Sum of Number and Its Reverse</li> <li>2444. Count Subarrays With Fixed Bounds</li> <li>2445. Number of Nodes With Value One</li> <li>2446. Determine if Two Events Have Conflict</li> <li>2447. Number of Subarrays With GCD Equal to K</li> <li>2448. Minimum Cost to Make Array Equal</li> <li>2449. Minimum Number of Operations to Make Arrays Similar</li> <li>245. Shortest Word Distance III</li> <li>2450. Number of Distinct Binary Strings After Applying Operations</li> <li>2451. Odd String Difference</li> <li>2452. Words Within Two Edits of Dictionary</li> <li>2453. Destroy Sequential Targets</li> <li>2454. Next Greater Element IV</li> <li>2455. Average Value of Even Numbers That Are Divisible by Three</li> <li>2456. Most Popular Video Creator</li> <li>2457. Minimum Addition to Make Integer Beautiful</li> <li>2458. Height of Binary Tree After Subtree Removal Queries</li> <li>2459. Sort Array by Moving Items to Empty Space</li> <li>246. Strobogrammatic Number</li> <li>2460. Apply Operations to an Array</li> <li>2461. Maximum Sum of Distinct Subarrays With Length K</li> <li>2462. Total Cost to Hire K Workers</li> <li>2463. Minimum Total Distance Traveled</li> <li>2464. Minimum Subarrays in a Valid Split</li> <li>2465. Number of Distinct Averages</li> <li>2466. Count Ways To Build Good Strings</li> <li>2467. Most Profitable Path in a Tree</li> <li>2468. Split Message Based on Limit</li> <li>2469. Convert the Temperature</li> <li>247. Strobogrammatic Number II</li> <li>2470. Number of Subarrays With LCM Equal to K</li> <li>2471. Minimum Number of Operations to Sort a Binary Tree by Level</li> <li>2472. Maximum Number of Non-overlapping Palindrome Substrings</li> <li>2473. Minimum Cost to Buy Apples</li> <li>2474. Customers With Strictly Increasing Purchases</li> <li>2475. Number of Unequal Triplets in Array</li> <li>2476. Closest Nodes Queries in a Binary Search Tree</li> <li>2477. Minimum Fuel Cost to Report to the Capital</li> <li>2478. Number of Beautiful Partitions</li> <li>2479. Maximum XOR of Two Non-Overlapping Subtrees</li> <li>248. Strobogrammatic Number III</li> <li>2480. Form a Chemical Bond</li> <li>2481. Minimum Cuts to Divide a Circle</li> <li>2482. Difference Between Ones and Zeros in Row and Column</li> <li>2483. Minimum Penalty for a Shop</li> <li>2484. Count Palindromic Subsequences</li> <li>2485. Find the Pivot Integer</li> <li>2486. Append Characters to String to Make Subsequence</li> <li>2487. Remove Nodes From Linked List</li> <li>2488. Count Subarrays With Median K</li> <li>2489. Number of Substrings With Fixed Ratio</li> <li>249. Group Shifted Strings</li> <li>2490. Circular Sentence</li> <li>2491. Divide Players Into Teams of Equal Skill</li> <li>2492. Minimum Score of a Path Between Two Cities</li> <li>2493. Divide Nodes Into the Maximum Number of Groups</li> <li>2494. Merge Overlapping Events in the Same Hall</li> <li>2495. Number of Subarrays Having Even Product</li> <li>2496. Maximum Value of a String in an Array</li> <li>2497. Maximum Star Sum of a Graph</li> <li>2498. Frog Jump II</li> <li>2499. Minimum Total Cost to Make Arrays Unequal</li> <li>25. Reverse Nodes in k-Group</li> <li>250. Count Univalue Subtrees</li> <li>2500. Delete Greatest Value in Each Row</li> <li>2501. Longest Square Streak in an Array</li> <li>2502. Design Memory Allocator</li> <li>2503. Maximum Number of Points From Grid Queries</li> <li>2504. Concatenate the Name and the Profession</li> <li>2505. Bitwise OR of All Subsequence Sums</li> <li>2506. Count Pairs Of Similar Strings</li> <li>2507. Smallest Value After Replacing With Sum of Prime Factors</li> <li>2508. Add Edges to Make Degrees of All Nodes Even</li> <li>2509. Cycle Length Queries in a Tree</li> <li>251. Flatten 2D Vector</li> <li>2510. Check if There is a Path With Equal Number of 0's And 1's</li> <li>2511. Maximum Enemy Forts That Can Be Captured</li> <li>2512. Reward Top K Students</li> <li>2513. Minimize the Maximum of Two Arrays</li> <li>2514. Count Anagrams</li> <li>2515. Shortest Distance to Target String in a Circular Array</li> <li>2516. Take K of Each Character From Left and Right</li> <li>2517. Maximum Tastiness of Candy Basket</li> <li>2518. Number of Great Partitions</li> <li>2519. Count the Number of K-Big Indices</li> <li>252. Meeting Rooms</li> <li>2520. Count the Digits That Divide a Number</li> <li>2521. Distinct Prime Factors of Product of Array</li> <li>2522. Partition String Into Substrings With Values at Most K</li> <li>2523. Closest Prime Numbers in Range</li> <li>2524. Maximum Frequency Score of a Subarray</li> <li>2525. Categorize Box According to Criteria</li> <li>2526. Find Consecutive Integers from a Data Stream</li> <li>2527. Find Xor-Beauty of Array</li> <li>2528. Maximize the Minimum Powered City</li> <li>2529. Maximum Count of Positive Integer and Negative Integer</li> <li>253. Meeting Rooms II</li> <li>2530. Maximal Score After Applying K Operations</li> <li>2531. Make Number of Distinct Characters Equal</li> <li>2532. Time to Cross a Bridge</li> <li>2533. Number of Good Binary Strings</li> <li>2534. Time Taken to Cross the Door</li> <li>2535. Difference Between Element Sum and Digit Sum of an Array</li> <li>2536. Increment Submatrices by One</li> <li>2537. Count the Number of Good Subarrays</li> <li>2538. Difference Between Maximum and Minimum Price Sum</li> <li>2539. Count the Number of Good Subsequences</li> <li>254. Factor Combinations</li> <li>2540. Minimum Common Value</li> <li>2541. Minimum Operations to Make Array Equal II</li> <li>2543. Check if Point Is Reachable</li> <li>2544. Alternating Digit Sum</li> <li>2545. Sort the Students by Their Kth Score</li> <li>2546. Apply Bitwise Operations to Make Strings Equal</li> <li>2547. Minimum Cost to Split an Array</li> <li>2548. Maximum Price to Fill a Bag</li> <li>2549. Count Distinct Numbers on Board</li> <li>255. Verify Preorder Sequence in Binary Search Tree</li> <li>2550. Count Collisions of Monkeys on a Polygon</li> <li>2551. Put Marbles in Bags</li> <li>2552. Count Increasing Quadruplets</li> <li>2553. Separate the Digits in an Array</li> <li>2554. Maximum Number of Integers to Choose From a Range I</li> <li>2555. Maximize Win From Two Segments</li> <li>2556. Disconnect Path in a Binary Matrix by at Most One Flip</li> <li>2557. Maximum Number of Integers to Choose From a Range II</li> <li>2558. Take Gifts From the Richest Pile</li> <li>2559. Count Vowel Strings in Ranges</li> <li>256. Paint House</li> <li>2560. House Robber IV</li> <li>2561. Rearranging Fruits</li> <li>2562. Find the Array Concatenation Value</li> <li>2563. Count the Number of Fair Pairs</li> <li>2564. Substring XOR Queries</li> <li>2565. Subsequence With the Minimum Score</li> <li>2566. Maximum Difference by Remapping a Digit</li> <li>2567. Minimum Score by Changing Two Elements</li> <li>2568. Minimum Impossible OR</li> <li>2569. Handling Sum Queries After Update</li> <li>257. Binary Tree Paths</li> <li>2570. Merge Two 2D Arrays by Summing Values</li> <li>2571. Minimum Operations to Reduce an Integer to 0</li> <li>2572. Count the Number of Square-Free Subsets</li> <li>2573. Find the String with LCP</li> <li>2574. Left and Right Sum Differences</li> <li>2575. Find the Divisibility Array of a String</li> <li>2576. Find the Maximum Number of Marked Indices</li> <li>2577. Minimum Time to Visit a Cell In a Grid</li> <li>2578. Split With Minimum Sum</li> <li>2579. Count Total Number of Colored Cells</li> <li>258. Add Digits</li> <li>2580. Count Ways to Group Overlapping Ranges</li> <li>2581. Count Number of Possible Root Nodes</li> <li>2582. Pass the Pillow</li> <li>2583. Kth Largest Sum in a Binary Tree</li> <li>2584. Split the Array to Make Coprime Products</li> <li>2585. Number of Ways to Earn Points</li> <li>259. 3Sum Smaller</li> <li>26. Remove Duplicates from Sorted Array</li> <li>260. Single Number III</li> <li>261. Graph Valid Tree</li> <li>262. Trips and Users</li> <li>263. Ugly Number</li> <li>264. Ugly Number II</li> <li>265. Paint House II</li> <li>266. Palindrome Permutation</li> <li>267. Palindrome Permutation II</li> <li>268. Missing Number</li> <li>269. Alien Dictionary</li> <li>27. Remove Element</li> <li>270. Closest Binary Search Tree Value</li> <li>271. Encode and Decode Strings</li> <li>272. Closest Binary Search Tree Value II</li> <li>273. Integer to English Words</li> <li>274. H-Index</li> <li>275. H-Index II</li> <li>276. Paint Fence</li> <li>277. Find the Celebrity</li> <li>278. First Bad Version</li> <li>279. Perfect Squares</li> <li>28. Find the Index of the First Occurrence in a String</li> <li>280. Wiggle Sort</li> <li>281. Zigzag Iterator</li> <li>282. Expression Add Operators</li> <li>283. Move Zeroes</li> <li>284. Peeking Iterator</li> <li>285. Inorder Successor in BST</li> <li>286. Walls and Gates</li> <li>287. Find the Duplicate Number</li> <li>288. Unique Word Abbreviation</li> <li>289. Game of Life</li> <li>29. Divide Two Integers</li> <li>290. Word Pattern</li> <li>291. Word Pattern II</li> <li>292. Nim Game</li> <li>293. Flip Game</li> <li>294. Flip Game II</li> <li>295. Find Median from Data Stream</li> <li>296. Best Meeting Point</li> <li>297. Serialize and Deserialize Binary Tree</li> <li>298. Binary Tree Longest Consecutive Sequence</li> <li>299. Bulls and Cows</li> <li>3. Longest Substring Without Repeating Characters</li> <li>30. Substring with Concatenation of All Words</li> <li>300. Longest Increasing Subsequence</li> <li>301. Remove Invalid Parentheses</li> <li>302. Smallest Rectangle Enclosing Black Pixels</li> <li>303. Range Sum Query - Immutable</li> <li>304. Range Sum Query 2D - Immutable</li> <li>305. Number of Islands II</li> <li>306. Additive Number</li> <li>307. Range Sum Query - Mutable</li> <li>308. Range Sum Query 2D - Mutable</li> <li>309. Best Time to Buy and Sell Stock with Cooldown</li> <li>31. Next Permutation</li> <li>310. Minimum Height Trees</li> <li>311. Sparse Matrix Multiplication</li> <li>312. Burst Balloons</li> <li>313. Super Ugly Number</li> <li>314. Binary Tree Vertical Order Traversal</li> <li>315. Count of Smaller Numbers After Self</li> <li>316. Remove Duplicate Letters</li> <li>317. Shortest Distance from All Buildings</li> <li>318. Maximum Product of Word Lengths</li> <li>319. Bulb Switcher</li> <li>32. Longest Valid Parentheses</li> <li>320. Generalized Abbreviation</li> <li>321. Create Maximum Number</li> <li>322. Coin Change</li> <li>323. Number of Connected Components in an Undirected Graph</li> <li>324. Wiggle Sort II</li> <li>325. Maximum Size Subarray Sum Equals k</li> <li>326. Power of Three</li> <li>327. Count of Range Sum</li> <li>328. Odd Even Linked List</li> <li>329. Longest Increasing Path in a Matrix</li> <li>33. Search in Rotated Sorted Array</li> <li>330. Patching Array</li> <li>331. Verify Preorder Serialization of a Binary Tree</li> <li>332. Reconstruct Itinerary</li> <li>333. Largest BST Subtree</li> <li>334. Increasing Triplet Subsequence</li> <li>335. Self Crossing</li> <li>336. Palindrome Pairs</li> <li>337. House Robber III</li> <li>338. Counting Bits</li> <li>339. Nested List Weight Sum</li> <li>34. Find First and Last Position of Element in Sorted Array</li> <li>340. Longest Substring with At Most K Distinct Characters</li> <li>341. Flatten Nested List Iterator</li> <li>342. Power of Four</li> <li>343. Integer Break</li> <li>344. Reverse String</li> <li>345. Reverse Vowels of a String</li> <li>346. Moving Average from Data Stream</li> <li>347. Top K Frequent Elements</li> <li>348. Design Tic-Tac-Toe</li> <li>349. Intersection of Two Arrays</li> <li>35. Search Insert Position</li> <li>350. Intersection of Two Arrays II</li> <li>351. Android Unlock Patterns</li> <li>352. Data Stream as Disjoint Intervals</li> <li>353. Design Snake Game</li> <li>354. Russian Doll Envelopes</li> <li>355. Design Twitter</li> <li>356. Line Reflection</li> <li>357. Count Numbers with Unique Digits</li> <li>358. Rearrange String k Distance Apart</li> <li>359. Logger Rate Limiter</li> <li>36. Valid Sudoku</li> <li>360. Sort Transformed Array</li> <li>361. Bomb Enemy</li> <li>362. Design Hit Counter</li> <li>363. Max Sum of Rectangle No Larger Than K</li> <li>364. Nested List Weight Sum II</li> <li>365. Water and Jug Problem</li> <li>366. Find Leaves of Binary Tree</li> <li>367. Valid Perfect Square</li> <li>368. Largest Divisible Subset</li> <li>369. Plus One Linked List</li> <li>37. Sudoku Solver</li> <li>370. Range Addition</li> <li>371. Sum of Two Integers</li> <li>372. Super Pow</li> <li>373. Find K Pairs with Smallest Sums</li> <li>374. Guess Number Higher or Lower</li> <li>375. Guess Number Higher or Lower II</li> <li>376. Wiggle Subsequence</li> <li>377. Combination Sum IV</li> <li>378. Kth Smallest Element in a Sorted Matrix</li> <li>379. Design Phone Directory</li> <li>38. Count and Say</li> <li>380. Insert Delete GetRandom O(1)</li> <li>381. Insert Delete GetRandom O(1) - Duplicates allowed</li> <li>382. Linked List Random Node</li> <li>383. Ransom Note</li> <li>384. Shuffle an Array</li> <li>385. Mini Parser</li> <li>386. Lexicographical Numbers</li> <li>387. First Unique Character in a String</li> <li>388. Longest Absolute File Path</li> <li>389. Find the Difference</li> <li>39. Combination Sum</li> <li>390. Elimination Game</li> <li>391. Perfect Rectangle</li> <li>392. Is Subsequence</li> <li>393. UTF-8 Validation</li> <li>394. Decode String</li> <li>395. Longest Substring with At Least K Repeating Characters</li> <li>396. Rotate Function</li> <li>397. Integer Replacement</li> <li>398. Random Pick Index</li> <li>399. Evaluate Division</li> <li>4. Median of Two Sorted Arrays</li> <li>40. Combination Sum II</li> <li>400. Nth Digit</li> <li>401. Binary Watch</li> <li>402. Remove K Digits</li> <li>403. Frog Jump</li> <li>404. Sum of Left Leaves</li> <li>405. Convert a Number to Hexadecimal</li> <li>406. Queue Reconstruction by Height</li> <li>407. Trapping Rain Water II</li> <li>408. Valid Word Abbreviation</li> <li>409. Longest Palindrome</li> <li>41. First Missing Positive</li> <li>410. Split Array Largest Sum</li> <li>411. Minimum Unique Word Abbreviation</li> <li>412. Fizz Buzz</li> <li>413. Arithmetic Slices</li> <li>414. Third Maximum Number</li> <li>415. Add Strings</li> <li>416. Partition Equal Subset Sum</li> <li>417. Pacific Atlantic Water Flow</li> <li>418. Sentence Screen Fitting</li> <li>419. Battleships in a Board</li> <li>42. Trapping Rain Water</li> <li>420. Strong Password Checker</li> <li>421. Maximum XOR of Two Numbers in an Array</li> <li>422. Valid Word Square</li> <li>423. Reconstruct Original Digits from English</li> <li>424. Longest Repeating Character Replacement</li> <li>425. Word Squares</li> <li>426. Convert Binary Search Tree to Sorted Doubly Linked List</li> <li>427. Construct Quad Tree</li> <li>428. Serialize and Deserialize N-ary Tree</li> <li>429. N-ary Tree Level Order Traversal</li> <li>43. Multiply Strings</li> <li>430. Flatten a Multilevel Doubly Linked List</li> <li>431. Encode N-ary Tree to Binary Tree</li> <li>432. All O`one Data Structure</li> <li>433. Minimum Genetic Mutation</li> <li>434. Number of Segments in a String</li> <li>435. Non-overlapping Intervals</li> <li>436. Find Right Interval</li> <li>437. Path Sum III</li> <li>438. Find All Anagrams in a String</li> <li>439. Ternary Expression Parser</li> <li>44. Wildcard Matching</li> <li>440. K-th Smallest in Lexicographical Order</li> <li>441. Arranging Coins</li> <li>442. Find All Duplicates in an Array</li> <li>443. String Compression</li> <li>444. Sequence Reconstruction</li> <li>445. Add Two Numbers II</li> <li>446. Arithmetic Slices II - Subsequence</li> <li>447. Number of Boomerangs</li> <li>448. Find All Numbers Disappeared in an Array</li> <li>449. Serialize and Deserialize BST</li> <li>45. Jump Game II</li> <li>450. Delete Node in a BST</li> <li>451. Sort Characters By Frequency</li> <li>452. Minimum Number of Arrows to Burst Balloons</li> <li>453. Minimum Moves to Equal Array Elements</li> <li>454. 4Sum II</li> <li>455. Assign Cookies</li> <li>456. 132 Pattern</li> <li>457. Circular Array Loop</li> <li>458. Poor Pigs</li> <li>459. Repeated Substring Pattern</li> <li>46. Permutations</li> <li>460. LFU Cache</li> <li>461. Hamming Distance</li> <li>462. Minimum Moves to Equal Array Elements II</li> <li>463. Island Perimeter</li> <li>464. Can I Win</li> <li>465. Optimal Account Balancing</li> <li>466. Count The Repetitions</li> <li>467. Unique Substrings in Wraparound String</li> <li>468. Validate IP Address</li> <li>469. Convex Polygon</li> <li>47. Permutations II</li> <li>470. Implement Rand10() Using Rand7()</li> <li>471. Encode String with Shortest Length</li> <li>472. Concatenated Words</li> <li>473. Matchsticks to Square</li> <li>474. Ones and Zeroes</li> <li>475. Heaters</li> <li>476. Number Complement</li> <li>477. Total Hamming Distance</li> <li>478. Generate Random Point in a Circle</li> <li>479. Largest Palindrome Product</li> <li>48. Rotate Image</li> <li>480. Sliding Window Median</li> <li>481. Magical String</li> <li>482. License Key Formatting</li> <li>483. Smallest Good Base</li> <li>484. Find Permutation</li> <li>485. Max Consecutive Ones</li> <li>486. Predict the Winner</li> <li>487. Max Consecutive Ones II</li> <li>488. Zuma Game</li> <li>489. Robot Room Cleaner</li> <li>49. Group Anagrams</li> <li>490. The Maze</li> <li>491. Non-decreasing Subsequences</li> <li>492. Construct the Rectangle</li> <li>493. Reverse Pairs</li> <li>494. Target Sum</li> <li>495. Teemo Attacking</li> <li>496. Next Greater Element I</li> <li>497. Random Point in Non-overlapping Rectangles</li> <li>498. Diagonal Traverse</li> <li>499. The Maze III</li> <li>5. Longest Palindromic Substring</li> <li>50. Pow(x, n)</li> <li>500. Keyboard Row</li> <li>501. Find Mode in Binary Search Tree</li> <li>502. IPO</li> <li>503. Next Greater Element II</li> <li>504. Base 7</li> <li>505. The Maze II</li> <li>506. Relative Ranks</li> <li>507. Perfect Number</li> <li>508. Most Frequent Subtree Sum</li> <li>509. Fibonacci Number</li> <li>51. N-Queens</li> <li>510. Inorder Successor in BST II</li> <li>511. Game Play Analysis I</li> <li>512. Game Play Analysis II</li> <li>513. Find Bottom Left Tree Value</li> <li>514. Freedom Trail</li> <li>515. Find Largest Value in Each Tree Row</li> <li>516. Longest Palindromic Subsequence</li> <li>517. Super Washing Machines</li> <li>518. Coin Change II</li> <li>519. Random Flip Matrix</li> <li>52. N-Queens II</li> <li>520. Detect Capital</li> <li>521. Longest Uncommon Subsequence I</li> <li>522. Longest Uncommon Subsequence II</li> <li>523. Continuous Subarray Sum</li> <li>524. Longest Word in Dictionary through Deleting</li> <li>525. Contiguous Array</li> <li>526. Beautiful Arrangement</li> <li>527. Word Abbreviation</li> <li>528. Random Pick with Weight</li> <li>529. Minesweeper</li> <li>53. Maximum Subarray</li> <li>530. Minimum Absolute Difference in BST</li> <li>531. Lonely Pixel I</li> <li>532. K-diff Pairs in an Array</li> <li>533. Lonely Pixel II</li> <li>534. Game Play Analysis III</li> <li>535. Encode and Decode TinyURL</li> <li>536. Construct Binary Tree from String</li> <li>537. Complex Number Multiplication</li> <li>538. Convert BST to Greater Tree</li> <li>539. Minimum Time Difference</li> <li>54. Spiral Matrix</li> <li>540. Single Element in a Sorted Array</li> <li>541. Reverse String II</li> <li>542. 01 Matrix</li> <li>543. Diameter of Binary Tree</li> <li>544. Output Contest Matches</li> <li>545. Boundary of Binary Tree</li> <li>546. Remove Boxes</li> <li>547. Number of Provinces</li> <li>548. Split Array with Equal Sum</li> <li>549. Binary Tree Longest Consecutive Sequence II</li> <li>55. Jump Game</li> <li>550. Game Play Analysis IV</li> <li>551. Student Attendance Record I</li> <li>552. Student Attendance Record II</li> <li>553. Optimal Division</li> <li>554. Brick Wall</li> <li>555. Split Concatenated Strings</li> <li>556. Next Greater Element III</li> <li>557. Reverse Words in a String III</li> <li>558. Logical OR of Two Binary Grids Represented as Quad-Trees</li> <li>559. Maximum Depth of N-ary Tree</li> <li>56. Merge Intervals</li> <li>560. Subarray Sum Equals K</li> <li>561. Array Partition</li> <li>562. Longest Line of Consecutive One in Matrix</li> <li>563. Binary Tree Tilt</li> <li>564. Find the Closest Palindrome</li> <li>565. Array Nesting</li> <li>566. Reshape the Matrix</li> <li>567. Permutation in String</li> <li>568. Maximum Vacation Days</li> <li>569. Median Employee Salary</li> <li>57. Insert Interval</li> <li>570. Managers with at Least 5 Direct Reports</li> <li>571. Find Median Given Frequency of Numbers</li> <li>572. Subtree of Another Tree</li> <li>573. Squirrel Simulation</li> <li>574. Winning Candidate</li> <li>575. Distribute Candies</li> <li>576. Out of Boundary Paths</li> <li>577. Employee Bonus</li> <li>578. Get Highest Answer Rate Question</li> <li>579. Find Cumulative Salary of an Employee</li> <li>58. Length of Last Word</li> <li>580. Count Student Number in Departments</li> <li>581. Shortest Unsorted Continuous Subarray</li> <li>582. Kill Process</li> <li>583. Delete Operation for Two Strings</li> <li>584. Find Customer Referee</li> <li>585. Investments in 2016</li> <li>586. Customer Placing the Largest Number of Orders</li> <li>587. Erect the Fence</li> <li>588. Design In-Memory File System</li> <li>589. N-ary Tree Preorder Traversal</li> <li>59. Spiral Matrix II</li> <li>590. N-ary Tree Postorder Traversal</li> <li>591. Tag Validator</li> <li>592. Fraction Addition and Subtraction</li> <li>593. Valid Square</li> <li>594. Longest Harmonious Subsequence</li> <li>595. Big Countries</li> <li>596. Classes More Than 5 Students</li> <li>597. Friend Requests I: Overall Acceptance Rate</li> <li>598. Range Addition II</li> <li>599. Minimum Index Sum of Two Lists</li> <li>6. Zigzag Conversion</li> <li>60. Permutation Sequence</li> <li>600. Non-negative Integers without Consecutive Ones</li> <li>601. Human Traffic of Stadium</li> <li>602. Friend Requests II: Who Has the Most Friends</li> <li>603. Consecutive Available Seats</li> <li>604. Design Compressed String Iterator</li> <li>605. Can Place Flowers</li> <li>606. Construct String from Binary Tree</li> <li>607. Sales Person</li> <li>608. Tree Node</li> <li>609. Find Duplicate File in System</li> <li>61. Rotate List</li> <li>610. Triangle Judgement</li> <li>611. Valid Triangle Number</li> <li>612. Shortest Distance in a Plane</li> <li>613. Shortest Distance in a Line</li> <li>614. Second Degree Follower</li> <li>615. Average Salary: Departments VS Company</li> <li>616. Add Bold Tag in String</li> <li>617. Merge Two Binary Trees</li> <li>618. Students Report By Geography</li> <li>619. Biggest Single Number</li> <li>62. Unique Paths</li> <li>620. Not Boring Movies</li> <li>621. Task Scheduler</li> <li>622. Design Circular Queue</li> <li>623. Add One Row to Tree</li> <li>624. Maximum Distance in Arrays</li> <li>625. Minimum Factorization</li> <li>626. Exchange Seats</li> <li>627. Swap Salary</li> <li>628. Maximum Product of Three Numbers</li> <li>629. K Inverse Pairs Array</li> <li>63. Unique Paths II</li> <li>630. Course Schedule III</li> <li>631. Design Excel Sum Formula</li> <li>632. Smallest Range Covering Elements from K Lists</li> <li>633. Sum of Square Numbers</li> <li>634. Find the Derangement of An Array</li> <li>635. Design Log Storage System</li> <li>636. Exclusive Time of Functions</li> <li>637. Average of Levels in Binary Tree</li> <li>638. Shopping Offers</li> <li>639. Decode Ways II</li> <li>64. Minimum Path Sum</li> <li>640. Solve the Equation</li> <li>641. Design Circular Deque</li> <li>642. Design Search Autocomplete System</li> <li>643. Maximum Average Subarray I</li> <li>644. Maximum Average Subarray II</li> <li>645. Set Mismatch</li> <li>646. Maximum Length of Pair Chain</li> <li>647. Palindromic Substrings</li> <li>648. Replace Words</li> <li>649. Dota2 Senate</li> <li>65. Valid Number</li> <li>650. 2 Keys Keyboard</li> <li>651. 4 Keys Keyboard</li> <li>652. Find Duplicate Subtrees</li> <li>653. Two Sum IV - Input is a BST</li> <li>654. Maximum Binary Tree</li> <li>655. Print Binary Tree</li> <li>656. Coin Path</li> <li>657. Robot Return to Origin</li> <li>658. Find K Closest Elements</li> <li>659. Split Array into Consecutive Subsequences</li> <li>66. Plus One</li> <li>660. Remove 9</li> <li>661. Image Smoother</li> <li>662. Maximum Width of Binary Tree</li> <li>663. Equal Tree Partition</li> <li>664. Strange Printer</li> <li>665. Non-decreasing Array</li> <li>666. Path Sum IV</li> <li>667. Beautiful Arrangement II</li> <li>668. Kth Smallest Number in Multiplication Table</li> <li>669. Trim a Binary Search Tree</li> <li>67. Add Binary</li> <li>670. Maximum Swap</li> <li>671. Second Minimum Node In a Binary Tree</li> <li>672. Bulb Switcher II</li> <li>673. Number of Longest Increasing Subsequence</li> <li>674. Longest Continuous Increasing Subsequence</li> <li>675. Cut Off Trees for Golf Event</li> <li>676. Implement Magic Dictionary</li> <li>677. Map Sum Pairs</li> <li>678. Valid Parenthesis String</li> <li>679. 24 Game</li> <li>68. Text Justification</li> <li>680. Valid Palindrome II</li> <li>681. Next Closest Time</li> <li>682. Baseball Game</li> <li>683. K Empty Slots</li> <li>684. Redundant Connection</li> <li>685. Redundant Connection II</li> <li>686. Repeated String Match</li> <li>687. Longest Univalue Path</li> <li>688. Knight Probability in Chessboard</li> <li>689. Maximum Sum of 3 Non-Overlapping Subarrays</li> <li>69. Sqrt(x)</li> <li>690. Employee Importance</li> <li>691. Stickers to Spell Word</li> <li>692. Top K Frequent Words</li> <li>693. Binary Number with Alternating Bits</li> <li>694. Number of Distinct Islands</li> <li>695. Max Area of Island</li> <li>696. Count Binary Substrings</li> <li>697. Degree of an Array</li> <li>698. Partition to K Equal Sum Subsets</li> <li>699. Falling Squares</li> <li>7. Reverse Integer</li> <li>70. Climbing Stairs</li> <li>700. Search in a Binary Search Tree</li> <li>701. Insert into a Binary Search Tree</li> <li>702. Search in a Sorted Array of Unknown Size</li> <li>703. Kth Largest Element in a Stream</li> <li>704. Binary Search</li> <li>705. Design HashSet</li> <li>706. Design HashMap</li> <li>707. Design Linked List</li> <li>708. Insert into a Sorted Circular Linked List</li> <li>709. To Lower Case</li> <li>71. Simplify Path</li> <li>710. Random Pick with Blacklist</li> <li>711. Number of Distinct Islands II</li> <li>712. Minimum ASCII Delete Sum for Two Strings</li> <li>713. Subarray Product Less Than K</li> <li>714. Best Time to Buy and Sell Stock with Transaction Fee</li> <li>715. Range Module</li> <li>716. Max Stack</li> <li>717. 1-bit and 2-bit Characters</li> <li>718. Maximum Length of Repeated Subarray</li> <li>719. Find K-th Smallest Pair Distance</li> <li>72. Edit Distance</li> <li>720. Longest Word in Dictionary</li> <li>721. Accounts Merge</li> <li>722. Remove Comments</li> <li>723. Candy Crush</li> <li>724. Find Pivot Index</li> <li>725. Split Linked List in Parts</li> <li>726. Number of Atoms</li> <li>727. Minimum Window Subsequence</li> <li>728. Self Dividing Numbers</li> <li>729. My Calendar I</li> <li>73. Set Matrix Zeroes</li> <li>730. Count Different Palindromic Subsequences</li> <li>731. My Calendar II</li> <li>732. My Calendar III</li> <li>733. Flood Fill</li> <li>734. Sentence Similarity</li> <li>736. Parse Lisp Expression</li> <li>737. Sentence Similarity II</li> <li>738. Monotone Increasing Digits</li> <li>739. Daily Temperatures</li> <li>74. Search a 2D Matrix</li> <li>740. Delete and Earn</li> <li>741. Cherry Pickup</li> <li>742. Closest Leaf in a Binary Tree</li> <li>743. Network Delay Time</li> <li>744. Find Smallest Letter Greater Than Target</li> <li>745. Prefix and Suffix Search</li> <li>746. Min Cost Climbing Stairs</li> <li>747. Largest Number At Least Twice of Others</li> <li>748. Shortest Completing Word</li> <li>749. Contain Virus</li> <li>75. Sort Colors</li> <li>750. Number Of Corner Rectangles</li> <li>751. IP to CIDR</li> <li>752. Open the Lock</li> <li>753. Cracking the Safe</li> <li>754. Reach a Number</li> <li>755. Pour Water</li> <li>756. Pyramid Transition Matrix</li> <li>757. Set Intersection Size At Least Two</li> <li>758. Bold Words in String</li> <li>759. Employee Free Time</li> <li>76. Minimum Window Substring</li> <li>760. Find Anagram Mappings</li> <li>761. Special Binary String</li> <li>762. Prime Number of Set Bits in Binary Representation</li> <li>763. Partition Labels</li> <li>764. Largest Plus Sign</li> <li>765. Couples Holding Hands</li> <li>766. Toeplitz Matrix</li> <li>767. Reorganize String</li> <li>768. Max Chunks To Make Sorted II</li> <li>769. Max Chunks To Make Sorted</li> <li>77. Combinations</li> <li>770. Basic Calculator IV</li> <li>771. Jewels and Stones</li> <li>772. Basic Calculator III</li> <li>773. Sliding Puzzle</li> <li>774. Minimize Max Distance to Gas Station</li> <li>775. Global and Local Inversions</li> <li>776. Split BST</li> <li>777. Swap Adjacent in LR String</li> <li>778. Swim in Rising Water</li> <li>779. K-th Symbol in Grammar</li> <li>78. Subsets</li> <li>780. Reaching Points</li> <li>781. Rabbits in Forest</li> <li>782. Transform to Chessboard</li> <li>783. Minimum Distance Between BST Nodes</li> <li>784. Letter Case Permutation</li> <li>785. Is Graph Bipartite?</li> <li>786. K-th Smallest Prime Fraction</li> <li>787. Cheapest Flights Within K Stops</li> <li>788. Rotated Digits</li> <li>789. Escape The Ghosts</li> <li>79. Word Search</li> <li>790. Domino and Tromino Tiling</li> <li>791. Custom Sort String</li> <li>792. Number of Matching Subsequences</li> <li>793. Preimage Size of Factorial Zeroes Function</li> <li>794. Valid Tic-Tac-Toe State</li> <li>795. Number of Subarrays with Bounded Maximum</li> <li>796. Rotate String</li> <li>797. All Paths From Source to Target</li> <li>798. Smallest Rotation with Highest Score</li> <li>799. Champagne Tower</li> <li>8. String to Integer (atoi)</li> <li>80. Remove Duplicates from Sorted Array II</li> <li>800. Similar RGB Color</li> <li>801. Minimum Swaps To Make Sequences Increasing</li> <li>802. Find Eventual Safe States</li> <li>803. Bricks Falling When Hit</li> <li>804. Unique Morse Code Words</li> <li>805. Split Array With Same Average</li> <li>806. Number of Lines To Write String</li> <li>807. Max Increase to Keep City Skyline</li> <li>808. Soup Servings</li> <li>809. Expressive Words</li> <li>81. Search in Rotated Sorted Array II</li> <li>810. Chalkboard XOR Game</li> <li>811. Subdomain Visit Count</li> <li>812. Largest Triangle Area</li> <li>813. Largest Sum of Averages</li> <li>814. Binary Tree Pruning</li> <li>815. Bus Routes</li> <li>816. Ambiguous Coordinates</li> <li>817. Linked List Components</li> <li>818. Race Car</li> <li>819. Most Common Word</li> <li>82. Remove Duplicates from Sorted List II</li> <li>820. Short Encoding of Words</li> <li>821. Shortest Distance to a Character</li> <li>822. Card Flipping Game</li> <li>823. Binary Trees With Factors</li> <li>824. Goat Latin</li> <li>825. Friends Of Appropriate Ages</li> <li>826. Most Profit Assigning Work</li> <li>827. Making A Large Island</li> <li>828. Count Unique Characters of All Substrings of a Given String</li> <li>829. Consecutive Numbers Sum</li> <li>83. Remove Duplicates from Sorted List</li> <li>830. Positions of Large Groups</li> <li>831. Masking Personal Information</li> <li>832. Flipping an Image</li> <li>833. Find And Replace in String</li> <li>834. Sum of Distances in Tree</li> <li>835. Image Overlap</li> <li>836. Rectangle Overlap</li> <li>837. New 21 Game</li> <li>838. Push Dominoes</li> <li>839. Similar String Groups</li> <li>84. Largest Rectangle in Histogram</li> <li>840. Magic Squares In Grid</li> <li>841. Keys and Rooms</li> <li>842. Split Array into Fibonacci Sequence</li> <li>843. Guess the Word</li> <li>844. Backspace String Compare</li> <li>845. Longest Mountain in Array</li> <li>846. Hand of Straights</li> <li>847. Shortest Path Visiting All Nodes</li> <li>848. Shifting Letters</li> <li>849. Maximize Distance to Closest Person</li> <li>85. Maximal Rectangle</li> <li>850. Rectangle Area II</li> <li>851. Loud and Rich</li> <li>852. Peak Index in a Mountain Array</li> <li>853. Car Fleet</li> <li>854. K-Similar Strings</li> <li>855. Exam Room</li> <li>856. Score of Parentheses</li> <li>857. Minimum Cost to Hire K Workers</li> <li>858. Mirror Reflection</li> <li>859. Buddy Strings</li> <li>86. Partition List</li> <li>860. Lemonade Change</li> <li>861. Score After Flipping Matrix</li> <li>862. Shortest Subarray with Sum at Least K</li> <li>863. All Nodes Distance K in Binary Tree</li> <li>864. Shortest Path to Get All Keys</li> <li>865. Smallest Subtree with all the Deepest Nodes</li> <li>866. Prime Palindrome</li> <li>867. Transpose Matrix</li> <li>868. Binary Gap</li> <li>869. Reordered Power of 2</li> <li>87. Scramble String</li> <li>870. Advantage Shuffle</li> <li>871. Minimum Number of Refueling Stops</li> <li>872. Leaf-Similar Trees</li> <li>873. Length of Longest Fibonacci Subsequence</li> <li>874. Walking Robot Simulation</li> <li>875. Koko Eating Bananas</li> <li>876. Middle of the Linked List</li> <li>877. Stone Game</li> <li>878. Nth Magical Number</li> <li>879. Profitable Schemes</li> <li>88. Merge Sorted Array</li> <li>880. Decoded String at Index</li> <li>881. Boats to Save People</li> <li>882. Reachable Nodes In Subdivided Graph</li> <li>883. Projection Area of 3D Shapes</li> <li>884. Uncommon Words from Two Sentences</li> <li>885. Spiral Matrix III</li> <li>886. Possible Bipartition</li> <li>887. Super Egg Drop</li> <li>888. Fair Candy Swap</li> <li>889. Construct Binary Tree from Preorder and Postorder Traversal</li> <li>89. Gray Code</li> <li>890. Find and Replace Pattern</li> <li>891. Sum of Subsequence Widths</li> <li>892. Surface Area of 3D Shapes</li> <li>893. Groups of Special-Equivalent Strings</li> <li>894. All Possible Full Binary Trees</li> <li>895. Maximum Frequency Stack</li> <li>896. Monotonic Array</li> <li>897. Increasing Order Search Tree</li> <li>898. Bitwise ORs of Subarrays</li> <li>899. Orderly Queue</li> <li>9. Palindrome Number</li> <li>90. Subsets II</li> <li>900. RLE Iterator</li> <li>901. Online Stock Span</li> <li>902. Numbers At Most N Given Digit Set</li> <li>903. Valid Permutations for DI Sequence</li> <li>904. Fruit Into Baskets</li> <li>905. Sort Array By Parity</li> <li>906. Super Palindromes</li> <li>907. Sum of Subarray Minimums</li> <li>908. Smallest Range I</li> <li>909. Snakes and Ladders</li> <li>91. Decode Ways</li> <li>910. Smallest Range II</li> <li>911. Online Election</li> <li>912. Sort an Array</li> <li>913. Cat and Mouse</li> <li>914. X of a Kind in a Deck of Cards</li> <li>915. Partition Array into Disjoint Intervals</li> <li>916. Word Subsets</li> <li>917. Reverse Only Letters</li> <li>918. Maximum Sum Circular Subarray</li> <li>919. Complete Binary Tree Inserter</li> <li>92. Reverse Linked List II</li> <li>920. Number of Music Playlists</li> <li>921. Minimum Add to Make Parentheses Valid</li> <li>922. Sort Array By Parity II</li> <li>923. 3Sum With Multiplicity</li> <li>924. Minimize Malware Spread</li> <li>925. Long Pressed Name</li> <li>926. Flip String to Monotone Increasing</li> <li>927. Three Equal Parts</li> <li>928. Minimize Malware Spread II</li> <li>929. Unique Email Addresses</li> <li>93. Restore IP Addresses</li> <li>930. Binary Subarrays With Sum</li> <li>931. Minimum Falling Path Sum</li> <li>932. Beautiful Array</li> <li>933. Number of Recent Calls</li> <li>934. Shortest Bridge</li> <li>935. Knight Dialer</li> <li>936. Stamping The Sequence</li> <li>937. Reorder Data in Log Files</li> <li>938. Range Sum of BST</li> <li>939. Minimum Area Rectangle</li> <li>94. Binary Tree Inorder Traversal</li> <li>940. Distinct Subsequences II</li> <li>941. Valid Mountain Array</li> <li>942. DI String Match</li> <li>943. Find the Shortest Superstring</li> <li>944. Delete Columns to Make Sorted</li> <li>945. Minimum Increment to Make Array Unique</li> <li>946. Validate Stack Sequences</li> <li>947. Most Stones Removed with Same Row or Column</li> <li>948. Bag of Tokens</li> <li>949. Largest Time for Given Digits</li> <li>95. Unique Binary Search Trees II</li> <li>950. Reveal Cards In Increasing Order</li> <li>951. Flip Equivalent Binary Trees</li> <li>952. Largest Component Size by Common Factor</li> <li>953. Verifying an Alien Dictionary</li> <li>954. Array of Doubled Pairs</li> <li>955. Delete Columns to Make Sorted II</li> <li>956. Tallest Billboard</li> <li>957. Prison Cells After N Days</li> <li>958. Check Completeness of a Binary Tree</li> <li>959. Regions Cut By Slashes</li> <li>96. Unique Binary Search Trees</li> <li>960. Delete Columns to Make Sorted III</li> <li>961. N-Repeated Element in Size 2N Array</li> <li>962. Maximum Width Ramp</li> <li>963. Minimum Area Rectangle II</li> <li>964. Least Operators to Express Number</li> <li>965. Univalued Binary Tree</li> <li>966. Vowel Spellchecker</li> <li>967. Numbers With Same Consecutive Differences</li> <li>968. Binary Tree Cameras</li> <li>969. Pancake Sorting</li> <li>97. Interleaving String</li> <li>970. Powerful Integers</li> <li>971. Flip Binary Tree To Match Preorder Traversal</li> <li>972. Equal Rational Numbers</li> <li>973. K Closest Points to Origin</li> <li>974. Subarray Sums Divisible by K</li> <li>975. Odd Even Jump</li> <li>976. Largest Perimeter Triangle</li> <li>977. Squares of a Sorted Array</li> <li>978. Longest Turbulent Subarray</li> <li>979. Distribute Coins in Binary Tree</li> <li>98. Validate Binary Search Tree</li> <li>981. Time Based Key-Value Store</li> <li>982. Triples with Bitwise AND Equal To Zero</li> <li>983. Minimum Cost For Tickets</li> <li>984. String Without AAA or BBB</li> <li>985. Sum of Even Numbers After Queries</li> <li>986. Interval List Intersections</li> <li>987. Vertical Order Traversal of a Binary Tree</li> <li>988. Smallest String Starting From Leaf</li> <li>989. Add to Array-Form of Integer</li> <li>99. Recover Binary Search Tree</li> <li>990. Satisfiability of Equality Equations</li> <li>991. Broken Calculator</li> <li>992. Subarrays with K Different Integers</li> <li>993. Cousins in Binary Tree</li> <li>994. Rotting Oranges</li> <li>995. Minimum Number of K Consecutive Bit Flips</li> <li>996. Number of Squareful Arrays</li> <li>997. Find the Town Judge</li> <li>998. Maximum Binary Tree II</li> <li>999. Available Captures for Rook</li> </ul>"}]}